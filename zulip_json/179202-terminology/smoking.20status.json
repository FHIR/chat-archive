[
    {
        "content": "<p>Argonaut follows MU in labeling \"77176002 |Smoker (finding)|\" as \"Smoker, current status unknown.\" Does this mean \"We don't know how to assign one of the more specific MU codes,\" or does it actually change the meaning of the code? Which label should be sent? (and can I cross-post this to Argonaut thread?)</p>",
        "id": 153992318,
        "sender_full_name": "Jay Lyle",
        "timestamp": 1535723748
    },
    {
        "content": "<p>Current smoker is a synonym so I'd argue that it's changing the meaning.</p>",
        "id": 153992325,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1535725103
    },
    {
        "content": "<p>I suspect that what was intended (at least originally) by that description is something like \"this person is a smoker - and that's all that we know\".  But I'm not certain about that, and the way it is stated makes an interpretation of \"we don't know if this person is currently a smoker\" pretty likely (if not inevitable).  But even adding the notion of unknown to it at all is a change in meaning, so I agree with Michael.  This is a problem and it should be changed.  If that description is used at all it would have to be in CodeableConcept.text (although, as just mentioned, that isn't a good idea).  But since it isn't from SNOMED (the US or International Edition) it isn't allowable at all in Coding.display - the only terms that are allowed there are the SNOMED CT synonyms \"Smoker\" and \"Current smoker\".  The best way (and the only way, I think) to cross-post is to post the link to the discussion in this topic (<a href=\"#narrow/stream/48-terminology/subject/smoking.20status\" title=\"#narrow/stream/48-terminology/subject/smoking.20status\">here</a>) also as a new topic in the Argonaut stream, or to move the discussion there and post the link to that topic back here.</p>",
        "id": 153992398,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1535740359
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191985\">@Jay Lyle</span> , where do you get the \"follows MU\" part? Where does \"MU\" say this? As for Argonuts - well, there you are.;.</p>",
        "id": 153992473,
        "sender_full_name": "Robert McClure",
        "timestamp": 1535767817
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191503\">@Robert McClure</span>  \"2015 Edition Certification Companion Guide<br>\n2015 Edition Common Clinical Data Set - 45 CFR 170.102\"</p>",
        "id": 153992539,
        "sender_full_name": "Eric Haas",
        "timestamp": 1535780402
    },
    {
        "content": "<p>Thanks, all. <br>\n1. The SCT code means current (or at time of record), as Michael points out.<br>\n2. The Argonaut list also contains children of Smoker, including occasional, light, daily, and heavy smoker. Within that context, \"status unknown\" seems (to me) to mean \"intensity unknown\"--like NOS. (I have yet to find a use of \"status\" I'm really happy with.)<br>\n3. Proposed answer:  Since the Coding requires the SCT description, we'll use that in Coding, and since we're inferring it (from health factors), the CodeableConcept.text gets the original text, and the Argonaut label has no place in the instance, so it can't confuse the recipient. Based on 1 &amp; 2, this is good.  Cross-posting to Argonauts.</p>",
        "id": 153992560,
        "sender_full_name": "Jay Lyle",
        "timestamp": 1535807609
    },
    {
        "content": "<p>I'll just add to be sure that whenever this code is used that the intended meaning is \"Current smoker\", without any further specialization, and it doesn't mean that the smoking status (current or otherwise) is \"unknown\".</p>",
        "id": 153992561,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1535807963
    },
    {
        "content": "<p>Agreed. And the data type, fortunately, prevents the introduction of confusion into the instance.</p>",
        "id": 153992673,
        "sender_full_name": "Jay Lyle",
        "timestamp": 1535928163
    },
    {
        "content": "<p>How do we know what the recipient want? the regulatory text or the SCT description?</p>",
        "id": 153992885,
        "sender_full_name": "Eric Haas",
        "timestamp": 1536021294
    },
    {
        "content": "<p>Reminder, any time we talk Argonaut/US Core the same data element is also in C-CDA.</p>",
        "id": 153992952,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1536065338
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191410\">@Brett Marquard</span> Actually while the element is \"the same\" the issue here is that the 2015 CCDS published by ONC broke a cardinal rule in the document published <a href=\"https://www.healthit.gov/sites/default/files/ccds_reference_document_v1_1.pdf\" target=\"_blank\" title=\"https://www.healthit.gov/sites/default/files/ccds_reference_document_v1_1.pdf\">here</a> by changing the text of the description of code \"Smoker\" (77176002) to mean something different. Luckily anyone that downloads a value set from a reputable source (;-) should not get that description, they will get the official one. Unfortunately, US Core followed suit in copying that into the display <a href=\"http://build.fhir.org/ig/HL7/US-Core/ValueSet-us-core-observation-ccdasmokingstatus.html\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/US-Core/ValueSet-us-core-observation-ccdasmokingstatus.html\">here</a>, as did Argonaut <a href=\"http://build.fhir.org/ig/argonautproject/data-query/ValueSet-observation-ccdasmokingstatus.html\" target=\"_blank\" title=\"http://build.fhir.org/ig/argonautproject/data-query/ValueSet-observation-ccdasmokingstatus.html\">here</a>. I'll note that each of these is <em>a different value set, with a different defining url</em>. I'm hoping that most FHIR terminology servers will not include that improper description, and just return \"Smoker\". I'm trying to test that now...</p>",
        "id": 153993216,
        "sender_full_name": "Robert McClure",
        "timestamp": 1536096987
    },
    {
        "content": "<p>Related question: <a href=\"http://hl7.org/fhir/STU3/datatypes.html#Coding\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/datatypes.html#Coding\">coding </a> states regarding display: \"The display is a text representation of the code defined by the system and is used to display the meaning of the code by an application that is not aware of the system.\" Is there any constraint that it must be a particular representation? SCT has \"Anesthetics\"; we'd like to use synonym \"Anesthesiology.\"</p>",
        "id": 153995941,
        "sender_full_name": "Jay Lyle",
        "timestamp": 1536702942
    },
    {
        "content": "<p>well, you are allowed to override the display in a value set, but not in a Coding - there, it must be a valid display as defined in the code system; you use CodeableConcept.text instead</p>",
        "id": 153995947,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536703277
    },
    {
        "content": "<p>It can be any valid SNOMED CT synonym for that concept (although it should be available in the edition/version that you're using, of course).  Normally it's best for it to be the 'Preferred' term in the language reference set that you (and the server) are using.  In this case that's \"Anesthetics\", but \"Anesthesiology\" is an 'Acceptable' synonym term in SNOMED CT (I assume you're using the US Edition) and therefore it's acceptable to use it for this concept in Coding.display, too.</p>",
        "id": 153995950,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1536703777
    },
    {
        "content": "<p>Interesting - \"Anesthesiology\" is not an acceptable term for 394577000 | Anesthetics (qualifier value) | in SNOMED CT-AU</p>",
        "id": 153996094,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1536711740
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> did you mean to say that the Coding.display must match the display of code as determined by the ValueSet (as opposed to the CodeSystem)?</p>",
        "id": 153996095,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1536711808
    },
    {
        "content": "<p>no I didn't mean to say that</p>",
        "id": 153996096,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536711820
    },
    {
        "content": "<p>So a ValueSet bound to a Coding cannot change the display text for a code?</p>",
        "id": 153996098,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1536711881
    },
    {
        "content": "<p>no and there's a dislocation here: the value set can specify a different display for the drop-down, but you have to use the code system display in the Coding that results from that</p>",
        "id": 153996100,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536711947
    },
    {
        "content": "<p>Ew</p>",
        "id": 153996101,
        "sender_full_name": "Jim Steel",
        "timestamp": 1536711984
    },
    {
        "content": "<p>So the clinician may have been selecting different text, and there's no way to record that (if its a Coding)?</p>",
        "id": 153996102,
        "sender_full_name": "Jim Steel",
        "timestamp": 1536712033
    },
    {
        "content": "<p>not if it's a coding. but you should never have a coding where that would arise. And if you find one, it's a design error in the resource (or possibly the profile)</p>",
        "id": 153996103,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536712300
    },
    {
        "content": "<p>our guidance is: you should never use a Coding directly unless you are very sure about the limitations on it's use</p>",
        "id": 153996104,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536712317
    },
    {
        "content": "<p>It seems like a way to clarify/enforce that would be to explicitly say that you should never bind a Coding-typed field to a ValueSet that overrides display text/s</p>",
        "id": 153996108,
        "sender_full_name": "Jim Steel",
        "timestamp": 1536712373
    },
    {
        "content": "<p>ImagingStudy.series.bodySite ?<br>\nWhat about alternate displays that come from a CodeSystem.supplement?</p>",
        "id": 153996109,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1536712592
    },
    {
        "content": "<p>He said the 's' word. 20c in the swear jar.</p>",
        "id": 153996110,
        "sender_full_name": "Jim Steel",
        "timestamp": 1536712649
    },
    {
        "content": "<p>supplement defined displays are in the code system</p>",
        "id": 153996114,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536715785
    },
    {
        "content": "<p>Agree to say that you should never bind a coding type element to a value set that defines displays not in the code system</p>",
        "id": 153996115,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536715813
    },
    {
        "content": "<p>so following this thread, it would see a CR needs to be filed against ImagingStudy for the various elements that are Coding that should be CodableConcept?</p>",
        "id": 153996283,
        "sender_full_name": "John Moehrke",
        "timestamp": 1536766129
    },
    {
        "content": "<p>Yes, I think that's a reasonable conclusion, John.  The Coding instances in ImagingStudy are all Extensible or Example bindings and they don't seem to meet the <a href=\"http://build.fhir.org/datatypes.html#Coding\" target=\"_blank\" title=\"http://build.fhir.org/datatypes.html#Coding\">guidance</a> of \"The Coding data type is used directly when there is certainty that the value must be selected directly from one of the available codes, and the list of possible codes is agreed to by all participants\".</p>",
        "id": 153996401,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1536792511
    },
    {
        "content": "<p>In the US Core Profile, the LOINC Code 72166-2 is used for Observation.code.<br>\nHowever, Observation.value binds to a SNOMED-ValueSet rather than the \"normative answer list\" documented with this code<br>\n<a href=\"https://s.details.loinc.org/LOINC/72166-2.html?sections=Comprehensive\" target=\"_blank\" title=\"https://s.details.loinc.org/LOINC/72166-2.html?sections=Comprehensive\">https://s.details.loinc.org/LOINC/72166-2.html?sections=Comprehensive</a></p>\n<p>Isn't there an expectation that if you use a LOINC code for Observation.code that Observation.value should conform to the LOINC answer list?</p>",
        "id": 154575398,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1546873886
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span>  No, there isn't any expectation like that from LOINC or HL7 or elsewhere, as far as I know.  The availability of LOINC answer list codes is somewhat more recent, and I believe that US Core is following the more longstanding notion that \"LOINC is the question and SNOMED is the answer\".  None of that is absolute.  I'm sure that LOINC is quite happy for the LOINC answer codes to be used, but there isn't a specific expectation or requirement about it.  It's up to the particular IG regarding what is done for this, and I don't see a problem with the way that it is specified in US Core now.</p>",
        "id": 154580485,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1546877910
    },
    {
        "content": "<p>Thanks Rob!</p>",
        "id": 154580729,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1546878131
    },
    {
        "content": "<p>Actually <span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> I think it's more complicated than that. The smoking status code you cite is actually used by Dan in his blog <a href=\"https://danielvreeman.com/proper-use-of-loinc-question-codes-with-assessment-instrument-methods/\" target=\"_blank\" title=\"https://danielvreeman.com/proper-use-of-loinc-question-codes-with-assessment-instrument-methods/\">here</a> which says:</p>\n<blockquote>\n<p><strong>Normative lists</strong> are those specifically defined by a validated instrument or other authoritative source. Basically, if you want to use this LOINC term, you have to use exactly this set of possible answers.</p>\n</blockquote>\n<p>Now I think many of us (<span class=\"user-mention\" data-user-id=\"191978\">@Daniel Vreeman</span> ?) think that we can use <em>exactly aligned</em> SNOMED CT codes that match the answers.</p>",
        "id": 154877933,
        "sender_full_name": "Robert McClure",
        "timestamp": 1547159739
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> <span class=\"user-mention\" data-user-id=\"191503\">@Robert McClure</span> does raise a good point.  Dan's blog post at least appears to be stating this considerably more stringently than I described, but the post doesn't mention SNOMED, including how LOINC and SNOMED are to be used together, and I'm not entirely certain how the guidance is to be transferred to that situation.  But the post does state clearly that you must pay attention to the method, and if a code specifies a particular assessment method and a normative answer list, as this one does, then you should either use those exact answers or you should be using a different code.  In this case, the SNOMED CT value set that US Core binds to does have codes for the exact same 8 answers (even with a slight display term difference shown in US Core for 2 of the codes, the US edition preferred term synonym for those codes is identical to the LOINC term) - so I think that follows Dan's guidance just fine.  What I did notice that <strong>is</strong> slightly different, though, is that US Core has an extensible binding to the value set rather than a required binding (which the LOINC normative answer list likely would imply) - so potentially other answer codes outside of the value set could be used in an instance of this US Core Observation profile which would <strong>not</strong> be in accord with the LOINC guidance or the instrument it is based on.  I think it would be good to clarify this a bit further with <span class=\"user-mention\" data-user-id=\"191978\">@Daniel Vreeman</span> in San Antonio.</p>",
        "id": 154889923,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1547175446
    },
    {
        "content": "<p>Please ping me when discussing this in San Antonio.<br>\nThis looks very important to me, especially since I also follow the best practice Rob mentions (LOINC is the question, SNOMED, or some other code system in non-SNOMED regions of the world, is the answer).<br>\nThis may also affect IGs across all technologies, not only FHIR. Therefor I'd like to ping <span class=\"user-mention\" data-user-id=\"194952\">@Julian Sass</span> (not fully sure he'll be at the WGM)</p>",
        "id": 154892500,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1547179316
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span> I expect some discussion will occur impromptu, but we can definitely do that.</p>",
        "id": 154939768,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1547234391
    },
    {
        "content": "<p>Hi all...a quick bit of background. LOINC's answer lists can be either intensionally or extensionally defined. When we enumerate the possible choices, we use LOINC Answer codes (string identifiers) as the main ID for the allowed options. In the context of that list, we also often provide the local \"label/code\" for that choice as it appears on the form (often 1,2,3,4 or A,b,c,d, etc). We can also provide mappings to other codes (e.g. from SNOMED CT) where we have them and is allowed by licensing. Ok, for normative lists, as described in the LOINC Users Guide (and in my blog post), we say that to use a LOINC term with a NORMATIVE bound answer list you must be using that term in the same manner as specified by the list. I.e. you must have the same possible answer set (with the caveat about Null Flavors). It is NOT required that you use the LA (LOINC Answer) codes to identify the response values when exchanging/storing data. From the LOINC perspective, you could use no codes (just text), local codes, LA codes, exactly equivalent alternate codings, or some combination of all these and it would be fine. Your choice about this may be influenced by many factors. But, for example, using exact match SNOMED CT concepts would work. There are cases where that might be the best choice, and there are other cases (terms/lists) where there are no corresponding SNOMED CT concepts, and/or you want to capture the exact answer choice as it appears on the form, and/or there are licensing issues you want to avoid, where the LA coded answers may be your best choice. One last note about this particular term is that it represents the question of smoking status as defined by the CDC's NHIS instrument and is very widely used. (These answers were the categories MU defined/required, so fits that context). It sounds like a great choice for use in US Core, but it would not be valid to use a different set of smoking status categories as the allowed answer set when using this LOINC observation code. Hope this helps...happy to discuss more if needed.</p>",
        "id": 155164148,
        "sender_full_name": "Daniel Vreeman",
        "timestamp": 1547554059
    },
    {
        "content": "<p>Thanks, Dan.  Can you clarify how this should apply when there is a binding to a value set containing a set of SNOMED CT codes exactly matching the answer list (so that's good), but the binding is <strong>extensible</strong> rather than required, so there is a possibly that other codes outside of that answer list and value set could be used?  I think based on what you've said (in the blog and here) that isn't allowed.  So, if that's the case, then I think that US Core will need to change that binding strength?</p>",
        "id": 155165282,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1547555351
    },
    {
        "content": "<p>it is listed as <code>extensible + max valueset</code> binding  which mean required but text only allowed.  The publishing framework doesn't reflect those nuances.</p>",
        "id": 155182139,
        "sender_full_name": "Eric Haas",
        "timestamp": 1547568955
    },
    {
        "content": "<p>make a task...</p>",
        "id": 155186177,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1547572153
    },
    {
        "content": "<p>BTW ...  I was not criticizing the tool nor expecting it behave differently,  this is edge case stuff and I document these bindings in the guidance but probably could do a better job on that.</p>",
        "id": 155203939,
        "sender_full_name": "Eric Haas",
        "timestamp": 1547586111
    },
    {
        "content": "<p>Makes sense.  But as I understand the LOINC guidance we've been looking at, if you extend the value set at all then you can't use that LOINC code.  So the max and min value set would need to be the same (which is certainly a rather obscure way to do it) or the binding would need to be required instead of extensible.</p>",
        "id": 155223216,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1547607104
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span>   I think you need to look at max value extension again.  this is only way to make a required binding or text only option.   So for a <em>required</em> binding for  valueset  consisting of concepts ['foo', 'bar'] you can only have 'foo' or 'bar' codes and no text only in a Codeable element.  so <code>\"my_codeable_element\": {\"text\" : \"my text only repr of element\"}</code>  would be invalid.  With the magic of the <a href=\"http://build.fhir.org/extension-elementdefinition-maxvalueset.html\" target=\"_blank\" title=\"http://build.fhir.org/extension-elementdefinition-maxvalueset.html\">max value extension</a>.  You get your cake and eat it too because you get the extensible binding functionality of allowing the text only as valid representation of <code>my_codeable_element </code>  but have locked down the <em>extensible</em> binding to the max number of values within the Valueset like a required binding.</p>",
        "id": 155248681,
        "sender_full_name": "Eric Haas",
        "timestamp": 1547640812
    },
    {
        "content": "<p>Ok, I see what you're getting at, Eric, regarding preserving the text only option.  I hadn't tried to verify that the min and max bindings were indeed the same, but that makes sense.  It is a little kludgey that we have to do it this way, though (but that is not in any way your fault).  It would probably be difficult to do anything to change it now, but it could be nice to find a somewhat more explicit and clear option for specifying this.</p>",
        "id": 155249014,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1547641139
    },
    {
        "content": "<p>The alternative is to create  a bunch of new bindings ( I think if you are looking at elementdefinition you passed obscure a while ago.) I agree that to <em>really</em>  be required need to have both minValue = maxValue.  In US Core only have MaxValue and that may be the intent,  I forget and need to go in the way back machine and look at my notes,  since we discussed this at length.</p>",
        "id": 155249578,
        "sender_full_name": "Eric Haas",
        "timestamp": 1547641811
    }
]