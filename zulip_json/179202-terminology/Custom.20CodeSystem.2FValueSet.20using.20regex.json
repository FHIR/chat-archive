[
    {
        "content": "<p>I have a question about defining a custom CodeSystem where I want the corresponding ValueSet to allow code values based on a regex expression. For example, I would like to allow for code values that match the following regex - \"code\\\\([1-9][0-9]*\\\\)\".</p>\n<p>Would the following CodeSystem and ValueSet correctly define and allow for these types of codes?</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>CodeSystem using regex</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>&lt;CodeSystem xmlns=\"<a href=\"http://hl7.org/fhir\">http://hl7.org/fhir</a>\"&gt;<br>\n  &lt;id value=\"codesystem-code-with-index\"/&gt;<br>\n  &lt;url value=\"http://example.com/CodeSystem/codesystem-code-with-index\"/&gt;<br>\n  &lt;version value=\"1.0\"/&gt;<br>\n  &lt;status value=\"active\"/&gt;<br>\n  &lt;date value=\"2021-05-12\"/&gt;<br>\n  &lt;description value=\"Define a set of codes based on regex.\"/&gt;<br>\n  &lt;caseSensitive value=\"true\"/&gt;<br>\n  &lt;content value=\"complete\"/&gt;<br>\n  &lt;filter&gt; <br>\n    &lt;code value=\"code-with-index\"/&gt;<br>\n    &lt;description value=\"This filter is a regex to express the value 'code' followed by a parenthentically enclosed positive integer representing an index value.\"/&gt;<br>\n    &lt;operator value=\"regex\"/&gt;<br>\n    &lt;value value=\"code\\([1-9][0-9]*\\)\"/&gt;<br>\n  &lt;/filter&gt;<br>\n&lt;/CodeSystem&gt;</p>\n</div></div>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>ValueSet using regex</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>&lt;ValueSet xmlns=\"<a href=\"http://hl7.org/fhir\">http://hl7.org/fhir</a>\"&gt;<br>\n  &lt;id value=\"valueset-code-with-index\"/&gt;<br>\n  &lt;url value=\"http://example.com/ValueSet/valueset-code-with-index\"/&gt;<br>\n  &lt;version value=\"1.0\"/&gt;<br>\n  &lt;status value=\"active\"/&gt;<br>\n  &lt;date value=\"2021-05-12\"/&gt;<br>\n  &lt;description value=\"A set of codes based on regex.\"/&gt;<br>\n  &lt;compose&gt;<br>\n    &lt;include&gt;<br>\n      &lt;system value=\"http://example.com/CodeSystem/codesystem-code-with-index\"/&gt;<br>\n      &lt;filter&gt; <br>\n        &lt;property value=\"code-with-index\"/&gt; <br>\n        &lt;op value=\"regex\"/&gt; <br>\n        &lt;value value=\"code\\([1-9][0-9]*\\)\"/&gt; <br>\n      &lt;/filter&gt; <br>\n    &lt;/include&gt;<br>\n  &lt;/compose&gt;<br>\n&lt;/ValueSet&gt;</p>\n</div></div>",
        "id": 238536667,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1620850269
    },
    {
        "content": "<p>I'm not sure I understand.  You're trying to create a custom ValueSet from a custom CodeSystem using a regex to define which codes go into the ValueSet?</p>",
        "id": 238545790,
        "sender_full_name": "David Pyke",
        "timestamp": 1620854032
    },
    {
        "content": "<p>Correct. My goal is to support coded values based on the regex. In this example, the following coded values would be valid: \"code(1)\", \"code(14)\".  The following coded values would be invalid: \"code()\", \"code(a)\".</p>\n<p>Just wondering if this is possible (seems so from what I can see in the FHIR CodeSystem and ValueSet definitions) and, if possible, is this the correct way of defining it.</p>",
        "id": 238546420,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1620854358
    },
    {
        "content": "<p>seems more like a string than a code</p>",
        "id": 238546784,
        "sender_full_name": "John Moehrke",
        "timestamp": 1620854554
    },
    {
        "content": "<p>seems to me codes need to have a distinct meaning. so what is the distinct meaning of each of these indexes.</p>",
        "id": 238546873,
        "sender_full_name": "John Moehrke",
        "timestamp": 1620854595
    },
    {
        "content": "<p>My goal is to add the CodeSystem to an existing ValueSet so it can be used as a coded value.</p>\n<p>The concept would be that the index would be a positive integer value representing a number of iterations for the 'code'.</p>",
        "id": 238547265,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1620854829
    },
    {
        "content": "<p>I am trying to avoid defining an extension for this index value as I believe this regex code would be more elegant and less verbose than an extension.</p>",
        "id": 238547576,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1620855009
    },
    {
        "content": "<p>regex is a valid filter operator in a ValueSet, so assuming the receiving system implemented that, you should be good.</p>",
        "id": 238548795,
        "sender_full_name": "David Pyke",
        "timestamp": 1620855594
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192587\">@David Pyke</span>, thanks for the confirmation. Yes, my receiving system will understand the regex coded value - as soon as I implement it. ;-)</p>",
        "id": 238549170,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1620855804
    },
    {
        "content": "<p>Your CodeSystem contains no codes</p>",
        "id": 238549307,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1620855882
    },
    {
        "content": "<p>If you want the regex to match against codes themselves, then the filter should be defined on the <code>concept</code> property</p>",
        "id": 238549452,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1620855959
    },
    {
        "content": "<p>...or the <code>code</code> property - need to check the spec but I'm on the run just now</p>",
        "id": 238549623,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1620856033
    },
    {
        "content": "<p>CodeSystem.filter is defined at the same level as CodeSystem.concept.</p>\n<p>CodeSystem.concept does not define a nested 'filter' and CodeSystem.concept is an optional element.</p>\n<p>I guess I'm trying to understand how the CodeSystem.filter with operator = 'regex' works in relation to the ValueSet that includes that CodeSystem.</p>",
        "id": 238550066,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1620856249
    },
    {
        "content": "<p>CodeSystem.filter selects codes from a parent CodeSystem (via whatever operatior) and would present them as a list to the ValueSet.  The ValueSet would have no idea how they were selected</p>",
        "id": 238550267,
        "sender_full_name": "David Pyke",
        "timestamp": 1620856367
    },
    {
        "content": "<p>If you're subsetting a custom codesystem, you would list the individual codes there and then use the regex in the ValueSet to select what codes you wanted.</p>",
        "id": 238550388,
        "sender_full_name": "David Pyke",
        "timestamp": 1620856444
    },
    {
        "content": "<p>The CodeSystem and ValueSet operators work independently of each other</p>",
        "id": 238550475,
        "sender_full_name": "David Pyke",
        "timestamp": 1620856504
    },
    {
        "content": "<p>Ok. Got it. So it sounds like what I would like (dynamically defined coded values via a regex without an explicit list of codes) isn't the intent of the filter or something that is supported.</p>\n<p>I'm now guessing that an extension is the more appropriate approach to represent what I want.</p>",
        "id": 238550641,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1620856613
    },
    {
        "content": "<p>No, you can't create codes via regex.  An extension is what you want</p>",
        "id": 238550699,
        "sender_full_name": "David Pyke",
        "timestamp": 1620856650
    },
    {
        "content": "<p>Thanks!  I have my path forward now.  <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 238550820,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1620856717
    },
    {
        "content": "<p>We've talked about having a regex defined for code systems so that a code system that doesn't explicitly list code values could still expose a basic set of rules that describe what valid codes look like - e.g. a LOINC code being nnnn-n</p>",
        "id": 238554042,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1620858690
    },
    {
        "content": "<p>However, you don't seem to have a 'concept' with defined meaning here?</p>",
        "id": 238554057,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1620858710
    },
    {
        "content": "<p>CodeSystem.filter does NOT select codes from a parent CodeSystem.  It defines the existence of a filter that can be used in ValueSets to select a subset of codes from the CodeSystem.  There is no notion of a \"parent\" CodeSystem in FHIR.</p>",
        "id": 238555715,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1620859789
    },
    {
        "content": "<p>I thought grammars can be used as code systems.  e.g., The Sequence Variant Nomenclature aka HGVS is described in <a href=\"http://varnomen.hgvs.org\">http://varnomen.hgvs.org</a> and is listed as a code system in <a href=\"https://www.hl7.org/fhir/terminologies-systems.html\">https://www.hl7.org/fhir/terminologies-systems.html</a></p>",
        "id": 238674415,
        "sender_full_name": " Bob Milius",
        "timestamp": 1620936911
    },
    {
        "content": "<p>yes they can</p>",
        "id": 238677354,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1620938261
    }
]