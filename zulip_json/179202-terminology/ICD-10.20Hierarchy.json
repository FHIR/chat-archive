[
    {
        "content": "<p>If a value set contains a three-character ICD-10 code, are the four, five, or six character expansions under that heading implicitly included in the value set? For example, if a value set contains <code>D53 Other nutritional anemias</code>, would <code>D53.0 Protein deficiency anemia</code> be valid?  If not, is there a filter (such as is-a) that would do that?</p>",
        "id": 213062591,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1602521777
    },
    {
        "content": "<p>If you want to include specializations, the value set needs to specifically be defined using is-a.  I believe is-a is recognized for ICD-10</p>",
        "id": 213066840,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1602524436
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> That's what I hope, it would save a ton of work, but there is information to the contrary here: <a href=\"http://www.hl7.org/fhir/icd.html#4.3.11.5\">http://www.hl7.org/fhir/icd.html#4.3.11.5</a>. Am I missing something?</p>",
        "id": 213076659,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1602530356
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> ?</p>",
        "id": 213076765,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1602530410
    },
    {
        "content": "<p>Yes, that certainly implies that we haven't defined this for ICD-10 (and variants).  Some servers may already support the \"concept\" filter with 'is-a' (<a href=\"http://tx.fhir.org\">tx.fhir.org</a> may, but I would need to check).  I do think it makes sense to have it for ICD-(X).  <span class=\"user-mention\" data-user-id=\"191447\">@Mark Kramer</span> Do you want to submit a tracker?</p>",
        "id": 213077432,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1602530872
    },
    {
        "content": "<p>I think that feature would be extremely useful for specifying value sets, indeed. If you can do a tracker and check on the publication server, doubly so.</p>",
        "id": 213080922,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1602533254
    },
    {
        "content": "<p><a href=\"http://tx.fhir.org\">tx.fhir.org</a> does not.</p>",
        "id": 213085225,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602535911
    },
    {
        "content": "<p>I will do it if we agree that we should. And seems to me we should, with heirarchy = classification</p>",
        "id": 213085278,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602535934
    },
    {
        "content": "<p>one reason I don't yet is because we haven't had a full code system yet</p>",
        "id": 213085302,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602535949
    },
    {
        "content": "<p>I always interpreted that as meaning no additional ICD specific filters, but anything with relevant hierarchyMeaning should also have concept is a implicitly included.  Certainly this is how Ontoserver works</p>",
        "id": 213086119,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1602536479
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  Yes, it wouldn't have been particularly useful without the full code system - but that should be there soon (and I know I've been saying that - but it's nearly there).</p>",
        "id": 213086387,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1602536659
    },
    {
        "content": "<p>I agree with <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span></p>",
        "id": 213088365,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602538200
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191447\">@Mark Kramer</span> I assume you understand this but for the sake of clarity for others finding this thread,  you said something that is technically not true:</p>\n<blockquote>\n<p>If a value set contains a three-character ICD-10 code, are the four, five, or six character expansions under that heading implicitly included in the value set</p>\n</blockquote>\n<p>^^that is never true. (waiting for arrows...) What <strong>is true</strong> is if the CLD compose uses the is-a filter op and the value is a code that has descendants, then a terminology server that has the entire code system (content =complete) and either assumes the hierarchy represents is-a (as in Ontoserver,) or once we clarify for others that the hierarchy is in fact an is-a, should expand and produce the set of concepts you wanted.</p>",
        "id": 213090635,
        "sender_full_name": "Robert McClure",
        "timestamp": 1602540135
    },
    {
        "content": "<p>heirarchy is <code> classified-with</code> not <code>is-a</code>. But the filter <code>in</code> should work anyway</p>",
        "id": 213090718,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602540230
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I agree that is the correct relation but it's not in the required binding <a href=\"http://build.fhir.org/valueset-filter-operator.html\">FilterOperator value set</a> (at least not in the current version.) In makes no sense.</p>",
        "id": 213090937,
        "sender_full_name": "Robert McClure",
        "timestamp": 1602540433
    },
    {
        "content": "<p>umm.</p>",
        "id": 213090972,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602540463
    },
    {
        "content": "<p>guess we'll have to add something. I overlooked that one</p>",
        "id": 213090989,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602540476
    },
    {
        "content": "<p>Make a JIRA ticket ;-)</p>",
        "id": 213091086,
        "sender_full_name": "Robert McClure",
        "timestamp": 1602540552
    },
    {
        "content": "<p>I'm about to show some of my terminology ignorance here, but... <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> said:</p>\n<blockquote>\n<p>heirarchy is  <code>classified-with</code> not <code>is-a</code></p>\n</blockquote>\n<p>But SNOMED-CT uses <code>is-a</code> to represent <code>descendantOrSelfOf [concept]</code> (<a href=\"http://hl7.org/fhir/R4/snomedct.html#4.3.1.0.8.1\">link</a>), which <em>seems</em> like hierarchy to me.  So... what is the difference?</p>",
        "id": 213092158,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1602541505
    },
    {
        "content": "<p>in snomed, the heirarchy is based on is-a relationship, so heirarchy and is-a are the same thing</p>",
        "id": 213092207,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602541558
    },
    {
        "content": "<p>but icd-10 is not</p>",
        "id": 213092263,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602541587
    },
    {
        "content": "<p>Ah.  OK.  So it differs because although both systems use hierarchy, the <em>meaning</em> that the hierarchy implies is different in SNOMED than ICD-10.  Got it.  (Unless I don't, in which case I expect someone will tell me ;-)).</p>",
        "id": 213092302,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1602541665
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span>  Classification hierarchies only allow a single parent and a parent is used to collect things that vary but share some common context. For ICD it's tied to a melange of resource use, pathophysiology, and death predilection.</p>",
        "id": 213093378,
        "sender_full_name": "Robert McClure",
        "timestamp": 1602542540
    },
    {
        "content": "<p>And all the children of the same parent are disjoint/mutually exclusive with each other.</p>",
        "id": 213096613,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1602545974
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  What do you mean by \"...we haven't had a full code system yet\"?  I think you already have the official distribution (zip file) from WHO's ICD site.</p>",
        "id": 213096961,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1602546293
    },
    {
        "content": "<p>oh. I was thinking about the US distribution</p>",
        "id": 213099333,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602548933
    },
    {
        "content": "<p>Right now, we are working on how to import WHO ICD-10 and its national/regional variants.  And I'm wondering how to express the parent-children relationships (maybe also including other ones such as includes/excludes).  The Bioontology version uses an is-a for parent-child relationships, IIRC.</p>",
        "id": 213099348,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1602548958
    },
    {
        "content": "<p>Got it, thanks.</p>",
        "id": 213099370,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1602548997
    },
    {
        "content": "<p>we probably haven't clarified this enough - the code system for ICD-10 has a heirachy, with codes and displays, and the heirarchyMeaning is classified-with. so through out the fhir framework, ICD codes have parents and children, and descendents, but they do not have is-a relationships</p>",
        "id": 213099465,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602549078
    },
    {
        "content": "<p>Yes, agree.</p>",
        "id": 213099480,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1602549109
    },
    {
        "content": "<p>Maybe mutually-exclusiveness is a major feature the \"classified-with\" has  , which is ditinguish it from \"is-a\".</p>",
        "id": 213099655,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1602549300
    },
    {
        "content": "<p>well, the narrow definition of is-a is that A is-a B if all the properties of A are also properties of B (though 'meta-properties' like authoring date don't count). </p>\n<p>In classifications like ICD-10, this is not a requirement, though it is generally and mostly true anyway.</p>\n<p>So as you say, true classifications are mono-heirarchies that you treat exclusively, and also, they are not always based on is-a</p>",
        "id": 213100406,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602550204
    },
    {
        "content": "<p>As Apelon's DTS does, a useful mitigation/solution might be separating thesaurus from DL-based ontology to allow for loosely defined parent-child relationships.</p>",
        "id": 213102000,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1602551260
    },
    {
        "content": "<blockquote>\n<p>guess we'll have to add something. I overlooked that one</p>\n</blockquote>\n<p>I hope you mean \"extra words that indicate the relevant FilterOperators about about hierarchy traversal, not about hierarchyMeaning\" rather than adding a new FilterOperator <span aria-label=\"scream\" class=\"emoji emoji-1f631\" role=\"img\" title=\"scream\">:scream:</span></p>",
        "id": 213103282,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1602552763
    },
    {
        "content": "<blockquote>\n<p>But the filter <code>in</code> should work anyway</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> how is the filter <code>in</code> relevant to these hierarchy questions?</p>",
        "id": 213103381,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1602552934
    },
    {
        "content": "<p>well, the problem with what you want - which is what I would want to - is that the current filters are defined in terms of is-a. And are normative. So I didn't suggest that (I didn't suggest any particular solution)</p>",
        "id": 213105804,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602555927
    },
    {
        "content": "<p>we already talked about 'in' with LOINC</p>",
        "id": 213105813,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602555941
    },
    {
        "content": "<p>In practical terms, I'm not sure that we need to treat the classifications differently than more semantically rich and precise terminologies like SNOMED CT - the hierarchies (whether \"classified-with\" or \"is-a\") still will (or at least can) behave in the same way in regard to terminology operations.  If we (any of us) think that's not the case, we should look at some specific examples.</p>",
        "id": 213114933,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1602568968
    },
    {
        "content": "<p>The following site would return a so-called json for the ICD-10 code that user selects:<br>\n<a href=\"https://1up.health/health-data/icd10\">https://1up.health/health-data/icd10</a></p>\n<p>But it looks wierd.</p>",
        "id": 213116603,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1602571231
    },
    {
        "content": "<p>I concur with the idea of “in” or “classified-with” filter. The actual example we can use is comorbidity index, like Charlson or Elixhauser. Each comorbidity category is defined by a set of codes, frequently with elements like C45.x meaning everything “in” the C45 category. <br>\nSee <a href=\"https://cran.r-project.org/web/packages/comorbidity/vignettes/comorbidityscores.html\">https://cran.r-project.org/web/packages/comorbidity/vignettes/comorbidityscores.html</a></p>",
        "id": 213149576,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1602593844
    },
    {
        "content": "<p>It seems to me that what we should do is expand (or clarify) the meaning of the 'is-a' filter operator (and likewise also 'descendent-of' and 'generalizes') so that it is clear that it applies to and may be used with any of the transitive hierarchy meanings (e.g. 'is-a', 'classified-with', 'part-of').</p>",
        "id": 213161801,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1602599022
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191447\">@Mark Kramer</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> No matter how you want to craft an explanation of how <code>In</code> can work for LOINC, the use of <code>In</code> for parsing pieces of the ICD code structure should be absolutely out of bounds. Otherwise we'll be telling people to parse code text structure using <code>In</code> anywhere they want to. Please, let's not do this. We have a structure for the concepts <strong>USE IT</strong>.</p>",
        "id": 213165857,
        "sender_full_name": "Robert McClure",
        "timestamp": 1602600408
    },
    {
        "content": "<p>\"in\" is a set-membership concept.  I don't know where parsing comes into play. But I agree it is not what we want for ICD categories.</p>",
        "id": 213201726,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1602615441
    },
    {
        "content": "<p>Agree.</p>",
        "id": 213215726,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1602622701
    },
    {
        "content": "<blockquote>\n<p>is expand (or clarify) the meaning of the 'is-a' filter operator (and likewise also 'descendent-of' and 'generalizes') so that it is clear that it applies to and may be used with any of the transitive hierarchy meanings (e.g. 'is-a', 'classified-with', 'part-of'</p>\n</blockquote>\n<p>I'd be happy with this in principle but I'm concerned about whether this is procedurally possible</p>",
        "id": 213215839,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602622766
    },
    {
        "content": "<p>Can you expand on what you think \"is (not) procedurally possible\"?</p>",
        "id": 213219324,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1602624532
    },
    {
        "content": "<p>changing the definition of <code>is-a</code> like that</p>",
        "id": 213221572,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602625869
    },
    {
        "content": "<p>Our approach is that hierarchy is represented with parent/child edges (properties) and that is-a and friends are about transitive traversal of these edges.  With this lens, the interpretation is purely structural.  The hierarchyMeaning field of the CodeSystem then tells you what the semantics of the structure are, but this is distinct from the filter operators.<br>\nThe alternative is a separate set of filter operators for each hierarchyMeaning and that doesn't help anyone AFAICT.</p>",
        "id": 213222272,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1602626371
    },
    {
        "content": "<p>in principle I agree with that but that's not the current definitions, and wishful thinking won't make procedural issues go away</p>",
        "id": 213222643,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602626621
    },
    {
        "content": "<p>Yes, I agree with what Michael just said.  And before I saw that I had written this:</p>\n<blockquote>\n<p>As I mentioned before, there are two different 'is-a' concepts here - they have the same description (obviously), and there's certainly a relationship, but the definitions and contexts of use are different.  If we interpret the 'is-a' filter operator \"strictly\" and decide that means that we need to add another concept for the 'classified-with' filter, then I think that we will also have to do the same for 'descendent-of' and 'generalizes', because all three of them are described as being \"by subsumption\" and they share the \"Includes all concept ids that have a transitive is-a relationship\" either with/from \"the concept Id provided as the value\" as the first (and primary) part of their definitions.  It doesn't seem to me like that is something that is either actually necessary or desirable to do.</p>\n</blockquote>\n<p>And Michael's description of this as \"purely structural\" is exactly what I am getting at.</p>",
        "id": 213222996,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1602626856
    },
    {
        "content": "<p>and I'd like to agree with that. My question isn't about desire, it's procedural</p>",
        "id": 213223388,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602627106
    },
    {
        "content": "<p>Is this the is-a definition you mean?</p>\n<blockquote>\n<p>The definition of is-a is that all the properties of the value are true for the specified property of the code, which means that a code has an is-a relationship with itself.</p>\n</blockquote>",
        "id": 213223728,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1602627334
    },
    {
        "content": "<p>yes</p>",
        "id": 213223732,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602627342
    },
    {
        "content": "<p>I think it's a clarification that the definitions of the filter concepts are structural based on transitive traversal of the edges , as Michael said - and the rest is essentially descriptive in regard to how it applies in the case of the \"is-a\" based hierarchy, but that it is applicable to the other hierarchies in the same way based on their structure.  It should break nothing that currently exists and is being done.</p>",
        "id": 213223748,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1602627356
    },
    {
        "content": "<p>Because that is contingent on which properties you consider to be in scooe</p>",
        "id": 213223752,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1602627361
    },
    {
        "content": "<p>Scope</p>",
        "id": 213223832,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1602627398
    },
    {
        "content": "<p>It doesn't hold, in the SNOMED case, for non defining props or things like effectiveTime, moduleId, primitive, etc</p>",
        "id": 213223982,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1602627522
    },
    {
        "content": "<blockquote>\n<p>It should break nothing that currently exists and is being done.</p>\n</blockquote>\n<p>That's where my problem is. redefining the meaning will not exclude codes that are being included, but it may include codes that are presently being excluded.</p>\n<p>For instance, if I have a code system that has both is-a relationships, as well as part-of (and we do have them), what does is-a mean? It only includes part-of if they are the heirarchy?</p>",
        "id": 213224033,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602627578
    },
    {
        "content": "<p>Procedurally we can clarify / fix this with appropriate consultation?</p>",
        "id": 213224036,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1602627582
    },
    {
        "content": "<p>In that case I would expect hierarchyMeaning to be is-a and part of to be irrelevant</p>",
        "id": 213224131,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1602627650
    },
    {
        "content": "<p>There's no mechanism for two hierarchies</p>",
        "id": 213224158,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1602627674
    },
    {
        "content": "<p>that's according to the current definition. but if we redefine it as requested, then we make a mess of that case</p>",
        "id": 213224180,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602627693
    },
    {
        "content": "<p>I don't believe so. There's still only one hierarchy</p>",
        "id": 213224208,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1602627717
    },
    {
        "content": "<p>really? which one?</p>",
        "id": 213224249,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602627725
    },
    {
        "content": "<p>The one that the CodeSystem chooses (and nominates with hierarchyMeaning).</p>",
        "id": 213224289,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1602627760
    },
    {
        "content": "<p>It'll be a mess if partOf is chosen, but I would argue that would be no different today</p>",
        "id": 213224326,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1602627788
    },
    {
        "content": "<p>because right now, you could choose either property on which to base the heirarchy but the definition of is-a is not linked up to the heirarchy, but the is-a property. We're proposing changing that, and I think that's problematic, as much as I think it would be good if we can</p>",
        "id": 213224331,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602627791
    },
    {
        "content": "<p>Is there a CodeSystem with is-a semantics that uses hierarchy to represent part-of?</p>",
        "id": 213224504,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1602627908
    },
    {
        "content": "<p>well, no. but there should be. The definition of <a href=\"https://terminology.hl7.org/CodeSystem-v3-AddressPartType.html\">https://terminology.hl7.org/CodeSystem-v3-AddressPartType.html</a> is incorrect - the heirarchy meaning should be part-of, not is-a, but the heirarchy is correct.</p>",
        "id": 213224617,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602627995
    },
    {
        "content": "<p>DAL and SAL are <code>part-of</code> AL not <code>is-a</code> AL?  The hierarchy, such as it is, looks fine to me, as do the partOf properties.</p>",
        "id": 213224948,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1602628229
    },
    {
        "content": "<p>yes. I personally think that's not necessary, but that's how it's defined, and the MIF import has missed that</p>",
        "id": 213224985,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602628262
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span>)</p>",
        "id": 213224994,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602628268
    },
    {
        "content": "<p>Basically, where it says \"transitive is-a relationship\" in the filter-operator code system concept definitions, that would become \"transitive hierarchical relationship\" (or at least that's how it could be interpreted) and then we could also clarify that the hierarchy being referred to is the one that is declared by CodeSystem.hierarchyMeaning.</p>",
        "id": 213225530,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1602628485
    },
    {
        "content": "<p>Or are you saying that the CodeSystem would be \"better\" if part-of had been represented in the hierarchy rather than as a property?</p>",
        "id": 213225542,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1602628495
    },
    {
        "content": "<p>that code system is representing part-of in the heirarchy, it just doesn't declare it so</p>",
        "id": 213225574,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602628523
    },
    {
        "content": "<p>When I look at the HTML rendering and the JSON, the only hierarchy I see is <code>AL</code> as a parent of <code>DAL</code> and <code>SAL</code>.  I also see that <code>BNR</code> has a property <code>partOf</code> to <code>SAL</code>.  So I don't understand what you mean?</p>",
        "id": 213226270,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1602628841
    },
    {
        "content": "<p>no apparently I didn't read it carefully enough.</p>",
        "id": 213226999,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602629392
    },
    {
        "content": "<p>but if we had chosen to reflect the part-of relationship in the heirarchy then the redefinition would be a problem.</p>",
        "id": 213227067,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602629425
    },
    {
        "content": "<p>if we can be confident that there are no code systems out there with is-a relationships and that have a heirarchy that isn't based on is-a, then redefinition would work. I'm still not sure what the procedural basis for it is</p>",
        "id": 213227105,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602629470
    },
    {
        "content": "<p>I see the following relevant pieces of text (<a href=\"https://www.hl7.org/fhir/versions.html#f-compat\">https://www.hl7.org/fhir/versions.html#f-compat</a>):</p>\n<blockquote>\n<p>Descriptive information about a resource - short labels, definitions, usage notes, aliases, examples, rationale, mappings, etc. may be updated or revised to provide additional clarity or guidance, but not in such a manner as to invalidate a reasonable interpretation of the previously documented use of an element. (This does not preclude fixing obvious errors.)</p>\n</blockquote>\n<p>and</p>\n<blockquote>\n<p>Definitions and display values for codes may change, but only in a manner that would not change the reasonable interpretation of data captured using the previous definitions or names.</p>\n</blockquote>\n<p>Also:</p>\n<blockquote>\n<p>NOTE: In rare circumstances, HL7 may approve changes that technically break one of the above rules in situations where there is a high level of confidence that the change will not impact existing implementers. Such deviations from these declared rules will involve broad notification, extensive community consultation and reviews by multiple levels of HL7 governance processes</p>\n</blockquote>\n<p>So, if we are comfortable of a consensus that the proposed change doesn't invalidate reasonable interpretations of the current wording, then we should be ok?</p>",
        "id": 213233482,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1602634573
    },
    {
        "content": "<p>I think we are it the final of the 3 spaces, yes</p>",
        "id": 213233830,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602634983
    }
]