[
    {
        "content": "<p>For secondary use of data it is common to want to map large sets of clinical codes to a small number of category/classification codes. Currently the only way to express these maps is to explicitly enumerate all the correspondences.  However, it may be that these large source sets can be efficiently / succinctly described in a ValueSet with a few inclusion/exclusion filters.  Having to then effectively expand this ValueSet to enumerate the mapping is inefficient and a potentially significant maintenance burden.<br>\nWhat we'd like to be able to do is have a ConceptMap whether the source and/or target (<code>ConceptMap.group.element</code> and/or <code>ConceptMap.group.element.target</code>) can be a ValueSet reference (URI) instead of a code</p>",
        "id": 153941110,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1519786821
    },
    {
        "content": "<p>As a simple example, you could easily express that a parent code and all of its descendants map to the same target in just one entry</p>",
        "id": 153941112,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1519786991
    },
    {
        "content": "<p>Should<br>\n (ConceptMap.group.element and/or ConceptMap.group.element)<br>\nbe<br>\n (ConceptMap.group.element and/or ConceptMap.group.element.target)<br>\n?</p>",
        "id": 153941113,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1519787576
    },
    {
        "content": "<p>yes, corrected :)</p>",
        "id": 153941114,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1519787987
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> this makes a lot of sense to me.</p>",
        "id": 153941296,
        "sender_full_name": "Robert McClure",
        "timestamp": 1519855421
    },
    {
        "content": "<p>Excellent, I’ll start putting together a Gforge ticket for a specific proposal</p>",
        "id": 153941302,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1519857188
    },
    {
        "content": "<p>Yes, that would be good.  How often do you think you (or anyone) will want to have a parent code and all of its descendants map to the same target (a single concept, I presume)?  Of course that will be needed at times, but I'm not sure how often.  I assume you probably have some other more complex cases in mind?  And I guess I can wait for the tracker to find out.</p>",
        "id": 153941310,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1519858933
    },
    {
        "content": "<p>Very often in fact. Of course there are other use cases with more complex or curated ValueSets, but it’s a major thing when going from clinical data to secondary use contexts</p>",
        "id": 153941313,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1519859496
    },
    {
        "content": "<p>so the question is whether this is solvable by adding a 'and descendents' flag - which seems like a pretty common use case to me, actually. Or whether there's more that is needed</p>",
        "id": 153941364,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519867438
    },
    {
        "content": "<p>More is needed, definitely.  The descendants use case is just a simple one, but normally a ValueSet will be required, eg to exclude one or two selected concepts from a descendants query, or because there's already one or more code lists (ValueSets) being maintained in another context that describe the mapping</p>",
        "id": 153941406,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1519875765
    },
    {
        "content": "<p>Do you have one or more specific examples that you can share?</p>",
        "id": 153941409,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1519875943
    },
    {
        "content": "<p>Sure, consider a secondary use where you need to report whether or not a patient has diabetes.  This would by type 1 / 2 but not gestational, and the source data is SNOMED codes.  In this case you might have a ValueSet that is all descendants of Diabetes mellitus, but excluding Diabetes mellitus in remission and its descendants as well as excluding Gestational diabetes mellitus and its descendants.  These would map to YES.  You might then map No abnormality detected and its descendants to NO, with unmapped giving a null flavour. (Although I may be over cooking the example by going for a three-valued logic instead of just YES/NO.)</p>",
        "id": 153941414,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1519876952
    },
    {
        "content": "<p>Task created: <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=15687\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=15687\">GF#15687</a></p>",
        "id": 153941720,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1519965238
    },
    {
        "content": "<p>Michael is spot on.  <br>\nIts really important to have richness in the expressivity if these maps.  We want to dramatically reduce the clinical burden of providing information to politicians, managers and regulators and expressive maps are a key component.  We either do this within the FHIR environment or as a bolt-on afterwards with all the challenges that leads to.<br>\nA particular use case will be for subscription to published message flows to meet privacy concerns.  If we can tie secondary use of the care data to a specific legal purpose we can avoid subscribing to data we don't need which removes a critical barrier to taking the data we do need.</p>",
        "id": 153942327,
        "sender_full_name": "Nicholas Oughtibridge (NHS)",
        "timestamp": 1520237442
    }
]