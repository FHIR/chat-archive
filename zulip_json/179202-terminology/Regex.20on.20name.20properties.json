[
    {
        "content": "<p><code>name.matches('[A-Z]([A-Za-z0-9_]){0,254}')</code>  Interestingly, this doesn't permit the use of hyphens which (depending on your test engine of choice) may result in the warning ... \"Name should be usable as an identifier for the module by machine processing applications such as code generation\".  One would think that as hyphens are used in concept identifiers by some code systems (e.g. LOINC), they would be permitted in name properties?</p>",
        "id": 160346636,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1552100675
    },
    {
        "content": "<p>The purpose of 'name' is to be software friendly - it should be a valid class name.  And dashes aren't allowed in class names in most languages because '-' is an operator.</p>",
        "id": 160347002,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1552101147
    },
    {
        "content": "<p>You can translate the dashes to underscores for the purposes of generating a valid name if you like.</p>",
        "id": 160347017,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1552101191
    },
    {
        "content": "<p>That makes sense - I'd never equated those name properties with class and object names in source code (doh - although in my implementation, using the C# library, these are object property names, not object or class names). Good solution, I'd just coded it myself! Also have to ensure that the first character is an upper case letter.</p>",
        "id": 160347612,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1552102190
    }
]