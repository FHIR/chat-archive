[
    {
        "content": "<p>I've written a post about decoupling terminology and FHIR servers - <a href=\"https://medium.com/@niquola/two-phase-fhir-terminology-e52e1b105f6d\" target=\"_blank\" title=\"https://medium.com/@niquola/two-phase-fhir-terminology-e52e1b105f6d\">https://medium.com/@niquola/two-phase-fhir-terminology-e52e1b105f6d</a>. It would be great to get your feedback!</p>",
        "id": 164541833,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1556633404
    },
    {
        "content": "<p>A good write up <span class=\"user-mention\" data-user-id=\"191318\">@nicola (RIO/SS)</span> ,but you might like to add a small section on the $closure opertation, and how that might be useful for the split setup. Then I think that's more or less complete.</p>",
        "id": 164582647,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1556663616
    },
    {
        "content": "<p>Interesting post. I'm not sure about creating a Concept Resource with links to ValueSets as that would create circular references. There are some other challenges with that general approach, for example not all Code Systems facilitate concept permanence and you've got to tackle the versioning issue in that properties (including active status) of a concept can change from one edition to another. I still favour the proxy approach whereby a 'general/clinical' FHIR server passes Terminology Operation Calls to a specialist FHIR Terminology Server. The notion of a single, autonomous, FHIR Server that covers the whole specification is unrealistic - even Grahame's server doesn't implement everything!</p>",
        "id": 164587198,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1556668183
    },
    {
        "content": "<p>Just skimming, GET /ValueSet/v1/$expand?_filter=x should probably be <code>filter</code>, not <code>_filter</code></p>",
        "id": 164597869,
        "sender_full_name": "Jim Steel",
        "timestamp": 1556682864
    },
    {
        "content": "<p>If you want to handle (a bounded set of) implicit ValueSets, it might be worth linking from Concepts to ValueSets by URI/version rather than (or as well as) by id</p>",
        "id": 164599260,
        "sender_full_name": "Jim Steel",
        "timestamp": 1556684967
    },
    {
        "content": "<p>An interesting approach. How do you propose to handle infinite code systems and those with post coordination?</p>",
        "id": 164666831,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1556753211
    },
    {
        "content": "<p>Good question. What other infinite code system than ucum?</p>",
        "id": 164676934,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1556766824
    },
    {
        "content": "<p>From terminology service point of view, what means handle post-coordination? Parse expression on validation?</p>",
        "id": 164677076,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1556767042
    },
    {
        "content": "<p>SNOMED is practically infinite if you include post-coordination</p>",
        "id": 164677122,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556767083
    },
    {
        "content": "<p>Do we have infinite ValueSets?</p>",
        "id": 164677206,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1556767249
    },
    {
        "content": "<p>Potentially, yes - if they are intensionally defined and based on an \"infinite\" code system.</p>",
        "id": 164677227,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1556767313
    },
    {
        "content": "<p>Does anyone use it in practice? ;)</p>",
        "id": 164677294,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1556767398
    },
    {
        "content": "<p>There are quite a few value sets that say things like \"all UCUM codes\" or \"all SNOMED codes\" or even \"all SNOMED Procedure codes\"</p>",
        "id": 164677296,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556767401
    },
    {
        "content": "<p>And Grahame validates them</p>",
        "id": 164677299,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556767411
    },
    {
        "content": "<p>So long as you know the code system and the grammar, you can do it.  But you don't do it by expanding all the options ahead of time :)</p>",
        "id": 164677308,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556767442
    },
    {
        "content": "<p>Looks like ucum is more than just terminology.</p>",
        "id": 164677377,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1556767524
    },
    {
        "content": "<p>About post coordination - iâ€™m really not a fan of expressions in code - can we imagine structured way to work with it? Or at least use something like .expression element to mark it explicitly. I think, it would be source of mistakes and confusion in real apps</p>",
        "id": 164677552,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1556767757
    },
    {
        "content": "<p>We have to handle units of measure on search and comparison. The essential difference of ucum - it involves not only codes, but quantity values as well. One approach is to have automatic translation on save to some canonical units. Does any existing FHIR server handle it properly?</p>",
        "id": 164678176,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1556768709
    },
    {
        "content": "<p>Yes, I think Vonk does this.</p>",
        "id": 164678182,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1556768728
    },
    {
        "content": "<p>well, not translation on save; but translation on search.</p>",
        "id": 164678186,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1556768758
    },
    {
        "content": "<p>There are an infinite number of ValueSets we use for SNOMED (hierarchy, ECL), and a very large number for LOINC (hierarchy, answer lists)</p>",
        "id": 164678233,
        "sender_full_name": "Jim Steel",
        "timestamp": 1556768779
    },
    {
        "content": "<p>Josh, is it possible to do it efficiently ? ;)</p>",
        "id": 164678239,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1556768813
    },
    {
        "content": "<p>Jim, can you give more details about infinite loinc?</p>",
        "id": 164678473,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1556769171
    },
    {
        "content": "<p>Lots of systems don't treat post-coordinated terms any differently than regular terms.  Would you want \"cm\" or \"mg\" flagged as \".expression\"?  Because that's what they are...  It also creates a dividing line between the post and pre-coordinated terms which is contrary to the objectives of terminologies that support post-coordination.  (And there's no hope of coming up with a common framework for them - every system that does it does it differently.)</p>",
        "id": 164679243,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556770402
    },
    {
        "content": "<blockquote>\n<p>Josh, is it possible to do it efficiently ? ;)</p>\n</blockquote>\n<p>For <strong>units</strong>, sure -- just canonicalize each stored value, and canonicalize all searches.</p>",
        "id": 164702741,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1556799770
    },
    {
        "content": "<p>most of the big terminologies have some kind of grammar. You might not like it, but it's not going away</p>",
        "id": 164780602,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556876269
    },
    {
        "content": "<p>so your approach is a reasonable one except for grammar, but that won't go away.</p>",
        "id": 164780691,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556876373
    },
    {
        "content": "<p>I don't think that if we define a Concept resource- which might happen - it will include the value set denormalization  - that would be extension space. Since it's only valid for a particular set of expansions</p>",
        "id": 164780789,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556876421
    },
    {
        "content": "<p>but also, there is not one single expansion - there's a set of expansions depending on the use of the value set</p>",
        "id": 164780806,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556876446
    },
    {
        "content": "<ul>\n<li>see the expansion parameters</li>\n</ul>",
        "id": 164780828,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556876466
    },
    {
        "content": "<p>What problem does a Concept resource solve?</p>",
        "id": 164845502,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1556937347
    },
    {
        "content": "<p>authoring terminologies, and in particular, ad-hoc definition of pieces of knowledge  that are not actually in a formal code system</p>",
        "id": 164855945,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556956407
    }
]