[
    {
        "content": "<p>Hello <br>\nI'm having a hard time wrapping my head around 'Authorized Reps' and how they will be able to access information. I see 2 scenarios:<br>\n1) I'm not a member, but I am authorized to view the information of 1 or more members<br>\n2) I'm a member, and I'm also authorized to view the information of 1 or more members</p>\n<p>once an authorized rep logs in, and they can view more than 1 member's information, how do they pick which one to proceed with?<br>\nIn my mind, if I give each authorized rep a new login, and associate the login to 1 member, I can make this work. But it breaks other scenarios.</p>\n<p>Can someone steer me in the right direction please?</p>",
        "id": 216140807,
        "sender_full_name": "Neophytos Iacovou",
        "timestamp": 1604954772
    },
    {
        "content": "<p>The client uses the <code>launch/patient</code> scope to request a specific patient, and the server prompts the user to select the member they want to share the data of (if the user has more than one), something like this:<br>\n<a href=\"/user_uploads/10155/we23aZ2p78czm2aCqcNCyW1V/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/we23aZ2p78czm2aCqcNCyW1V/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/we23aZ2p78czm2aCqcNCyW1V/image.png\"></a></div>",
        "id": 216141222,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1604955022
    },
    {
        "content": "<p>The id of the selected patient (member) is returned to the client app in the token response</p>",
        "id": 216141256,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1604955054
    },
    {
        "content": "<p>I've also found this discussion extremely helpful, <a href=\"#narrow/stream/204607-CARIN-IG.20for.20Blue.20Button.C2.AE/topic/Personal.20representative.20business.20rules\">https://chat.fhir.org/#narrow/stream/204607-CARIN-IG.20for.20Blue.20Button.C2.AE/topic/Personal.20representative.20business.20rules</a></p>",
        "id": 216154268,
        "sender_full_name": "Neophytos Iacovou",
        "timestamp": 1604963047
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191912\">Michele Mottini</span> <a href=\"#narrow/stream/204607-CARIN-IG.20for.20Blue.20Button.C2.AE/topic/Authorized.20Reps/near/216141222\">said</a>:</p>\n<blockquote>\n<p>The client uses the <code>launch/patient</code> scope to request a specific patient, and the server prompts the user to select the member they want to share the data of (if the user has more than one), something like this:<br>\n<a href=\"/user_uploads/10155/we23aZ2p78czm2aCqcNCyW1V/image.png\">image.png</a></p>\n</blockquote>\n<p>that is a great example btw, may I ask:<br>\na) The patient ID is part of the access token response (patient property). Are you returning a list of patientID? ? Are you doing patient/<em>.read and not user/</em>.read ?<br>\nb)  What happens  after i select a user and click 'allow access'? call the authorization endpoint for a new access token for the selected user?</p>",
        "id": 216155912,
        "sender_full_name": "Neophytos Iacovou",
        "timestamp": 1604964334
    },
    {
        "content": "<blockquote>\n<p>Are you returning a list of patientID? ? Are you doing patient/.read and not user/.read ?</p>\n</blockquote>\n<p>Only the id of the patient that was selected. Yes, typically the client would specify patient access scopes, <code>patient/*.read</code></p>\n<blockquote>\n<p>What happens after i select a user and click 'allow access'? call the authorization endpoint for a new access token for the selected user?</p>\n</blockquote>\n<p>You are not selecting a user - the user is whoever logged in - you are just selecting the patients to use amongst all those the user can access.</p>",
        "id": 216157368,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1604965518
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191912\">Michele Mottini</span> <a href=\"#narrow/stream/204607-CARIN-IG.20for.20Blue.20Button.C2.AE/topic/Authorized.20Reps/near/216157368\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Are you returning a list of patientID? ? Are you doing patient/.read and not user/.read ?</p>\n</blockquote>\n<p>Only the id of the patient that was selected. Yes, typically the client would specify patient access scopes, <code>patient/*.read</code></p>\n<blockquote>\n<p>What happens after i select a user and click 'allow access'? call the authorization endpoint for a new access token for the selected user?</p>\n</blockquote>\n<p>You are not selecting a user - the user is whoever logged in - you are just selecting the patients to use amongst all those the user can access.</p>\n</blockquote>\n<p>you are correct I used the wrong wording.</p>\n<p>Does it work like this?</p>\n<ul>\n<li>as part of the launch the fhirUser is requested</li>\n<li>assuming it is provided, the application uses the claim as a url, retrieves the fhir resource the url is pointing to</li>\n<li>if the resource on the other end of the url is a Patient, then the user is the same as the patient information is requested of</li>\n<li>if, however, the resource is a Person, then the user is not guaranteed to be one of the patients they are able to ask for information about. In the Person resource the 'link' attribute is an array associating any number of targets (for example Patient) to the user. the client app can follow each of the targets to present a list of resources back to the user. </li>\n</ul>\n<p>am I putting it all together correctly?</p>",
        "id": 216168146,
        "sender_full_name": "Neophytos Iacovou",
        "timestamp": 1604976881
    },
    {
        "content": "<p>No, that is not correct. The authorization server handles the patient selection, not the client. The screen-shot I posted above is something the server has. The client app gets back just a token and a patient ID, and use those to get the data.</p>",
        "id": 216216049,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1605017483
    },
    {
        "content": "<p>clearly i'm the most uneducated person in this room regarding this topic. Is this spelled out someplace that I need to read to understand?<br>\nI really don't want my authorization server, for example okta, to have to understand the mandate nor my data</p>",
        "id": 216234450,
        "sender_full_name": "Neophytos Iacovou",
        "timestamp": 1605025035
    },
    {
        "content": "<p>What the spec says is that clients can request a patient in context from the server (<a href=\"http://hl7.org/fhir/smart-app-launch/scopes-and-launch-context/index.html#requesting-context-with-scopes\">http://hl7.org/fhir/smart-app-launch/scopes-and-launch-context/index.html#requesting-context-with-scopes</a>) - how that is accomplished is totally up to the server, but if the user that is logging in has access to multiple patient pretty much the solution everyone chose is for the server to ask the user to pick one, and I am not sure what other possibilities do exits.<br>\nThis is the way FHIR-based patient access API have been working for years now. And yes, it does mean that the authorization server needs to know things about the data.</p>",
        "id": 216238621,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1605026738
    },
    {
        "content": "<p>I'm working on designing how the auth server will support authorized reps.  The approach I have currently in mind pretty much lines up with the discussion above - member selection on the permissions screen.  I'm trying to think through how to minimize impact to the end user and came up with the following:</p>\n<ul>\n<li>Client app would need to know to re-initiate the authorize workflow when the user wants to switch/add patient context</li>\n<li>Login cookie can be used to avoid the need to log in again</li>\n<li>User would be required to click through the permissions screen (and make a member selection)</li>\n</ul>\n<p>I'm also a little apprehensive that client apps know the way to give their users access to other authorized members is to re-initiate the authorize workflow.  Based on the discussion above, it sounds like this is the de facto way to do it.  Are we pretty safe in moving in that direction?</p>",
        "id": 216949177,
        "sender_full_name": "Spencer Kathol",
        "timestamp": 1605570536
    },
    {
        "content": "<p>Yes, that's the direction. Apps can mess up things on their side mixing data from different person, but not much that can be done about that server-side.</p>",
        "id": 216950270,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1605571345
    }
]