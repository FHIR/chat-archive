[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194452\">@Bas van den Heuvel</span> <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span>  I don't have a 30-second summary version of Context Event Service (CES), but do have some good working material. The main reference implementation materials are (1) service <a href=\"https://github.com/preston/context-event-service\" target=\"_blank\" title=\"https://github.com/preston/context-event-service\">https://github.com/preston/context-event-service</a>, and (2) exemplar (optional) client library for Angular and React apps <a href=\"https://github.com/preston/context-event-client\" target=\"_blank\" title=\"https://github.com/preston/context-event-client\">https://github.com/preston/context-event-client</a> . The example apps themselves don't seem online at the moment. The are a few exemplar complex event processing \"agent\" templates included in the CES server reference, including clock event generation which is super useful for client development and debugging.</p>",
        "id": 155210787,
        "sender_full_name": "Preston Lee",
        "timestamp": 1547592096
    },
    {
        "content": "<p>thx</p>",
        "id": 155210846,
        "sender_full_name": "Bas van den Heuvel",
        "timestamp": 1547592139
    },
    {
        "content": "<p>Here is the poster from MCBK 2018: <a href=\"/user_uploads/10155/ij_xeGHz4WerIORjHAhXtF-M/ARTAKA-CES-Poster-MCBK.pdf\" target=\"_blank\" title=\"ARTAKA-CES-Poster-MCBK.pdf\">ARTAKA-CES-Poster-MCBK.pdf</a></p>",
        "id": 155210873,
        "sender_full_name": "Preston Lee",
        "timestamp": 1547592182
    },
    {
        "content": "<p>And discussion starting at absolute page 81 of the attached. (really sorry for the length.. dissertation) <a href=\"/user_uploads/10155/dxx6Efzuwj--IDRe9_Wp_cr_/Automated-Injection-of-Curated-Knowledge-Into-Real-Time-Clinical-Systems-CDS-Architecture-for-the-21st-Century.pdf\" target=\"_blank\" title=\"Automated-Injection-of-Curated-Knowledge-Into-Real-Time-Clinical-Systems-CDS-Architecture-for-the-21st-Century.pdf\">Automated-Injection-of-Curated-Knowledge-Into-Real-Time-Clinical-Systems-CDS-Architecture-for-the-21st-Century.pdf</a></p>",
        "id": 155210972,
        "sender_full_name": "Preston Lee",
        "timestamp": 1547592270
    },
    {
        "content": "<p>HSPC's reference implementation of the HL7 Marketplace R1 specification is here <a href=\"https://github.com/preston/hsp-marketplace-server\" target=\"_blank\" title=\"https://github.com/preston/hsp-marketplace-server\">https://github.com/preston/hsp-marketplace-server</a> , and the intent is to remove the older websockets stuff and replace with either CES or, more ideally, some form reconciled CES/FHIRcast capability.</p>",
        "id": 155211103,
        "sender_full_name": "Preston Lee",
        "timestamp": 1547592399
    },
    {
        "content": "<p>There are concepts adapted from other domains (notably event \"timeline\" partitioning from the simulation space) that can be ignored if desired. Ultimately, the design intent is to make the common cases trivial for developers to get started with yet allow for extremely advanced cases possible, e.g. knowledge-driven applications and providing CDS as a dynamic, continuous stream of events that may be previously unknown to the client(s), as opposed to forcing clients to manually invoke external support services.</p>",
        "id": 155211813,
        "sender_full_name": "Preston Lee",
        "timestamp": 1547593051
    },
    {
        "content": "<p>But ignoring all that and just using it as glorified CCOW is also fine :)</p>",
        "id": 155211827,
        "sender_full_name": "Preston Lee",
        "timestamp": 1547593071
    },
    {
        "content": "<p>Hey Preston,<br>\nI'm reading through parts of your dissertation. I'd like to learn from your efforts and research to inform FHIRcast. Our strategy with FHIRcast is implementer-first. We've focused on available, simply understood, and an accessible specification along with the resources to get a developer up and running with minimal time and effort required.</p>",
        "id": 155261007,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1547651910
    },
    {
        "content": "<p>Overall, (I think) your <a href=\"https://zulip-uploads.s3.amazonaws.com/10155/dxx6Efzuwj--IDRe9_Wp_cr_/Automated-Injection-of-Curated-Knowledge-Into-Real-Time-Clinical-Systems-CDS-Architecture-for-the-21st-Century.pdf?Signature=7RhOm2Os1TWy78I5l%2Bwx4LUnXu4%3D&amp;Expires=1547649070&amp;AWSAccessKeyId=AKIAIEVMBCAT2WD3M5KQ\" target=\"_blank\" title=\"https://zulip-uploads.s3.amazonaws.com/10155/dxx6Efzuwj--IDRe9_Wp_cr_/Automated-Injection-of-Curated-Knowledge-Into-Real-Time-Clinical-Systems-CDS-Architecture-for-the-21st-Century.pdf?Signature=7RhOm2Os1TWy78I5l%2Bwx4LUnXu4%3D&amp;Expires=1547649070&amp;AWSAccessKeyId=AKIAIEVMBCAT2WD3M5KQ\">December, 2018 dissertation</a> is an informative/narrative description of a context event publishing, distribution and brokering system for the purpose of creating an event stream for clinical decision support.</p>",
        "id": 155261055,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1547651949
    },
    {
        "content": "<p>I see the use of SSE as problematic do to the prevalence of classic IE in healthcare provider IT environments. Our discussion on this happened/is happening in <a href=\"https://github.com/fhircast/docs/issues/33\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/33\">#33</a>.</p>",
        "id": 155264510,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1547654445
    },
    {
        "content": "<p>I found this diagram helpful to understand CES:<br>\n<a href=\"/user_uploads/10155/LhRjDD4s5x31_Wlhsu6vw1vM/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/LhRjDD4s5x31_Wlhsu6vw1vM/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/LhRjDD4s5x31_Wlhsu6vw1vM/pasted_image.png\"></a></div>",
        "id": 155265089,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1547654922
    },
    {
        "content": "<p>(Note that the Hub/Broker stores and exposes a historical record of events via the \"timeline\". A client requests context changes/events by creating an alternate timeline via REST.)</p>",
        "id": 155265264,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1547655064
    }
]