[
    {
        "content": "<p>ONLY the contents under <a href=\"https://fhircast.hl7.org/specification/May2019Ballot/\" target=\"_blank\" title=\"https://fhircast.hl7.org/specification/May2019Ballot/\">https://fhircast.hl7.org/specification/May2019Ballot/</a> are in this balloting cycle? Other content, like <a href=\"https://fhircast.hl7.org/launch-scenarios/\" target=\"_blank\" title=\"https://fhircast.hl7.org/launch-scenarios/\">https://fhircast.hl7.org/launch-scenarios/</a>,  are not in this cycle. Is that correct?</p>",
        "id": 163506715,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1555448473
    },
    {
        "content": "<p>Hey Yunwei, technically, yes. With that said, your attention to any FHIRcast content would be valuable and appreciated. Feel free to log <a href=\"https://github.com/HL7/fhircast-docs/issues\" target=\"_blank\" title=\"https://github.com/HL7/fhircast-docs/issues\">github issues</a> as well.</p>",
        "id": 163581674,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1555521587
    },
    {
        "content": "<p>Hi Isaac, If we have suggestions for new content (e.g. new events) for the IG, should they be logged via the ballot or github?</p>",
        "id": 164013887,
        "sender_full_name": "Ken Sinn",
        "timestamp": 1556042668
    },
    {
        "content": "<p>Hey Ken, I hope to push all of the ballot comments into github issues for transparency, so if a ballot comment is convenient for you, that would be better.</p>",
        "id": 164019679,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1556046414
    },
    {
        "content": "<p>Fyi - Ballot commenting is closed! We got 161 comments. All submitted ballot comments are now also <a href=\"https://github.com/HL7/fhircast-docs/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+is%3Aopen+label%3Aballot\" target=\"_blank\" title=\"https://github.com/HL7/fhircast-docs/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+is%3Aopen+label%3Aballot\">github issues</a>. This should help provide additional clarity, transparency and history to the ballot issues identified.</p>",
        "id": 164571536,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1556654474
    },
    {
        "content": "<p>shoutout to <span class=\"user-mention\" data-user-id=\"194452\">@Bas van den Heuvel</span> , <span class=\"user-mention\" data-user-id=\"194356\">@Will Maethner</span> , <span class=\"user-mention\" data-user-id=\"192127\">@Phillip Warner</span> , <span class=\"user-mention\" data-user-id=\"219204\">@Ricardo Quintano</span> , <span class=\"user-mention\" data-user-id=\"192143\">@Ken Sinn</span> , <span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span> , <span class=\"user-mention\" data-user-id=\"191749\">@Anthony(Tony) Julian</span> <span class=\"user-mention\" data-user-id=\"191968\">@Ioana Singureanu</span> for the thoughtful and thorough comments.</p>",
        "id": 164575336,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1556657311
    },
    {
        "content": "<p>Would be happy to discuss with you, and help if I can.</p>\n<p>Anthony (Tony) Julian FHL7,MQF|IT Technical Specialist II|EIA Platform|Information Technology|Phone: 507-293-8384|Fax: upon request|E-mail: ajulian@mayo.edu&lt;mailto:<a href=\"mailto:ajulian@mayo.edu\" title=\"mailto:ajulian@mayo.edu\">ajulian@mayo.edu</a>&gt;<br>\nMayo Clinic | 200 First Street S.W. | Rochester, MN 55905 | www.mayoclinic.org&lt;<a href=\"http://www.mayoclinic.org/\" target=\"_blank\" title=\"http://www.mayoclinic.org/\">http://www.mayoclinic.org/</a>&gt;</p>",
        "id": 164576476,
        "sender_full_name": "Anthony(Tony) Julian",
        "timestamp": 1556658122
    },
    {
        "content": "<p>Can't take any credit -- the dev team at eHealth Ontario are the ones that raised the comments. I just pass the messages along. Excited to have them work with community to resolve their comments!</p>",
        "id": 164592517,
        "sender_full_name": "Ken Sinn",
        "timestamp": 1556675045
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197037\">@Jonathan Whitby</span> Do you know if we can use the GoToMeeting info from confluence <a href=\"https://confluence.hl7.org/display/IMIN/2019-05+WGM#id-2019-05WGM-PhoneNumbers\" target=\"_blank\" title=\"https://confluence.hl7.org/display/IMIN/2019-05+WGM#id-2019-05WGM-PhoneNumbers\">https://confluence.hl7.org/display/IMIN/2019-05+WGM#id-2019-05WGM-PhoneNumbers</a>: to enable remote WGM participation on Wed Q1? <span class=\"user-mention\" data-user-id=\"192143\">@Ken Sinn</span> is asking on behalf of some colleagues.</p>",
        "id": 165108973,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1557261583
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> Yes, this should be running for all II meeting sessions.</p>",
        "id": 165157572,
        "sender_full_name": "Jonathan Whitby",
        "timestamp": 1557318099
    },
    {
        "content": "<p>The <a href=\"https://confluence.hl7.org/display/IMIN/Teleconferences\" target=\"_blank\" title=\"https://confluence.hl7.org/display/IMIN/Teleconferences\">HL7 Imaging Integration working group</a> (the primary sponsor of FHIRcast) has resolved <a href=\"https://github.com/HL7/fhircast-docs/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+label%3Aballot+label%3Aresolved\" target=\"_blank\" title=\"https://github.com/HL7/fhircast-docs/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+label%3Aballot+label%3Aresolved\">76 ballot comments</a> this week at the HL7 meeting. We have <a href=\"https://github.com/HL7/fhircast-docs/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+label%3Aballot+-label%3Aresolved+\" target=\"_blank\" title=\"https://github.com/HL7/fhircast-docs/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+label%3Aballot+-label%3Aresolved+\">84 open ballot comments</a> yet to resolve!</p>",
        "id": 165275624,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1557425531
    },
    {
        "content": "<p>The workgroup will host a series of <a href=\"https://global.gotomeeting.com/join/812770693\" target=\"_blank\" title=\"https://global.gotomeeting.com/join/812770693\">gotomeetings</a> over the next two months to discuss and resolve these ballot issues.  Here's the call details details:</p>",
        "id": 165275632,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1557425538
    },
    {
        "content": "<ul>\n<li>Tuesday, May 21, 2019, 10:00-11:00 US ET</li>\n<li>Tuesday, May 28, 2019, 10:00-11:00 US ET</li>\n<li>Thursday, May 30, 2019, 10:00-11:00 US ET</li>\n<li>Tuesday, June 18, 2019, 11:00-12:00 US ET</li>\n<li>Thursday, June 27, 2019, 10:00-11:00 US ET</li>\n</ul>",
        "id": 165275639,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1557425544
    },
    {
        "content": "<p>Good job <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> <br>\nHow do I search through comments by submitter?<br>\nUpdate: I figured out. I can just filter by any text</p>",
        "id": 165293515,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1557440557
    },
    {
        "content": "<p>Trying to understand how subscription lifecycle is defined.   When a client subscribes to a topic (or is this a session) they set the properties like events, lease time, callback URL, etc.   First question, does each client have their own 'subscription' managed on the Hub?   How do multiple clients share the 'common context' if each client has their own subscription, assuming that the Hub needs to maintain a separate subscription objects for each client subscriber (e.g. for unique callback URLs for each)?    It seems that to share a common context the Topic needs to be common among the clients that are participating in the common context.   I do not see how the current .NET sandbox Hub implementation supports this.</p>",
        "id": 165329492,
        "sender_full_name": "John Silva",
        "timestamp": 1557488995
    },
    {
        "content": "<p>Right now in the sandbox this is not modeled as a common object but rather from the common identifier of the topic, i.e. that the strings are the same means it's the same context: <a href=\"https://github.com/fhircast/sandbox/blob/master/Hub/Rules/Subscriptions.cs#L21\" target=\"_blank\" title=\"https://github.com/fhircast/sandbox/blob/master/Hub/Rules/Subscriptions.cs#L21\">https://github.com/fhircast/sandbox/blob/master/Hub/Rules/Subscriptions.cs#L21</a></p>",
        "id": 165337850,
        "sender_full_name": "Leo Bergn√©hr",
        "timestamp": 1557496555
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"194183\">@John Silva</span>, </p>\n<blockquote>\n<p>First question, does each client have their own 'subscription' managed on the Hub?</p>\n</blockquote>\n<p>Yes, each client (or subscriber) will create their own subscription to the Hub. </p>\n<blockquote>\n<p>How do multiple clients share the 'common context' if each client has their own subscription, assuming that the Hub needs <br>\nto maintain a separate subscription objects for each client subscriber (e.g. for unique callback URLs for each)? It seems that to share a common context the Topic needs to be common among the clients that are participating in the common context. </p>\n</blockquote>\n<p>The topic is essentially the session ID of the Hub's client. Let's say the EHR has the Hub and the user launches their EHR. It will get assigned a topic ID by the Hub (e.g. topic1) that subscribers can use. For example if two different applications then subscribed to that same topic with the same events, then they will get the same notifications throughout that session.</p>",
        "id": 165337933,
        "sender_full_name": "Will Maethner",
        "timestamp": 1557496628
    },
    {
        "content": "<p>OK, the answer to the first question makes sense and was what I expected.   The answer to the second has some subtleties because of the confusion of the naming of topic and sessionId --- are these really two names for the same thing?   If so, why two different names?   If not, then what is the difference?  (I think there might already be some ballot questions about this or github feedback on the fhircast/sandbox repo)</p>\n<p>My other question is:   \"Is a client allowed to change the contents of their subscription?   For example, if my client first creates a subscription with a 3600 sec lease time and then later wants to change it to a 7200 sec lease time, is that allowed (spec-wise)?   It doesn't seem like the sandbox has a way to do this so I'm not sure if it's just the sandbox implementation or not.   (I was starting to write a integration test for this scenario and it failed -- hence my question.)</p>\n<p>[The sandbox hub uses an ImmutableHashSet -- it seems like this might not allow changes?  Is that how that object behaves?]</p>",
        "id": 165344888,
        "sender_full_name": "John Silva",
        "timestamp": 1557501698
    },
    {
        "content": "<blockquote>\n<p>The answer to the second has some subtleties because of the confusion of the naming of topic and sessionId --- are these really two names for the same thing? If so, why two different names? If not, then what is the difference? (I think there might already be some ballot questions about this or github feedback on the fhircast/sandbox repo)</p>\n</blockquote>\n<p>As far as the spec goes there is only the topic which just represents a session. The definition is below.<br>\nhub.topic   Required    string  The uri of the user's session that the subscriber wishes to subscribe to or unsubscribe from.<br>\nIs your question around how the spec defines topic and session or the sandbox (there may be some cleanup needed in the sandbox to make this clearer).</p>\n<blockquote>\n<p>Is a client allowed to change the contents of their subscription?</p>\n</blockquote>\n<p>Yes this is allowed. The Subscribing and Unsubscribing section in the spec describes this \"Hubs MUST allow subscribers to re-request subscriptions that are already activated. Each subsequent request to a hub to subscribe or unsubscribe MUST override the previous subscription state for a specific topic, and callback URL combination once the action is verified.\" So basically you just resubscribe with the same topic and callback and the Hub should overwrite its current subscription with any new or changed parameters. In this way you could change the events that you are subscribed to or those lease seconds as you describe.</p>\n<p>As for the sandbox I will say that it definitely needs some updates to fully comply with the spec. It has been hard to keep it fully compliant especially as we have made updates to the spec. If you have any questions about how FHIRcast works then use the spec as the source of truth rather than the sandbox and if you do notice ways the sandbox doesn't comply then the best thing to do is log a github issue that way we can be sure to fix it.</p>",
        "id": 165345759,
        "sender_full_name": "Will Maethner",
        "timestamp": 1557502313
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"194356\">@Will Maethner</span>     There was discussion at the FHIR Connectathon on this past Saturday about the fact that the Topic should probably be only a string, not a full URL.  I think Issac put a github item for this question.   However, it is still very confusing that there are different names for what seems to be the same thing?   I guess this might stem from the fact that the sessionId might come from the Outh2 world.</p>\n<p>OK, it makes sense that clients MUST be allowed to update their subscriptions -- of course they would NEED to do that before their subscription timed out.  We also talked about the behavior of what should happen when the subscription timed out both on the Hub and on the client (subscriber); Issac or Niklas captured this discussion I believe.</p>\n<p>I was trying to update the sandbox to add an integration test to test for the 'update my subscription' scenario and it didn't work.  I was then trying to determine how to update the Hub code to properly implement this.   I wasn't sure if the fact it uses the ImmutableHashSet is why since I do not have experience using that .NET object.</p>",
        "id": 165348074,
        "sender_full_name": "John Silva",
        "timestamp": 1557504009
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194364\">@Leo Bergn√©hr</span>  <span class=\"user-mention\" data-user-id=\"194356\">@Will Maethner</span>  - I created a branch on <span class=\"user-mention\" data-user-id=\"219196\">@Wouter Devriendt</span>  clone repro with my changes to try to allow a subscription to be updated.   When debugging it seems to do the right thing but I suspect that, because of the ImmutableHashSet, it doesn't really allow the changes to the existing subscription object.   Can you take a look at this branch to see why ?  (do we need to use something other than an ImmutableHashSet?)<br>\n<a href=\"https://github.com/fhircast/sandbox/compare/master...wdvr:updateSubscription\" target=\"_blank\" title=\"https://github.com/fhircast/sandbox/compare/master...wdvr:updateSubscription\">https://github.com/fhircast/sandbox/compare/master...wdvr:updateSubscription</a></p>",
        "id": 165408725,
        "sender_full_name": "John Silva",
        "timestamp": 1557576692
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"194364\">Leo Bergn√©hr</span>  <span class=\"user-mention silent\" data-user-id=\"194356\">Will Maethner</span>  - I created a branch on <span class=\"user-mention silent\" data-user-id=\"219196\">Wouter Devriendt</span>  clone repro with my changes to try to allow a subscription to be updated.   When debugging it seems to do the right thing but I suspect that, because of the ImmutableHashSet, it doesn't really allow the changes to the existing subscription object.   Can you take a look at this branch to see why ?  (do we need to use something other than an ImmutableHashSet?)<br>\n<a href=\"https://github.com/fhircast/sandbox/compare/master...wdvr:updateSubscription\" target=\"_blank\" title=\"https://github.com/fhircast/sandbox/compare/master...wdvr:updateSubscription\">https://github.com/fhircast/sandbox/compare/master...wdvr:updateSubscription</a></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"194183\">@John Silva</span>: The immutable classes is just a way of handling multi-threading in .NET. You can still add/remove items, but you get a new collection back which you need to set as the collection it uses to fetch items from. See here: <a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.collections.immutable.immutablehashset-1.add?view=netcore-2.2#System_Collections_Immutable_ImmutableHashSet_1_Add__0_\" target=\"_blank\" title=\"https://docs.microsoft.com/en-us/dotnet/api/system.collections.immutable.immutablehashset-1.add?view=netcore-2.2#System_Collections_Immutable_ImmutableHashSet_1_Add__0_\">https://docs.microsoft.com/en-us/dotnet/api/system.collections.immutable.immutablehashset-1.add?view=netcore-2.2#System_Collections_Immutable_ImmutableHashSet_1_Add__0_</a>. We might want to change the type from hash set to another type of collection to better allow updates in place.</p>",
        "id": 165505263,
        "sender_full_name": "Leo Bergn√©hr",
        "timestamp": 1557733163
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194364\">@Leo Bergn√©hr</span>  - Yes, maybe changing to another type would make more sense.   What I did in my branch was to update the contents of the existing item so the HashSet is still 'pointing' to the same item, I just changed the contents of the item it's 'pointing' to.  (not necessarily the best approach but wanted to get something working for the sandbox.)</p>",
        "id": 165515426,
        "sender_full_name": "John Silva",
        "timestamp": 1557743100
    }
]