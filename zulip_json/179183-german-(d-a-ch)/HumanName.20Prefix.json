[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> : Bezüglich des EGK-Feldes für das Namesprefix:<br>\nDas riecht nach \"ChangeRequest\". LAss uns hier mal darüber diskutieren, was wir brauchen/wollen...</p>",
        "id": 153854590,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477647700
    },
    {
        "content": "<p>Kannst du das Problem nochmal kurz schildern, damit alle verstehen worum es geht...?</p>",
        "id": 153854591,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477647741
    },
    {
        "content": "<p>Die Beispiele für HumanName sehen für den Namensvorsatz \"van\" eine Extenson vor:<br>\n<a href=\"http://build.fhir.org/extension-iso21090-en-qualifier.html\" target=\"_blank\" title=\"http://build.fhir.org/extension-iso21090-en-qualifier.html\">http://build.fhir.org/extension-iso21090-en-qualifier.html</a><br>\n<a href=\"/user_uploads/10155/RFStbcB9fnKWosHHathIb4dj/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/RFStbcB9fnKWosHHathIb4dj/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\"><img src=\"/user_uploads/10155/RFStbcB9fnKWosHHathIb4dj/pasted_image.png\"></a></div>",
        "id": 153854592,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477647950
    },
    {
        "content": "<p>Kurioserweise ist der Wert \"VV\" im Beispiel gar nicht Bestandteil des ValueSets in der Extension</p>",
        "id": 153854593,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477648026
    },
    {
        "content": "<p>.. aber im FHIR-ValueSet:<br>\n<a href=\"http://hl7.org/fhir/v3/EntityNamePartQualifier/index.html\" target=\"_blank\" title=\"http://hl7.org/fhir/v3/EntityNamePartQualifier/index.html\">http://hl7.org/fhir/v3/EntityNamePartQualifier/index.html</a></p>",
        "id": 153854594,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477648614
    },
    {
        "content": "<p>...folglich würde ein ChangeRequest dahingehend, dass die o.g. Extension an das o.g. V3-ValueSet gebunden werden sollte, sowohl das Example validieren als auch unseren UseCase befriedigen...?</p>",
        "id": 153854595,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477648770
    },
    {
        "content": "<p>Oh, sorry. Ich hatte gar nicht gesehen, dass es schon einen Stream gibt: <a href=\"https://chat.fhir.org/#narrow/stream/implementers/topic/http.3A.2F.2Fhl7.2Eorg.2Ffhir.2FStructureDefinition.2Fiso21090-EN-qualifie\" target=\"_blank\" title=\"https://chat.fhir.org/#narrow/stream/implementers/topic/http.3A.2F.2Fhl7.2Eorg.2Ffhir.2FStructureDefinition.2Fiso21090-EN-qualifie\">https://chat.fhir.org/#narrow/stream/implementers/topic/http.3A.2F.2Fhl7.2Eorg.2Ffhir.2FStructureDefinition.2Fiso21090-EN-qualifie</a></p>",
        "id": 153854601,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477669214
    },
    {
        "content": "<p>Behaupte ich etwas falsches, wenn ich sage, dass die meisten Systeme das Vorsatzwort als PREFIX erfassen? Ich habe versucht ein paar Eingabemasken zu googeln und das scheint mit die übliche Vorgehensweise zu sein. Wobei der Titel in einem separaten Feld erfasst wird.</p>",
        "id": 153854693,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477727882
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> If your line in the \"Leistungserbringer\" thread was supposed to address the HumanName prefix issue:<br>\nPossibly Michael \"the big\" Ballack, too. But mainly Herman \"van\" Veen ;-)</p>",
        "id": 153854698,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477740569
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> Im Prinzip ja. Woraus man schließen könnte, dass eigentlich der Titel Extension-würdig wäre und nicht das Vorsatzwort.<br>\nAllerdings ist in FHIR der Begriff Prefix anders gefasst (\"Parts that come before the name\").<br>\nDer Titel kommt in Deutschland tatsächlich vor dem Namen. Das Vorsatzwort kommt vor dem Nachnamen.<br>\nEin System, das einen vollständigen Namen aus einem HumanName zusammensetzen wollte und die Extension nicht kennt, könnte sonst z.B. einen \"Dr. van Herman Veen\" generieren.<br>\nHumanName.text hilft für die korrekte Sortierung der Bestandteile insofern nicht weiter, als kein System, das ich kenne, den kompletten Namen nochmal separat ablegt.</p>",
        "id": 153854699,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477741334
    },
    {
        "content": "<p>Ja. Einverstanden. Die Reihenfolgen-Problematik hat mich auch gestört. Also wollen wir tendendentiell die Aufnahme von \"VV\" oder einem gleichbedeutenden Code in das ValueSet für die Extension um dann den Datentyp HumanName.family damit zu erweitern...?<br>\n<span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> : Ich erinnere mich dunkel, dass du in deinem Vortrag erwähntest, diese Extension zu benutzen wäre umständlich, weil man Slicing benötigt. oder habe ich das falsch verstanden? Weil, wenn ich es richtig verstanden habe dann habe ich's nicht verstanden ;-)</p>",
        "id": 153854705,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477754170
    },
    {
        "content": "<p>Eigentlich würde es ja genügen, das Attribut zu extenden. Den Anspruch, im Profil einschränken zu wollen, dass nur die erste Wiederholung von \"family\" die Extension verwenden darf, hätte ich gar nicht. Man kann ja auch mehrere Vorsätze haben... \"von der Leyen\", z.B.</p>",
        "id": 153854706,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477754347
    },
    {
        "content": "<p>Das wäre doch mal eine schöne  Übung für's \"Best Practice\": Durchgeknallte Namen modellieren:<br>\nProf. Dr. Dr. Hans-Joachim \"Hajo\" van der Waals Gonzales der Jüngere MdB</p>",
        "id": 153854708,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477754976
    },
    {
        "content": "<p>Ah. Jetzt hab ich endlich die entsprechende Spezifikation von V2 gefunden, zusammen mit nützlichen Hinweisen zur eGK:<br>\n<a href=\"http://wiki.hl7.de/index.php?title=HL7v2-Profile_gemeinsame_Elemente\" target=\"_blank\" title=\"http://wiki.hl7.de/index.php?title=HL7v2-Profile_gemeinsame_Elemente\">http://wiki.hl7.de/index.php?title=HL7v2-Profile_gemeinsame_Elemente</a></p>",
        "id": 153854709,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477755440
    },
    {
        "content": "<p>Kapitel \"XPN.1: FN – Family Name\"</p>",
        "id": 153854710,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477755463
    },
    {
        "content": "<p>Interessant:<br>\n\"Für die Übermittlung des Namenszusatzes (bspw. \"Baron\" oder \"Prinz\") und der Vorsatzworte (bspw. \"auf der\", \"von\") reicht diese Unterteilung nicht aus. Auf der eGK sind diese Informationen getrennt, auf der KVK durch Leerzeichen getrennt in einem Feld. Dies wird über den Präfix des Nachnamens abgebildet. Dazu werden der Namenszusatz und das Vorsatzwort von der eGK in dieser Reihenfolge durch ein Leerzeichen getrennt in FN.1.2 (Own Surname Prefix) geschrieben:</p>\n<p>Beispiel 2: Herr Otto Graf Lambsdorff<br>\nGraf Lambsdorff&amp;Graf&amp;Lambsdorff^Otto^^^^^L^A^^^G<br>\n\"</p>\n<p>Ich hätte jetzt unter NamensZUSATZ auf der eGK eher so etwas wie \"der Jüngere\", \"senior\" oder \"MdB\" erwartet. Also etwas, was HINTER dem Familiennnamen steht. Laut diesem Beispiel wäre der \"Graf\" aber ein Namenszusatz und stünde VOR dem Nachnamen. Jetzt bin ich komplett verwirrt...</p>",
        "id": 153854713,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477756829
    },
    {
        "content": "<p>Tatsache: der Namenszusatz steht ebenfalls VOR dem Nachnamen:<br>\n\"Der Name des Versicherten wird in der natürlichen Schreibweise und Reihenfolge<br>\nauf die Karte gedruckt: Titel Vorname Namenszusatz/Vorsatzwort Familienname\"<br>\n<a href=\"https://www.gematik.de/cms/media/dokumente/release_0_5_3/release_0_5_3_egk/gematik_eGK_Spezifikation_Teil3_V2_1_0.pdf\" target=\"_blank\" title=\"https://www.gematik.de/cms/media/dokumente/release_0_5_3/release_0_5_3_egk/gematik_eGK_Spezifikation_Teil3_V2_1_0.pdf\">https://www.gematik.de/cms/media/dokumente/release_0_5_3/release_0_5_3_egk/gematik_eGK_Spezifikation_Teil3_V2_1_0.pdf</a></p>",
        "id": 153854714,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477757029
    },
    {
        "content": "<p>...also wäre auch der Namenszusatz in FHIR ein Bestandteil von family mit einem Qualifier. Dafür bräuchten wir also auch einen Code. </p>",
        "id": 153854715,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477757356
    },
    {
        "content": "<p>d'accord</p>",
        "id": 153854716,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477757367
    },
    {
        "content": "<p>NB ( nobility) würde für das konkrete Beispiel passen, wäre semantisch aber nicht deckungsgleich mit dem NAMENSZUSATZ auf der eGK</p>",
        "id": 153854717,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477757400
    },
    {
        "content": "<p>! genau</p>",
        "id": 153854718,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477757410
    },
    {
        "content": "<p>und: Dr. Fritz Graf von Müller m.d. geht per Definitionem der eGK z.B. nicht. Das wäre dann bestenfalls Dr. m.d. Fritz Graf von Müller</p>",
        "id": 153854719,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477757451
    },
    {
        "content": "<p>mDB ist ein Arbeitstitel</p>",
        "id": 153854720,
        "sender_full_name": "Armin Gayl",
        "timestamp": 1477757472
    },
    {
        "content": "<p>Außerdem stört es mich, dass sämtliche Systeme, die die Extension nicht kennen, den Otto unter \"G\" einsortieren würden</p>",
        "id": 153854721,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477757488
    },
    {
        "content": "<p>also eher ein Berufstitel wie Steuerberater StB</p>",
        "id": 153854722,
        "sender_full_name": "Armin Gayl",
        "timestamp": 1477757544
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192870\">@Armin Gayl</span> ist richtig, und daher tendenziell nirgend gespeichert/übermittelt. Aber z.B. der m.d. ist  ein US-Titel, den auch Deutsche tragen können (oder in Deutschland behandelte US-Bürger)</p>",
        "id": 153854723,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477757577
    },
    {
        "content": "<p>Aber gut, wenn die eGK das nicht braucht, müssen wir uns vielleicht erstmal nicht den Kopf über das in Deutschland fehlende Suffix zerbrechen.</p>",
        "id": 153854724,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477757686
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> hm, wie verhält sich das empfangende System, wenn es mehrere family-Attribute bekommt?</p>",
        "id": 153854727,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477757864
    },
    {
        "content": "<p>Karl-Heinz Graf von Dracula</p>\n<div class=\"codehilite\"><pre><span class=\"nt\">&lt;family</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Graf&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier&quot;</span> <span class=\"nt\">&gt;</span>\n       <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;NB&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/extension&gt;</span>\n<span class=\"nt\">&lt;/family&gt;</span>\n<span class=\"nt\">&lt;family</span> <span class=\"na\">value=</span><span class=\"s\">&quot;von&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier&quot;</span> <span class=\"nt\">&gt;</span>\n       <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;VV&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/extension&gt;</span>\n<span class=\"nt\">&lt;/family&gt;</span>\n<span class=\"nt\">&lt;family</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Dracula&quot;</span> <span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;given</span> <span class=\"na\">value =</span> <span class=\"s\">&quot;Karl-Heinz&quot;</span><span class=\"nt\">/&gt;</span>\n</pre></div>\n\n\n<p>ein System, das die Extensions ignoriert ,würde lesen:</p>\n<div class=\"codehilite\"><pre><span class=\"nt\">&lt;family</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Graf&quot;</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;family</span> <span class=\"na\">value=</span><span class=\"s\">&quot;von&quot;</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;family</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Dracula&quot;</span> <span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;given</span> <span class=\"na\">value =</span> <span class=\"s\">&quot;Karl-Heinz&quot;</span><span class=\"nt\">/&gt;</span>\n</pre></div>\n\n\n<p>Daraus ergäbe sich der Nachname \"Graf von Dracula\" mit Einsortierung unter \"G\".<br>\nBegeistert mich nur so mittel... <img alt=\":unamused:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/unamused.png\" title=\":unamused:\"> </p>",
        "id": 153854728,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477757879
    },
    {
        "content": "<p>Können wir beim Slicing die Reihenfolge erzwingen?</p>",
        "id": 153854729,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477757956
    },
    {
        "content": "<p>Also so:</p>\n<div class=\"codehilite\"><pre><span class=\"nt\">&lt;family</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Dracula&quot;</span> <span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;family</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Graf&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier&quot;</span> <span class=\"nt\">&gt;</span>\n       <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;NB&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/extension&gt;</span>\n<span class=\"nt\">&lt;/family&gt;</span>\n<span class=\"nt\">&lt;family</span> <span class=\"na\">value=</span><span class=\"s\">&quot;von&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier&quot;</span> <span class=\"nt\">&gt;</span>\n       <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;VV&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/extension&gt;</span>\n<span class=\"nt\">&lt;/family&gt;</span>\n<span class=\"nt\">&lt;given</span> <span class=\"na\">value =</span> <span class=\"s\">&quot;Karl-Heinz&quot;</span><span class=\"nt\">/&gt;</span>\n</pre></div>",
        "id": 153854730,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477758014
    },
    {
        "content": "<p>Weil dann wäre es für das non-aware-System zumindest in der Hinsicht korrekt</p>",
        "id": 153854731,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477758157
    },
    {
        "content": "<p>Du meinst, dass der sortierrelevante Teil des Namens immer zuerst genannt werden soll? Aber wie sollen die Systeme dann wissen, wie Sie den Namen zur korrekten Anzeige wieder zusammenbauen müssen? Die Reihenfolge \"Graf von Dracula\" ist ja korrekt, also würde ich das schon so übermitteln wollen. Sonst bekommt der Patient später Anschreiben in denen \"Sehr geehrter Herr Dracula von Graf\" steht. Auch nicht cool.</p>",
        "id": 153854732,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477758172
    },
    {
        "content": "<p>Korrekte Anzeige &gt; Korrekte Sortierung (IMHO)</p>",
        "id": 153854733,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477758253
    },
    {
        "content": "<p>Genau das meine ich. Einen der beiden Tode müssen wir aber wohl sterben, entweder Sortierung oder Reihenfolge.</p>",
        "id": 153854734,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477758266
    },
    {
        "content": "<p>Ich sag's mal so: viele Systeme (zumindest Subsysteme) kennen nicht mal das Vorsatzwort.<br>\nDie schreiben dann den Graf in Titel und das Vorsatzwort in den Nachnamen - und dann ist die Sortierung eh falsch</p>",
        "id": 153854735,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477758361
    },
    {
        "content": "<p>Insofern: d'accord, Reihenfolge &gt; Sortierung</p>",
        "id": 153854736,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477758411
    },
    {
        "content": "<p>In dem Fall würde ich auf die Sortierung verzichten. Die spielt ja en nur dann eine Rolle, wenn man Listen auf Papier ausdruckt...wer macht denn sowas??</p>",
        "id": 153854737,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477758414
    },
    {
        "content": "<p>Außerdem: Wenn sich bei irgendeinem Hersteller die Kunden über die falsche Sortierung beschweren, dann kann dieser ja immer noch die Extension implementieren</p>",
        "id": 153854738,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477758484
    },
    {
        "content": "<p>Bleibt das Problem eines semantisch äquivalenten Qualifiers für den Namenszusatz...</p>",
        "id": 153854739,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477758537
    },
    {
        "content": "<p>Jup, irgendwo müsste dann auch der Hersteller mal was tun, wenn wir es schon spezifieren ;-)</p>",
        "id": 153854740,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477758578
    },
    {
        "content": "<p>Das Problem ist, dass der Namenszusatz schon semantisch unsauber ist ...</p>",
        "id": 153854741,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477758597
    },
    {
        "content": "<p>Wenn man wüsste, was außer einem Adelstitel da noch vorkommen könnte... Also mir fällt spontan nichts ein...</p>",
        "id": 153854742,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477758639
    },
    {
        "content": "<p>Künstlernamen?</p>",
        "id": 153854743,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477758701
    },
    {
        "content": "<p>Michael \"the big\" Ballack z.B.?</p>",
        "id": 153854744,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477758712
    },
    {
        "content": "<p>:D</p>",
        "id": 153854745,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477758718
    },
    {
        "content": "<p>Auf dem Perso sind sie drauf</p>",
        "id": 153854746,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477758742
    },
    {
        "content": "<p>Muss doch irgendwo in der Spez. stehen ...</p>",
        "id": 153854747,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477758773
    },
    {
        "content": "<p>Ich finde nichts...<br>\nAußer einem Beispiel, aber das wäre auch wieder aus der Serie \"Nobility\":<br>\n<a href=\"https://de.wikipedia.org/wiki/Datei:Krankenversichertenkarte_2009_VS.svg\" target=\"_blank\" title=\"https://de.wikipedia.org/wiki/Datei:Krankenversichertenkarte_2009_VS.svg\">https://de.wikipedia.org/wiki/Datei:Krankenversichertenkarte_2009_VS.svg</a></p>",
        "id": 153854748,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477758853
    },
    {
        "content": "<p>Die muss es geben. In Teil 3, den Du oben verlinkt hast, wird ja nur darauf Bezug genommen. Also muss doch irgendwo anders beschrieben sein, wie lang z.B. ein Nachname sein darf usw.</p>",
        "id": 153854749,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477759025
    },
    {
        "content": "<p><a href=\"https://www.gematik.de/cms/media/dokumente/release_0_5_3/gemSchema_VSDM_5_2_V130.pdf\" target=\"_blank\" title=\"https://www.gematik.de/cms/media/dokumente/release_0_5_3/gemSchema_VSDM_5_2_V130.pdf\">https://www.gematik.de/cms/media/dokumente/release_0_5_3/gemSchema_VSDM_5_2_V130.pdf</a></p>",
        "id": 153854750,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477759704
    },
    {
        "content": "<p>Ja, da war ich auch schon. Das Dokument geht aber anscheinend davon aus, dass der Begriff Namenszusatz selbsterklärend ist ;-)</p>",
        "id": 153854751,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477759782
    },
    {
        "content": "<p>Wollte gerade schreiben: sagt auch nix zur Bedeutung aus :D</p>",
        "id": 153854752,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477759847
    },
    {
        "content": "<p>Frag doch mal Christoph. Der sollte eigentlich zumindest wissen, wo man's findet (wenn es irgendwo steht)</p>",
        "id": 153854753,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477759905
    },
    {
        "content": "<p>Die KBV hat immerhin ein Mapping dafür: ftp://ftp.kbv.de/ita-update/Abrechnung/KBV_ITA_VGEX_Mapping_KVK.pdf<br>\nund verweist für Ausprägungen auf Anlage 7 DEÜV ...</p>",
        "id": 153854754,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477760573
    },
    {
        "content": "<p>Tadaa: <a href=\"https://www.vdek.com/content/vdeksite/vertragspartner/arbeitgeber/deuev/_jcr_content/par/download_8/file.res/Anlage_07_Vers.pdf\" target=\"_blank\" title=\"https://www.vdek.com/content/vdeksite/vertragspartner/arbeitgeber/deuev/_jcr_content/par/download_8/file.res/Anlage_07_Vers.pdf\">https://www.vdek.com/content/vdeksite/vertragspartner/arbeitgeber/deuev/_jcr_content/par/download_8/file.res/Anlage_07_Vers.pdf</a></p>",
        "id": 153854755,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477760637
    },
    {
        "content": "<p>Ja, mache ich. <br>\nAber nochmal zurück zu V2, da wurde das exakt gleiche Thema ja offensichtlich schon mal diskutiert:<br>\n\"[...]Dazu werden der Namenszusatz und das Vorsatzwort von der eGK in dieser Reihenfolge durch ein Leerzeichen getrennt in FN.1.2 (Own Surname Prefix) geschrieben:<br>\nBeispiel 2: Herr Otto Graf Lambsdorff<br>\n<code>Graf Lambsdorff&amp;Graf&amp;Lambsdorff^Otto^^^^^L^A^^^G</code><br>\n\"<br>\nÜbertragen auf unser Beispiel wäre das dann<br>\n<code>Graf von Dracula&amp;Graf von&amp;Dracula^Karl-Heinz^^^^^L^A^^^G</code></p>\n<p>Systeme, die hier also die V2-Subsubkomponenten nicht auslesen (also die meisten), sind genau so doof wie FHIR-Systeme, die keine Extensions implementieren und würden nur das erste Feld lesen, ergo Einsortierung unter \"G\" aber richtige Darstellung. <br>\nDas Round-Tripping würde hier auch nicht funktionieren, da ich auf dem Rückweg nicht mehr unterscheiden kann, was mal Vorsatzwort und was Namenszusatz war. Also vielleicht machen wir uns viel zu viele Gedanken. Ist es denn wirklich so wichtig, dass wie die eGK-Original-Datenstruktur wiederherstellen könnten? Was wäre denn der UseCase....?</p>",
        "id": 153854756,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477760653
    },
    {
        "content": "<p>ist 100% Nobility</p>",
        "id": 153854757,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477760665
    },
    {
        "content": "<p><img alt=\":kissing_cat:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/kissing_cat.png\" title=\":kissing_cat:\"> </p>",
        "id": 153854758,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477760714
    },
    {
        "content": "<p>Thema geklärt? :D</p>",
        "id": 153854759,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477760747
    },
    {
        "content": "<p>Hach, was hätten wir Lebenszeit sparen können, wenn das Feld einfach \"Adelstitel\" geheißen hätte :D</p>",
        "id": 153854760,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477760762
    },
    {
        "content": "<p>Aber war auch so ein schöner Abend ;-)</p>",
        "id": 153854761,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477760773
    },
    {
        "content": "<p>Es gibt auch ne Anlage für die VVs: <a href=\"https://www.vdek.com/content/vdeksite/vertragspartner/arbeitgeber/deuev/_jcr_content/par/download_7/file.res/Anlage_06_Vers.pdf\" target=\"_blank\" title=\"https://www.vdek.com/content/vdeksite/vertragspartner/arbeitgeber/deuev/_jcr_content/par/download_7/file.res/Anlage_06_Vers.pdf\">https://www.vdek.com/content/vdeksite/vertragspartner/arbeitgeber/deuev/_jcr_content/par/download_7/file.res/Anlage_06_Vers.pdf</a></p>",
        "id": 153854762,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477760782
    },
    {
        "content": "<p>Jaja, \"Das ist unsere Freizeit, und die ist knapp\" ;,D</p>",
        "id": 153854763,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477760802
    },
    {
        "content": "<p>Ja, die Liste hatte ich lustigerweise heute morgen schon gefunden. Google ist anscheinend auch manchmal launisch...</p>",
        "id": 153854764,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477760847
    },
    {
        "content": "<p>Didum ...<br>\nNaja, jedenfalls gut, dass sich Leute da schon mal mit befasst haben :D</p>",
        "id": 153854766,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477760896
    },
    {
        "content": "<p>Also dann fassen wir mal den Abend zusammen:<br>\nWIr brauchen die ISO-Extension als Qualifier für HumanName.family<br>\nDas Mapping der EGK wäre dann<br>\nNamenszusatz -&gt; family (NB)<br>\nVorsatzwort -&gt; family(VV)<br>\nNachname -&gt; family (ohne Qualifier)<br>\nUnser Change Request wäre folglich darauf beschränkt, den Code \"VV\" oder einen äquivalenten Code in das ValueSet <a href=\"http://hl7.org/fhir/valueset-name-part-qualifier.html\" target=\"_blank\" title=\"http://hl7.org/fhir/valueset-name-part-qualifier.html\">http://hl7.org/fhir/valueset-name-part-qualifier.html</a> aufzunehmen.</p>",
        "id": 153854767,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477761140
    },
    {
        "content": "<p>So sei es <img alt=\":thumbs_up:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/thumbs_up.png\" title=\":thumbs_up:\"> </p>",
        "id": 153854768,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477761231
    },
    {
        "content": "<p>Amen.</p>",
        "id": 153854769,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477761289
    },
    {
        "content": "<p>Sie hörten das Wort zum Sonntag (scnr)</p>",
        "id": 153854770,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477761414
    },
    {
        "content": "<p>What's in a name? that which we call a rose<br>\nBy any other name would smell as sweet;</p>",
        "id": 153854771,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477761732
    },
    {
        "content": "<p>Nachtrag: <br>\nTitel -&gt; Prefix (das wurde übrigens bereits in V2 so gemapped, da in Deutschland der Titel VOR dem Vornamen stehen muss)</p>",
        "id": 153854773,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477763030
    },
    {
        "content": "<p>sorry ich hatte ein Offline Wochenende, ich denke der Hauptdiskussionsthread ist der englische: <a href=\"https://chat.fhir.org/#narrow/stream/implementers/subject/http.3A.2F.2Fhl7.2Eorg.2Ffhir.2FStructureDefinition.2Fiso21090-EN-qualifie\" target=\"_blank\" title=\"https://chat.fhir.org/#narrow/stream/implementers/subject/http.3A.2F.2Fhl7.2Eorg.2Ffhir.2FStructureDefinition.2Fiso21090-EN-qualifie\">https://chat.fhir.org/#narrow/stream/implementers/subject/http.3A.2F.2Fhl7.2Eorg.2Ffhir.2FStructureDefinition.2Fiso21090-EN-qualifie</a> hier habe ich gerade auch kommentiert.</p>\n<p>Wenn wir VV als Extension auf family name modellieren wird es schwierig beim Profilieren: Um 0..1 für VorsatzWort und 1..1 für Nachname zu profilieren müsste man slicen.<br>\nIch sehe hier nur die Extension als möglicher Discriminator. Der normale Nachname hat aber keine Extension. Ich warte aktuelle auf Feedback im englischen Thread von profilierungsprofis wie man dies lösen könnte.</p>",
        "id": 153854839,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1477910556
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> Anmerkung zu der Abendzusammenfassung: Ich habe in EGKfeuer Namenszusatz auf Patient.name.suffix gemappt. Das fand ich eindeutiger als family mit NB Qualifier. Namenszusatz ist auch nicht zwangsläufig ein Adelstitel, sondern auch etwas wie MdB oder M.D.</p>",
        "id": 153854841,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1477911122
    },
    {
        "content": "<p>Adelstitel wie Sir oder Graf wäre für mich ein prefix des Namens</p>",
        "id": 153854842,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1477911156
    },
    {
        "content": "<p>Künstlernamen wären ein kompletter zweiter Namen mit dem use \"usual\" der richtige Name hätte \"official\"</p>",
        "id": 153854843,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1477911325
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> Gibt's für den MdB oder m.d. als Namenszusatz eine Quelle?<br>\nDas einzige, was wir gefunden hatten, war letztlich die Referenz auf die DEÜV Anlage 7 =&gt; \"Tabelle der gültigen Namenszusätze\", und das sind ausschließlich Adelstitel.</p>",
        "id": 153854847,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477911705
    },
    {
        "content": "<p>Namenszusatz (eGK) -&gt; Suffix (FHIR) geht m.M.n. nicht, da in FHIR ausdrücklich steht, dass Suffix HINTER dem Nachnamen steht, während die Darstellungreichenfolge der eGK den Zusatz VOR den Nachnamen stellt. Demnach wäre das Feld also auch für MdB/ m.d. nicht zu gebrauchen</p>",
        "id": 153854852,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477911952
    },
    {
        "content": "<p>ack</p>",
        "id": 153854853,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477911963
    },
    {
        "content": "<p>Suffix _könnte_ man reinmodellieren, ist aber nicht Bestandteil der Versichertenstammdaten (aka eGK-Daten)</p>",
        "id": 153854854,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477912034
    },
    {
        "content": "<p>Und an den m.d. als nachgesetzten Titel hat man bei den VSD offenbar nicht gedacht</p>",
        "id": 153854857,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477912093
    },
    {
        "content": "<p>Das Slicing-Thema ist allerdings korrekt. Schlimmstenfalls müsste man da eine Extension mit Code für den Haupt-Familennamen erzwingen</p>",
        "id": 153854859,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477912161
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span>  nein da hatte ich keine Quelle, dachte ich benutze meinen Menschenverstand, aber so läuft es in der Realität ja nicht :-)<br>\nHabe gerade auch hier nachgelesen: <a href=\"http://www.dkgev.de/media/file/10011.RS291-11_Anlage2-SGBV_291a_Anpassung.pdf\" target=\"_blank\" title=\"http://www.dkgev.de/media/file/10011.RS291-11_Anlage2-SGBV_291a_Anpassung.pdf\">http://www.dkgev.de/media/file/10011.RS291-11_Anlage2-SGBV_291a_Anpassung.pdf</a><br>\nNamenszusatz is wirklich auf diesen Anhang reglementiert, also alles Adelstitel die vor dem Nachnamen stehen sollen.<br>\nAlso ist das mit Nobility doch genau passend hier</p>",
        "id": 153854860,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1477912161
    },
    {
        "content": "<p>Richtig, das gibt dann 3 Slices, mit dem o.g. Problem</p>",
        "id": 153854862,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477912220
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span> war auch mein Gedanke, einen Code für Familienname, aber dann wären alle 3 möglichen family names extended. Bin mir gerade unsicher ob das doof wäre</p>",
        "id": 153854863,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1477912230
    },
    {
        "content": "<p>Warum nicht? Ich glaube, bei SCIPHOX war das damals ähnlich gelöst (?)</p>",
        "id": 153854865,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477912267
    },
    {
        "content": "<p>Ewout hat im englischen stream gerade eine fluentpath variante vorgeschlagen. da muss ich mich allerdings erstmal schlau lesen ob man das so einfach in profile integriert bekommt</p>",
        "id": 153854866,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1477912337
    },
    {
        "content": "<p>Warum müssen wir das überhaupt restricten...?<br>\nWenn ich eGK nach FHIR mappe, dann gibt es ja de facto maximal einen Vor/Zusatz. Das Problem ergibt sich ja nur dann, wenn ich von FHIR, was potentiell mehrere Vor/Zusätze haben könnte zurück nach eGK mappen wollte<br>\nAlso das Problem, das Grahame so schn als \"Round Tripping\" bezeichnet hat.<br>\nFrage a) Haben wir überhaupt einen UseCase dafür,<br>\nb) angenommen wir hätten einen und der Patient hätte tatsächlich mal mehrere Vor/ZUsätze. Dann könnte man diese doch einfach per Konvention leerzeichensepariert auf die eGK mappen, oder? WÄre es da notwendig, die Kardinalität seitens FHIR zu beschränken?</p>",
        "id": 153854868,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477912463
    },
    {
        "content": "<p>Ach so, ja, KISS mal wieder ;-)<br>\nHm, de jure sollen die Praxen auch die Versichertenstammdaten aktualisieren können. Das macht dann wohl das PDMS. Aber solange es keine Kartenleser gibt, die direkt FHIR sprechen ...</p>",
        "id": 153854869,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477912637
    },
    {
        "content": "<p>Ob man das wirklich muss weiß ich nicht. Aber wenn man jemandem eine technisch interpretierbare Beschreibung eines EGK  Datensatzes in FHIR zukommen lassen will würde ich ein profil wählen. Diese definiert die Kardinalitäten und möglichen eignesetzten Extensions. Wenn ich als Implementer diese Profile implementiere kann ich sicher sein alle Daten korrekt zu verwenden. Und eben nicht Informationen aus den Extensions zu verlieren</p>",
        "id": 153854870,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1477912676
    },
    {
        "content": "<p>Als Herausforderung fände ich's auf jeden Fall spannend, zu schauen, ob Ewouts Vorschlag umsetzbar ist (mit VV + NB + Haupt-Name)<br>\nSelbst wenn wir es hier nicht unbedingt brauchen</p>",
        "id": 153854871,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477912780
    },
    {
        "content": "<p>ich gebe zu aktuelle, angesichts der Realiät, eher ein akademisches Problem. Aber lieber von Anfang an einmal richtig definiert.<br>\nGenerell könnte diese Problemart jo noch an anderen Stellen auftreten (Stringfelder welches sich wiederholen, die aber über Extensions zusätzliche Informationen enthalten)</p>",
        "id": 153854872,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1477912804
    },
    {
        "content": "<p>und deren Kardinalitäten beschränkt werden müssen. Ein Resultat könnte sein, dass man merkt Slicing anhand der Extensions braucht auch einen Qualifier für \"Item hat keine Extension\"</p>",
        "id": 153854873,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1477912913
    },
    {
        "content": "<p>ok, verstanden: Wir können derzeit im Profil sagen: \"Ein Patient muss mindestens einen Nachnamen haben\", aber was wir eigentlich sagen wollen ist \"mindestens einen Nachnamen ohne Extension\". Man könnte die Validierung also überlisten, indem man einen Datensatz erzeugt, der nur einen Vorsatz und/oder einen Zusatz hat, aber keinen \"echten\" Nachnamen.</p>",
        "id": 153854874,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477913001
    },
    {
        "content": "<p><img alt=\":thumbs_up:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/thumbs_up.png\" title=\":thumbs_up:\"> </p>",
        "id": 153854875,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1477913030
    },
    {
        "content": "<p>Dazu braucht's ja fast schon kriminelle Energie :D</p>",
        "id": 153854876,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477913051
    },
    {
        "content": "<p>&lt;OT&gt;Clockwork Orange: er hörte regelmäßig \"Ludwig van\"&lt;/OT&gt;</p>",
        "id": 153854877,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477913074
    },
    {
        "content": "<p>IMHO einfach mal schauen, wie weit man mit Fluentpath kommt und welche Probleme evtl. daraus entstehen.<br>\nDann können wir immer noch entscheiden.</p>",
        "id": 153854878,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477913163
    },
    {
        "content": "<p>Aliens blicken's auch nicht:<br>\n<a href=\"https://books.google.de/books?id=UgTgjYvN2y8C&amp;pg=PA259&amp;lpg=PA259&amp;dq=%22jamesty+kirk%22&amp;source=bl&amp;ots=9ajBQVSW-f&amp;sig=plcQl8DFWLO1OLYlUxK8YMjH9g8&amp;hl=de&amp;sa=X&amp;ved=0ahUKEwj46Yq894TQAhVMOxQKHYXaD8gQ6AEIJzAB#v=onepage&amp;q=%22jamesty%20kirk%22&amp;f=false\" target=\"_blank\" title=\"https://books.google.de/books?id=UgTgjYvN2y8C&amp;pg=PA259&amp;lpg=PA259&amp;dq=%22jamesty+kirk%22&amp;source=bl&amp;ots=9ajBQVSW-f&amp;sig=plcQl8DFWLO1OLYlUxK8YMjH9g8&amp;hl=de&amp;sa=X&amp;ved=0ahUKEwj46Yq894TQAhVMOxQKHYXaD8gQ6AEIJzAB#v=onepage&amp;q=%22jamesty%20kirk%22&amp;f=false\">https://books.google.de/books?id=UgTgjYvN2y8C&amp;pg=PA259&amp;lpg=PA259&amp;dq=%22jamesty+kirk%22&amp;source=bl&amp;ots=9ajBQVSW-f&amp;sig=plcQl8DFWLO1OLYlUxK8YMjH9g8&amp;hl=de&amp;sa=X&amp;ved=0ahUKEwj46Yq894TQAhVMOxQKHYXaD8gQ6AEIJzAB#v=onepage&amp;q=%22jamesty%20kirk%22&amp;f=false</a></p>",
        "id": 153854879,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1477913232
    },
    {
        "content": "<p>Warum wird eigentlich nirgends :facepalm: in ein Emoji übersetzt? <img alt=\":laughing:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/laughing.png\" title=\":laughing:\"> </p>",
        "id": 153854880,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477913365
    },
    {
        "content": "<p>(Der Kursus für klingonische Grammatik bitte eine Tür weiter, danke)</p>",
        "id": 153854881,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1477913429
    },
    {
        "content": "<p>mal ein kurzer Zwischenstand zur Profilierung:<br>\n- mit Slicing alleine bekommt man das Problem nicht zufriedenstellend gelöst<br>\n- Forge ist ein nettes Tool, kann aber soviele Dinge noch nicht (man kann z.B. nicht die Kardinalität von Extensions eines Elements generisch auf 0..0 setzen, nur für spezifische Extension URLs)<br>\nWorkaround ist hier die Profilierung in FORGE zu beginnen und danach manuell im XML anzupassen.<br>\n- bleibt die Option mit Fluent/FHIR Path, die aber erst in STU3 ohne Extensions funktioniert. Ich werde mich in die Expressions mal einarbeiten und hoffe Forge kann bald STU3 und entählt fehlende Funktionen. Auch der Bug in Simplifier mit den META Elementen wird dabei hoffentlich gefixt.</p>",
        "id": 153855084,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1478083942
    },
    {
        "content": "<p>Leider befinden wir uns gerade im globalen Code Freeze, weil alle auf STU3 warten, bevor die Tools/Server/Frameworks weiterentwickelt werden. Ich bin sicher, dass wir auf den DevDays Neuigkeiten zur Roadmap der Tools erfahren werden. Anfang nächsten Jahres wird dann richtig Gas gegeben ;-)</p>",
        "id": 153855099,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478108416
    },
    {
        "content": "<p>Anbei mal eine Namenserfassung zu einem Patienten aus in einem deutschen KIS. <a href=\"/user_uploads/10155/ntd_8K0Eq1ICLIlYYtEOuXtu/name.JPG\" target=\"_blank\" title=\"name.JPG\">name.JPG</a> In HL7 würde das dann so aussehen \"Örchestra^JCaps^^Edler^auf m^Dr.oec.\". So ganz verstehe ich das Problem in FHIR wohl noch nicht. In meiner Naivität würde ich denken, dass suffix und prefix aus HumanName dafür ausreichen? Ich kenne mich \"noch\" nicht gut genug aus mit dem FHIR-Datenmodell. Da muss ich wohl noch Hausaufgaben machen.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/ntd_8K0Eq1ICLIlYYtEOuXtu/name.JPG\" target=\"_blank\" title=\"name.JPG\"><img src=\"/user_uploads/10155/ntd_8K0Eq1ICLIlYYtEOuXtu/name.JPG\"></a></div>",
        "id": 153855218,
        "sender_full_name": "Jan Schuster",
        "timestamp": 1478155030
    },
    {
        "content": "<p>Der Punkt ist, dass es in Deutschland Präfixe für den Gesamtnamen gibt (\"Dr.\"), 2 verschiedene Präfixe für den Nachnamen (\"Graf\", \"von\") und kein Suffix (weil man z.B. den \"m.d.\" nicht berücksichtigt). FHIRs prefix passt für den deutschen Titel-Präfix; um die beiden Nachnamens-Präfixe geht es in der Diskussion im wesentlichen</p>",
        "id": 153855240,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478168033
    },
    {
        "content": "<p>Der Screenshot entspricht auf jeden Fall dem, was man anhand der eGK-Daten erwarten würde.<br>\nDoppelnamen habe ich wirklich noch nie so aufgesplittet gesehen wie es im implementers-Thread diskutiert wird.</p>",
        "id": 153855241,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478168112
    },
    {
        "content": "<p>aufgesplittete Nachnamen sind in den Niederlanden nur ein Thema da jeder Nachnamensbestandteil sein eigenes VV hat. Ich Chile wird der Nachname übrigens auch oft gesplittet gespeichert.</p>",
        "id": 153855243,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1478168303
    },
    {
        "content": "<p>Der Punkt ist schlicht die Reihenfolge.<br>\nin FHIR:<br>\n&lt;prefix&gt; &lt;given&gt; &lt;family&gt; &lt;suffix&gt;<br>\ngemäß eGK:<br>\n&lt;vorname&gt; &lt;namenszusatz&gt; &lt;vorsatzwort&gt; &lt;nachname&gt;<br>\nWürden wir namenszusatz auf suffix und vorsatzwort auf prefix mappen, dann würde aus <br>\nCharles Prince of Wales -&gt; of Charles Wales Prince <br>\n:D</p>",
        "id": 153855254,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478169341
    },
    {
        "content": "<p>Das versuchte ich oben auszudrücken ;-)</p>",
        "id": 153855280,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478171152
    },
    {
        "content": "<p>Wollte Dir auch nicht widersprechen, lediglich Deine Aussage bebildern ;-)</p>",
        "id": 153855341,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478194292
    },
    {
        "content": "<p>Ich verstehe, dass Suffix und Prefix nicht ausreichen jeden theoretisch möglichen Namen abzubilden. Mal abgesehen davon, dass der Prince of Wales niemals mit Echtnamen in irgendeinem System auftauchen wird, bin ich der Meinung, dass derzeit mit HL7v2 keine relevanten Probleme mit der Namensübertragung bestehen. Das sollte auch mit HumanName bei FHIR möglich sein. Oder habe ich das Thema jetzt komplett verfehlt? Vielleicht sollte eine Extension eingeführt werden, die den kompletten Namen übertragen kann.</p>",
        "id": 153855381,
        "sender_full_name": "Jan Schuster",
        "timestamp": 1478204244
    },
    {
        "content": "<p>Wir <strong>hätten</strong> ein Problem mit V2 wenn wir versuchen wollten, die Daten auf der eGK so abzubilden, dass wir hinterher noch nachvollziehen können was der Namenszusatz und was das Vorsatzwort war.</p>",
        "id": 153855382,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478204353
    },
    {
        "content": "<p>Ich habe keinen Zweifel, dass der UseCase, in dem das wirklich eine Rolle spielt, sehr eng begrenzt ist. Deshalb reden wir ja auch ausschließlich über Extensions und nicht darüber, diese Sonderlocken in den Standard drücken zu wollen. Aber ich denke, wir sollten sicherstellen, dass <strong>wenn</strong> wir einen solchen UseCase antreffen, dass wir dann die nötigen Extensions haben, um die Anforderung abzudecken. </p>",
        "id": 153855383,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478204618
    },
    {
        "content": "<p>Und das Sahnehäubchen wäre es dann, wenn diese Extensions noch international harmonisiert wären...</p>",
        "id": 153855384,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478204661
    },
    {
        "content": "<p>Mmh. Das ist wohl sehr schwer bei Namen... Danke für die Aufklärung. Um noch einmal auf die eGK zu kommen. Hier besteht doch das Problem, dass es schon dort manifestiert ist, oder?</p>",
        "id": 153855385,
        "sender_full_name": "Jan Schuster",
        "timestamp": 1478204861
    },
    {
        "content": "<p>Ja, da wir aber normalerweise immer nur von der eGK <strong>lesen</strong>, wäre es nicht weiter tragisch, wenn wir die Namensbestandteile einfach konkatenieren oder undifferenziert als \"irgendein nicht-sortierrelevanter Namensbestandteil\" speichern würden. Wir hätten ja trotzdem noch die volle Information. Problematisch wäre es, wenn wir den eGK-Datensatz <strong>speichern</strong> wollten und dann nicht mehr wüssten, welchen Namensteil in welches Feld gehört.</p>",
        "id": 153855386,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478205126
    },
    {
        "content": "<p>Jetzt könnte man einwenden: \"Wer will schon eine eGK beschreiben!?\" Aber ich befürchte, dass es andere KBV-Datensätze gibt und geben wird, die das gleiche Namensformat verwenden und von KIS-/PVS-Systemen erstellt werden müssen. </p>",
        "id": 153855387,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478205255
    },
    {
        "content": "<p>Das Systeme/Applikationen Daten von der eGK einlesen und und weitergeben, passiert laufend. Meiner Meinung nach liegt das Problem im eGK-Datensatz. Der wird nach dem Einlesen nicht besser. Und wenn eGK-Datensätze kommuniziert werden müssen, kommt man wohl oder übel nicht darum herum, den originalen Datensatz zu versenden, wie es schon von HL7-DE vorgesehen ist. Dann dürfte man beim Dokumentenaustausch sein. </p>",
        "id": 153855388,
        "sender_full_name": "Jan Schuster",
        "timestamp": 1478205397
    },
    {
        "content": "<p>Gott, gib mir die Gelassenheit, Dinge hinzunehmen, die ich nicht ändern kann (KBV-Datensätze), den Mut, Dinge zu ändern, die ich ändern kann (FHIR-Extensions), und die Weisheit, das eine vom anderen zu unterscheiden.<br>\n:D</p>",
        "id": 153855390,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478206072
    },
    {
        "content": "<p>Ja, der Gedanke, den eGK-Datensatz in einer Attachment-Resource Huckepack fahren zu lassen, ist sicherlich nicht verkehrt. Trotzdem hat es auch einen gewissen Reiz, die in der eGK vorhandenen Daten in FHIR nutzbar zu machen. Wobei man da wiederum nicht sklavisch an die KBV-Vorgaben halten müsste. </p>",
        "id": 153855391,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478206245
    },
    {
        "content": "<p>Da schließe ich mich an. </p>",
        "id": 153855392,
        "sender_full_name": "Jan Schuster",
        "timestamp": 1478206278
    },
    {
        "content": "<p>Ja nu. Das schöne an Extensions ist ja: man kann sie ignorieren :)</p>",
        "id": 153855393,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478206371
    },
    {
        "content": "<p>Wen's interessiert: in DE gibt es ~100.000 Adelige.</p>",
        "id": 153855395,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478206890
    },
    {
        "content": "<p>[...]da ist der FDP-Finanzexperte Hermann Otto Solms, nach dem deutschen Namensrecht eigentlich <strong>Hermann Otto Prinz zu Solms-Hohensolms-Lich</strong> [...] O.o</p>",
        "id": 153855397,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478206940
    },
    {
        "content": "<p>Leider ist ein erheblicher Teil des Deutschen Adels verarmt, so dass man sich nicht immer drauf verlassen kann, dass die unter Pseudonym in die Klinik einchecken :D</p>",
        "id": 153855398,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478207035
    },
    {
        "content": "<p>...andererseits sollten wir uns nicht beklagen. Es gibt Länder die haben es schlimmer: <a href=\"https://de.wikipedia.org/wiki/Arabischer_Name\" target=\"_blank\" title=\"https://de.wikipedia.org/wiki/Arabischer_Name\">https://de.wikipedia.org/wiki/Arabischer_Name</a></p>",
        "id": 153855400,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478207234
    },
    {
        "content": "<p>Um nochmal den aktuellen Stand meiner Meinung kund zu tun ;-) :<br>\nAus der begrenzten deutschen Sicht sind wir glaube ich mit den eGK-Stammdaten am Maximum dessen, was die Systeme detailliert verarbeiten.<br>\nIch tendiere zu multiplen family, denn<br>\na) jedes System, das FHIR spricht, muss wissen, dass die Kardinalität von HumanName.family 0..* ist und sollte, falls es intern nur 0..1 verarbeitet, selbst wissen, wie es damit umgeht.<br>\nb) die ISO-Extension entspricht dem use-Attribut aus v3 und ist zugegebenermaßen \"etwas\" länger in der XML-Repräsentation. Aber damit hätten wir's (bis auf evtl. das Slicing-Problem, seufz - eventuell lösbar mit einer Extension für den \"sortierfähigen Haupt-Nachnamensbestandteil\")<br>\nc) für Vollnamen-Suche gibt es HumanName.text, das wir dann ggf. auf 1..1 profilieren sollten. Das löst auch alle für mein beschränktes Vorstellungsvermögen denkbaren Probleme von d'Artagnan bis de la Croix.<br>\nWas ich in FHIR einfach nicht sehe, ist, aus HumanName einen Datentyp für Namensforscher zu machen (sorry für die leichte Polemik ;-)</p>",
        "id": 153855471,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478250525
    },
    {
        "content": "<p>Von den Arabern oder den Chinesen mit ihrer Reihenfolge &lt;Nachname&gt; &lt;Vorname&gt; würde ich mich (zumindest für deutsche Profile) nicht wirklich beeinflussen lassen, wenn es nicht mal die Gematik tut</p>",
        "id": 153855472,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478250585
    },
    {
        "content": "<p>Und ist das nicht letztlich der Grund, warum FHIR die Sachen so einfach abbildet: es gibt einfach zu viele Sonderfälle, um das detailliert in den Standard zu bringen. Wer es detaillierter braucht kann/soll es profilieren.</p>",
        "id": 153855473,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478250740
    },
    {
        "content": "<p>(OT: nix gegen meinen Prinzen, von der Parteizugehörigkeit vielleicht abgesehen - ich sitze hier exakt in der Mitte zwischen Solms und Hohensolms :D)</p>",
        "id": 153855474,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478250851
    },
    {
        "content": "<p>Ich habe an dieser Stelle mal die Frage nach der konkreten Darstellung in JSON zu dem o.g. Herren. Wäre es so nach HumanName korrekt dargestellt? [{<br>\n    \"resourceType\": \"HumanName\",<br>\n    \"use\": \"usual\",<br>\n    \"text\": \"Hermann Otto Prinz zu Solms-Hohensolms-Lich\",<br>\n    \"family\": \"Solms-Hohensolms-Lich\",<br>\n    \"given\": \"Herman\"<br>\n}, {<br>\n    \"resourceType\": \"HumanName\",<br>\n    \"use\": \"usual\",<br>\n    \"given\": \"Otto\"<br>\n}, {<br>\n    \"resourceType\": \"HumanName\",<br>\n    \"use\": \"usual\",<br>\n    \"given\": \"Prinz\"<br>\n}, {<br>\n    \"resourceType\": \"HumanName\",<br>\n    \"use\": \"usual\",<br>\n    \"given\": \"zu\"<br>\n}]</p>",
        "id": 153855500,
        "sender_full_name": "Jan Schuster",
        "timestamp": 1478262572
    },
    {
        "content": "<p>Ich misch mich da mal ungefragt ein: Nicht ganz korrekt. HumanName ist keine eigene Resource, darum hat es auch kein <code>resourceType</code>. Dann sind <code>given</code> und <code>family</code> arrays of strings, nicht einzelne Strings. Du hättest also eher sowas wie:</p>\n<div class=\"codehilite\"><pre>{\n  &quot;use&quot;: &quot;usual&quot;,\n  &quot;text&quot;: &quot;Hermann Otto Prinz zu Solms-Hohensolms-Lich&quot;,\n  &quot;prefix&quot;: [&quot;Prinz&quot;],\n  &quot;family&quot;: [&quot;Solms-Hohensolms-Lich&quot;, &quot;zu&quot;],\n  &quot;given&quot;: [&quot;Hermann&quot;, &quot;Otto&quot;],\n}\n</pre></div>\n\n\n<p>Nun einfach die Frage, wo denn jetzt \"zu\" zu stehen kommt. \"Prinz\" hätte ich ins Prefix genommen, ob das stimmt weiss ich aber auch nicht.</p>",
        "id": 153855524,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1478279619
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191339\">@Pascal Pfiffner</span> gefragt sind immer alle, die eine Antwort geben können ;-)</p>\n<p>Passt auf jeden Fall weitgehend, nur ist der Prinz leider kein prefix, da prefix per Definitionem vor dem Vornamen steht und Adelstitel korrekt vor dem Nachnamen stehen müssen, Das war ja einer der Auslöser dieser Diskussion, wobei momentan noch nicht klar ist, ob Prinz ein family mit ISO-Extension wäre oder eine Extension in sich, mit family 1..1 und \"Prinz zu Solms-Hohensolms-Lich\".</p>",
        "id": 153855529,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478282104
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span> : Zu Deinem Punkt c) HumanName.text löst Suchproblematik:<br>\nDa stimme ich nicht zu. Die meisten Suchmasken, die ich kenne, haben ein dediziertes Feld für Nachnamen und Vornamen. Als Implementierer würde ich also die Eingabe ins Vornamenfeld in das Suchkriterium \"given\" und die Eingabe ins Nachnamenfeld in \"family\" packen. Das Feld HumanName.text würde aber nur beim Suchkriterum \"name\" mit berücksichtigt, also bei einer Suche über <strong>alle</strong> Namensbestandteile. Davon könnte man nur profitieren, wenn man <strong>immer</strong> das globale Suchkriterium verwendet, egal welches Feld der Anwender befüllt. Damit hätte man aber Unmengen falsch-positiver Suchergebnisse!<br>\nDer Anwender wäre wohl kaum erfreut, wenn er auf der Suche nach \"George Michael\" \"Michael\" ins Nachnamenfeld tippt und lauter Suchergebnisse erhält, bei denen der Vorname \"Michael\" ist.</p>",
        "id": 153855532,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478284656
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191339\">@Pascal Pfiffner</span> Bei deinem Beispiel hätte ich jetzt erwartet, dass bei der Zerlegung des Namens die Reihenfolge beibehalten wird, also <code>\"family\": [\"zu\",\"Solms-Hohensolms-Lich\"],</code> Wie wüsste das empfangende System sonst, wie der Name wieder korrekt zusammengebaut werden muss. Allerdings hat die Reihenfolge der Attribute (zumindest in XML) keine besondere Bedeutung. Es könnte m.E. sogar passieren, dass die Reihenfolge z.B. bei der Konvertierung von XML &lt;-&gt; JSON durcheinandergewürfelt wird. Was mich in meiner Auffassung, dass \"family\" nichts anderes als den <strong>korrekten, vollständigen</strong> Nachnamen beinhalten sollte und jegliche Zerlegung desselben Systemen vorbehalten bleiben sollte, die die entsprechenden Extensions kennnen und verstehen, bekräftigt.</p>",
        "id": 153855533,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478285030
    },
    {
        "content": "<p>Hätte ich auch so gemacht, habe die ganze VV Diskussion nur am Rande mitverfolgt und da wurde irgendwann auch diese Lösung erwähnt. Ich stürz mich da aber jetzt nicht rein... :)</p>",
        "id": 153855534,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1478285264
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span>  Point taken ;-)<br>\nDeswegen hatte ich allerdings auch im implementers-Thread, bezogen auf nicht primär FHIR-basierte Systeme, geschrieben, dass es letztlich den Systemen überlassen bleibt, wie sie die Suche umsetzen.<br>\nWenn es ein separates Nachnamens-Suchfeld gibt und das System intern hierfür die 0..* family konkateniert oder andersrum mehrere Leerzeichen-getrennte Suchbegriffe mit entsprechenden Und-Verknüpfungen einzeln verwendet werden, ist das durchaus umsetzbar.<br>\nWenn das System intern sowieso nur einen Nachnamen speichert und die Daten aus FHIR konkateniert, ist es ohnehin trivial.</p>",
        "id": 153855536,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478285563
    },
    {
        "content": "<p>Andererseits kann ich auf einem FHIR-Server eben gerade nach HumanName.text='George Michael' suchen ;-)</p>",
        "id": 153855537,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478285626
    },
    {
        "content": "<p>...es sei denn, in HumanName.Text steht \"Michael, George\" drin :P</p>",
        "id": 153855542,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478285751
    },
    {
        "content": "<p>:D</p>",
        "id": 153855543,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478285770
    },
    {
        "content": "<p>Herr, gib mir Kraft ;,D</p>",
        "id": 153855544,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478285784
    },
    {
        "content": "<p>OK, der Flat-Ansatz würde am Ende auch bedeuten, dass es keinen Grund gibt, family auf 0..* zu lassen, oder?</p>",
        "id": 153855547,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478285896
    },
    {
        "content": "<p>Nein, höchstens für die Spanier, die tatsächlich einzelne , gleichberechtigte Namesteile haben, die man in beliebiger Reihenfolge zusammenwürfeln darf :) Für Deutsche Profile würde ich das in der Tat auf 0..1 setzen wollen. </p>",
        "id": 153855552,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478286823
    },
    {
        "content": "<p><a href=\"https://www.w3.org/International/questions/qa-personal-names\" target=\"_blank\" title=\"https://www.w3.org/International/questions/qa-personal-names\">https://www.w3.org/International/questions/qa-personal-names</a></p>",
        "id": 153855553,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478286891
    },
    {
        "content": "<p>Wie intensiv müssen deutsche Profile mit z.B. niederländischen, ägyptischen oder indischen Profilen kompatibel sein?</p>",
        "id": 153855554,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478286954
    },
    {
        "content": "<p>Also ist ein Use Case vorstellbar, in dem ein holländisches System einem deutschen eine FHIR-Resource schickt?</p>",
        "id": 153855555,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478287063
    },
    {
        "content": "<p>(oder ein spanisches)</p>",
        "id": 153855557,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478287094
    },
    {
        "content": "<p>...also wie ich gerade im Int' thread lamentiert habe, gebe ich den Anspruch darauf, dass deutsche und Niederländische Voorvoegsels mit der gleichen Extension modelliert werden sollten, auf :D<br>\nAber die Interpretation der core Attribute sollte weltweit die gleiche sein. Und da sehe ich das Problem, wenn ein Profil den Namen komplett zerlegt und ein anderes nicht, da wir ja inzwischen erkannt haben, dass das die Implementierung der Suche beeinflusst.</p>",
        "id": 153855573,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478290861
    },
    {
        "content": "<p>Zum Thema family 0..1: In der Schweiz war es bis 2013 möglich, bei Heirat den Namen des Ehepartners dazu zu nehmen (\"Schmid\" ➔ \"Schmid Meier\"), gibt/gab es das in Deutschland nicht? Sprich für Schweizer mit Doppelnamen würde 0..1 nicht funktionieren. Den \"Allianznamen\" mit Bindestrich (\"Schmid-Meier\") gibt es weiterhin, der ginge aber auch mit 0..1.</p>",
        "id": 153855617,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1478354161
    },
    {
        "content": "<p>Meines Wissens gibt es in Deutschland nur den Doppelnamen mit Bindestrich, und der zählt als ein Name</p>",
        "id": 153855622,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478360782
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191339\">@Pascal Pfiffner</span> : Der Plan wäre der, \"Schmidt Meier\" als <strong>ein</strong> String in 0..1 family zu speichern.<br>\nWenn eine Differenzierung der Art \"birth name\"/\"partner name\" erforderlich wäre, dann würde das in den entsprechenden Extensions passieren. Der Vorteil gegenüber zwei Iterationen von family  wäre, dass alle Systeme den Namen stets vollständig und in der richtigen Reihenfolge wiedergeben würden (sofern Reihenfolge überhaupt relevant ist) und für die Such-Eingabe \"Schmidt M...\"  als Nachnamen auch einen Suchtreffer finden würden.</p>",
        "id": 153855627,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478373547
    },
    {
        "content": "<p>Hmmm, kann man wohl so machen, hätte ich jetzt aber als separate Namen erwartet. Aber wie gesagt, nicht mein Gebiet. ;)</p>",
        "id": 153855687,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1478479750
    },
    {
        "content": "<p>Ich meine das Nachname1 getrennt mit Leerzeichen Nachname 2 (oder mehr) nur mit einer Kardinalität 0..n  abgebildet werden kann. Nach meinem Verständnis will der Standard es so...</p>",
        "id": 153855802,
        "sender_full_name": "Jan Schuster",
        "timestamp": 1478554485
    },
    {
        "content": "<p>Streng genommen nicht. Der Datentyp string erlaubt whitespace (vorne, hinten und dazwischen). Genau genommen aber schon, da es in der Beschreibung des Feldes heißt \"For family name, hyphenated names such as \"Smith-Jones\" are a single name, but names with spaces such as \"Smith Jones\" are broken into multiple parts.\"  Damit ist die ISO-Extension für die Qualifizierung von Namensteilen bei Bindestrich-Namen also raus. Ich bin mir noch nicht sicher, ob es zumutbar ist, beide Namens-Varianten bei der Implementierung der Suche zu berücksichtigen. Außerdem: wir hatten dass tolle Beispiel \"Van Wijk-de Boer\" :)</p>",
        "id": 153855951,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478603821
    },
    {
        "content": "<p>Im Zweifel sollten wir m.E. der Spezifikation des komplexen Datentyps HumanName folgen, auch wenn diese nur eine verbale, aber keine technische Einschränkung in Bezug auf den verwendeten primitiven Datentyp string macht.<br>\nUm das Zitat nochmal zu erweitern: \"The parts of a name SHOULD NOT contain whitespace\" (klare Aussage), und in Bezug auf Suche:\"Systems that operate across cultures should generally rely on the text form for presentation, and use the parts for index/search functionality. For this reasons, applications SHOULD populate the text element for future robustness.\"<br>\nDas ist zwar beides eine Stufe weicher als SHALL/SHALL NOT, aber ich denke nicht, dass die Argumente, es anders zu machen, stark genug sind.<br>\nDer Part zum Thema Suche sagt meines Erachtens jedenfalls klar aus, dass eine Applikation bei der Suche mit multiplen name parts umgehen können muss.</p>",
        "id": 153855981,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478616775
    },
    {
        "content": "<p>Ich glaube nicht, dass eine Suche abhängig von der Verwendung 1 : 1 oder 1 : n in der Komplexität steigt. Für Applikationen sehe ich den Vorteil, wenn der Standard wie vorgesehen verwendet wird. Damit steigt die Verlässlichkeit. Ich würde mir da nicht allzu viele Gedanken um die Patientenquellen machen.</p>",
        "id": 153856036,
        "sender_full_name": "Jan Schuster",
        "timestamp": 1478632839
    },
    {
        "content": "<p>Ok, zurück ans Zeichenbrett. Wir verwenden also den Namen so, wie vom Standard empfohlen und trennen bei Leerzeichen, versuchen aber gleichzeitig, die Extensions für die eKG zu implementieren. Dann rennen wir als erstes in das Problem, dass einige der Vorsätze laut <a href=\"https://www.vdek.com/vertragspartner/arbeitgeber/deuev/_jcr_content/par/download_7/file.res/Anlage_06_Vers.pdf\" target=\"_blank\" title=\"https://www.vdek.com/vertragspartner/arbeitgeber/deuev/_jcr_content/par/download_7/file.res/Anlage_06_Vers.pdf\">https://www.vdek.com/vertragspartner/arbeitgeber/deuev/_jcr_content/par/download_7/file.res/Anlage_06_Vers.pdf</a> gar keine Leerzeichen habe (z.B. o'Connor, d'Agostino). Also Qualifier für die Parts zu verwenden fällt aus, da wir einige der Namen gar nicht in parts trennen können. Folglich bräuchten wir Extensions als zusätzliche Attribute. Der Einfachheit halber schreibe ich extensions jetzt mal wie normale Attribute:</p>\n<div class=\"codehilite\"><pre>&lt;family value=&quot;van&quot;/&gt;\n&lt;family value=&quot;Beethoven&quot;/&gt;\n&lt;family-ex-vorsatz value=&quot;van&quot;/&gt; \n</pre></div>\n\n\n<div class=\"codehilite\"><pre>&lt;family value=&quot;o&#39;Connor&quot;/&gt;\n&lt;family-ex-vorsatz value=&quot;o&#39;&quot;/&gt;\n</pre></div>\n\n\n<div class=\"codehilite\"><pre>&lt;family value=&quot;Graf&quot;/&gt;\n&lt;family value=&quot;von&quot;/&gt;\n&lt;family value=&quot;Dracula&quot;/&gt;\n&lt;family-ex-vorsatz value=&quot;von&quot;/&gt;\n&lt;family-ex-nobility value=&quot;Graf&quot;/&gt;\n</pre></div>",
        "id": 153856058,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478639570
    },
    {
        "content": "<p>geht soweit. Um den Nachnamen korrekt anzuzeigen, müssten die Systeme alle family-Attribute in der richtigen Reihenfolge mit Leerzeichen separiert zusammenpappen.<br>\nDie von der eGK gewünschte Differenzierung wäre vorhanden, zumindest für die Systeme, die's interessiert und die daher die Extensions implementiert haben.</p>",
        "id": 153856060,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478639746
    },
    {
        "content": "<p>Subobtimal wäre die Tatsache, dass die Systeme nicht wirklich erkennen könnten, welcher Teil  für die alphabetische Sortierung relevant ist. Aber das war ja das kleinste der Probleme.</p>",
        "id": 153856061,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478639829
    },
    {
        "content": "<div class=\"codehilite\"><pre>&lt;given value=&quot;Otto&quot;/&gt;\n&lt;family value=&quot;Prinz&quot;/&gt;\n&lt;family value=&quot;zu&quot;/&gt;\n&lt;family value=&quot;Solms-Hohensolms-Lich&quot;/&gt;\n&lt;family-ex-vorsatz value=&quot;zu&quot;/&gt;\n&lt;family-ex-nobility value=&quot;Prinz&quot;/&gt;\n</pre></div>",
        "id": 153856065,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478640078
    },
    {
        "content": "<p>Dr. Otto Graf Lambsdorff mdB a.D.</p>\n<div class=\"codehilite\"><pre>&lt;prefix value =&quot;Dr.&quot;/&gt;\n&lt;given value=&quot;Otto&quot;/&gt;\n&lt;family value=&quot;Graf&quot;/&gt;\n&lt;family value=&quot;Lambsdorff&quot;/&gt;\n&lt;family-ex-nobility value=&quot;Graf&quot;/&gt;\n&lt;suffix value=&quot;mdB a.D.&quot;/&gt;\n</pre></div>",
        "id": 153856068,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478640546
    },
    {
        "content": "<p>Die redundante Übermittlung der eigentlich identischen Information (\"von\" als family und \"von\" als family-ex-vorsatz) finde ich etwas unelegant.</p>\n<p>HumanName definiert zwar Leerzeichen als Grund, den Familiennamen aufzusplitten, verbietet aber andererseits nicht ausdrücklich das Aufsplitten aus anderen Gründen (außer beim Doppelnamen, Beispiel \"Smith-Jones\").<br>\nRein formal steht also der Separierung des \"d'\" aus \"d'Agostino\" nichts im Weg. Ob da ein Leerzeichen steht oder nicht, wird mittels HumanName.text eindeutig definiert.<br>\nFolgt man dem Wortlaut, muss ein System den Namen nicht zusammensetzen, denn:<br>\ntext =&gt; Repräsentation (inclusive Leerzeichen oder eben halt keine Leerzeichen, wo sie nicht hingehören)<br>\nprefix, given, family, suffix =&gt; Suche, Sortierung.<br>\nVon daher sehe ich noch nichts, was gegen die ISO-Extension spricht.<br>\nSchlimmstenfalls könnten man ein \"directly concatenated voorvoegsel\" dort mit aufnehmen</p>",
        "id": 153856178,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478686783
    },
    {
        "content": "<p>Die Regel, wann Namen getrennt werden und wann nicht, muss \"computable\" sein, wird sie aus Sicht der Programmlogik \"beliebig\" getroffen, kann man keine konsistente Suche implementieren.</p>\n<p>Beispiel 1<br>\nfamily= \"van Beethoven\" <br>\nSuche nach Patient?family=Beethoven&amp;family=van =&gt; 0 Treffer<br>\nSuche nach Patient?family=van%20Beethoven =&gt; 1 Treffer<br>\nBeispiel 2<br>\nfamily =\"Gonzales\" <br>\nfamily=\"Lopez\"<br>\nSuche nach Patient?family=Gonzales&amp;family=Lopez =&gt; 1 Treffer<br>\nSuche nach Patient?family=Gonzales%20Lopez =&gt; 0 Treffer</p>",
        "id": 153856180,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478687853
    },
    {
        "content": "<p>Man bekommt also nur dann korrekte Suchergebnisse, wenn man<br>\nsich darauf verlassen kann, dass die Namen bei Leerzeichen getrennt werden,<br>\ndenn nur dann kann man die Implementierung dafür sorgen, dass mehrteilige Sucheingaben ebenfalls in aufgesplittet werden somit korrekte treffer erzielen.</p>\n<p>Beim Beispiel1 gibt die Suche nach  \"van Beethoven\" nur dann korrekte Ergebnisse, wenn die Sucheingabe nicht gesplittet wird:<br>\nSuche nach Patient?family=van%20Beethoven =&gt; 1 Treffer<br>\nBeim Beispiel 2  gibt die Suche nur dann einen Treffer, wenn die Sucheingabe \"Gonzales Lopez\" in Einzelteile zerlegt wird:<br>\nSuche nach Patient?family=Gonzales&amp;family=Lopez =&gt; 1 Treffer</p>\n<p>Woher soll die Programmlogik nun wissen ob die Sucheingabe gesplittet werden muss oder nicht?</p>",
        "id": 153856181,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478687859
    },
    {
        "content": "<p>Zur Verwendung von HumanName.Text:<br>\nDa hier der gesamte Name dargestellt wird, dann darauf nicht zurückgegriffen werden, wenn der Patient mit Nachnamen angesprochen werden soll, also klassischerweise die Briefanrede<br>\n\"Sehr geehrter Herr &lt;Nachname&gt;\". <br>\nHumanName.Text ist m.E. auch für die Suche nicht verwendbar, da ich da immer nur eine :contains Volltextsuche verwenden kann, da ich ja nicht weiß wo sich der gesuchte Namensteil befindet. Die Suche nach Patient?family=John implementiert als Patient?name:contains=John würde eben nicht nur Elton John finden sondern auch alle Leute, die \"John\" mit vor- oder Mittelnamen heißen. Das wäre viel zu ungenau.</p>",
        "id": 153856182,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478688386
    },
    {
        "content": "<p>Das Beispiel 2 ist konsistent und das würde ich spezifikationsgemäß auch genau so erwarten. Die Applikation darf genau genommen nicht nach Patient?family=Gonzales%20Lopez suchen (auch wenn eventuell ein freundlicher Server das intern als Patient?family=Gonzales&amp;family=Lopez verarbeiten würde).<br>\nAllerdings ist die Frage, was beim ungekehrten Fall \"d'Agostino\" passieren würde, wenn es eGK-konform getrennt wäre, also:<br>\n...<br>\nfamily=\"d'\"<br>\nfamily=\"Agostino\"<br>\n....<br>\nIn diesem Fall würde eine Suche nach \"d'Agostino\" 0 Treffer liefern.<br>\nIn der Praxis würde wohl jeder User dann einfach nach \"Agostino\" suchen und das gewünschte finden. Oder die Applikation müsste so intelligent sein, die entsprechenden VVs laut DEÜV-Anlage herauszufiltern :-/<br>\nDie Frage ist: ist das ein zumutbarer Sonderfall? Ansonsten bleibt wohl wirklich nichts anderes übrig als die Redundanz zu akzeptieren.</p>",
        "id": 153856193,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478692414
    },
    {
        "content": "<p>Bei der Briefanrede bin ich ein wenig pessimistisch, ob das automatische Generieren eines konkatenierten Nachnamens immer korrekt wäre: <a href=\"http://www.knigge.de/themen/kommunikation/nicht-titulierte-adelsnamen-2051.htm\" target=\"_blank\" title=\"http://www.knigge.de/themen/kommunikation/nicht-titulierte-adelsnamen-2051.htm\">http://www.knigge.de/themen/kommunikation/nicht-titulierte-adelsnamen-2051.htm</a></p>",
        "id": 153856194,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478692774
    },
    {
        "content": "<p>Was aus meiner Sicht noch gegen den \"redundanten\" Ansatz spricht, ist, dass der sortierrelevante (Haupt-)Teil des Nachnamens nicht klar als solcher gekennzeichnet ist. Ein System müsste den quasi aus den Differenzen zwischen den family-Elementen und den Extensions extrahieren.</p>",
        "id": 153856195,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478693171
    },
    {
        "content": "<p>D'Agostini ist meiner Meinung nach ein typisches Beispiel für einen Prefix. \"Richtige\" Systeme sollten die Namensbstandteile separat speichern (Siehe Anhang). Es stellt sich die Frage, woher Systeme z.B. den Unterschied in der Schreibweise von einem d' (ohne Freizeichen vor dem Namen) oder von (mit einem Freizeichen vor dem Namen) kennen soll. Das kann eigentlich nur durch den Textteil gelöst werden. Sind Ressourcen-Zugriffe wie ?family=name1&amp;family=name2 in dieser Form überhaupt zulässig? Auch wenn im Datentype family 1..n definiert ist, müsste der Zugriff doch ?family=name1%20name2 sein. Das müsste eben in der angefragten Applikation aufgelöst werden.<a href=\"/user_uploads/10155/DOxmd2nYFGB-wDIng-JjLI4q/Namensvorsatz.JPG\" target=\"_blank\" title=\"Namensvorsatz.JPG\">Namensvorsatz.JPG</a> <a href=\"/user_uploads/10155/4EVSJRgNxBVnI_PmmMgVrRtf/Namensvorsatz-hl7.JPG\" target=\"_blank\" title=\"Namensvorsatz-hl7.JPG\">Namensvorsatz-hl7.JPG</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/DOxmd2nYFGB-wDIng-JjLI4q/Namensvorsatz.JPG\" target=\"_blank\" title=\"Namensvorsatz.JPG\"><img src=\"/user_uploads/10155/DOxmd2nYFGB-wDIng-JjLI4q/Namensvorsatz.JPG\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/10155/4EVSJRgNxBVnI_PmmMgVrRtf/Namensvorsatz-hl7.JPG\" target=\"_blank\" title=\"Namensvorsatz-hl7.JPG\"><img src=\"/user_uploads/10155/4EVSJRgNxBVnI_PmmMgVrRtf/Namensvorsatz-hl7.JPG\"></a></div>",
        "id": 153856197,
        "sender_full_name": "Jan Schuster",
        "timestamp": 1478694936
    },
    {
        "content": "<p>/?family=name1&amp;family=name2  ist absolut zulässig. Es sind zwei separate, und-verknüpfte Bedingungen, die dann ein Ergebnis liefern, wenn ein Datensatz für beide Bedingungen einen Treffer hat. </p>",
        "id": 153856198,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478695150
    },
    {
        "content": "<p>Danke. Gut zu wissen. Ich bin halt ein Neuling.</p>",
        "id": 153856199,
        "sender_full_name": "Jan Schuster",
        "timestamp": 1478695208
    },
    {
        "content": "<p>Kein Problem. Dafür ist der Chat ja da :)<br>\nDie Suche nach strings ist in FHIR übrigens als \"Matching von links\" definiert, also<br>\nSuche nach \"Eve\" liefert auch \"Everywoman\", aber nicht \"Hever\"<br>\nErlaubt sind u.a. die modifier :contains und :exact, also<br>\nPatient?family:exact=Eve liefert nur \"Eve\" aber nicht \"Everywoman\"<br>\nPatient?family:contains=Eve liefert sowohl \"Eve\" als auch \"Everywoman\" als auch \"Hever\"</p>",
        "id": 153856200,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1478695602
    },
    {
        "content": "<p>Da wir jetzt doch einige Varianten der möglichen Namens-Darstellung durchdiskutiert haben, denke ich, es wäre sinnvoll, die Optionen mal zur Wahrung der Übersicht in einem Dokument gegenüberzustellen, in Bezug auf die Vor- und Nachteile, die die Varianten unter Berücksichtigung der verschiedenen Use Cases/Workflows und der diversen Namens-Spezialfälle haben.<br>\nIch denke, das könnte bei der finalen Entscheidungsfindung helfen ;-)<br>\nMeinungen dazu?</p>",
        "id": 153856222,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478705760
    },
    {
        "content": "<p>Laut Grahame ( <a href=\"https://chat.fhir.org/#narrow/stream/implementers/topic/http.3A.2F.2Fhl7.2Eorg.2Ffhir.2FStructureDefinition.2Fiso21090-EN-qualifie\" target=\"_blank\" title=\"https://chat.fhir.org/#narrow/stream/implementers/topic/http.3A.2F.2Fhl7.2Eorg.2Ffhir.2FStructureDefinition.2Fiso21090-EN-qualifie\">https://chat.fhir.org/#narrow/stream/implementers/topic/http.3A.2F.2Fhl7.2Eorg.2Ffhir.2FStructureDefinition.2Fiso21090-EN-qualifie</a> ) gibt es jetzt wohl eine Session zum Thema auf den DevDays.<br>\nWer nicht vor Ort ist und etwas beitragen möchte, sollte das also am besten bis Dienstag tun, wobei der Termin für die Session noch nicht feststeht.</p>",
        "id": 153856498,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1478852999
    },
    {
        "content": "<p>Servus, ich hatte aufgrund des letzten chilenischen FHIR Workshops leider keine Zeit für das Thema. Ich sichere gerade den deutschen und chilenischen Thread und schreibe während des Fluges mal etwas zusammen, die verschiedenen diskutierten Optionen.</p>",
        "id": 153856673,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1478966648
    },
    {
        "content": "<p><img alt=\":thumbsup:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/thumbsup.png\" title=\":thumbsup:\"></p>",
        "id": 153856703,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1479033322
    },
    {
        "content": "<p>Habe mal versucht die Diskussion zusammenzufassen: <a href=\"https://drive.google.com/file/d/0B3xFZMHgJ7j0Qlk4akJHMW01c28/view?usp=sharing\" target=\"_blank\" title=\"https://drive.google.com/file/d/0B3xFZMHgJ7j0Qlk4akJHMW01c28/view?usp=sharing\">https://drive.google.com/file/d/0B3xFZMHgJ7j0Qlk4akJHMW01c28/view?usp=sharing</a></p>",
        "id": 153857114,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1479275637
    },
    {
        "content": "<p>Spoiler: Wir haben auf den DevDays gerade eine Lösung erarbeitet, die unserem UseCase sehr entgegen kommt. Details folgen, sobald Grahame den entsprechenden ChangeRequest erstellt hat. Danke nochmal an <span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> für die tolle Zusammenfassung!</p>",
        "id": 153857348,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1479325517
    },
    {
        "content": "<p>Thanks Simone for the leadership. See <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12351\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12351\">GF#12351</a></p>",
        "id": 153857359,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1479327723
    },
    {
        "content": "<p><a href=\"https://twitter.com/ewoutkramer/status/798945605208932352\" target=\"_blank\" title=\"https://twitter.com/ewoutkramer/status/798945605208932352\">https://twitter.com/ewoutkramer/status/798945605208932352</a><br>\n:)</p>",
        "id": 153857362,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1479327966
    },
    {
        "content": "<p>Ich denke, das können wir abnicken: <br>\n<a href=\"http://build.fhir.org/datatypes.html#humanname\" target=\"_blank\" title=\"http://build.fhir.org/datatypes.html#humanname\">http://build.fhir.org/datatypes.html#humanname</a> <br>\n\"Nobility\" wäre dann eine national Extension analog zu den bereits definierten. <br>\nMeinungen?</p>",
        "id": 153858133,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1479826032
    },
    {
        "content": "<p>In Bezug auf Nobility bzw. unsere per eGK definierten 2 möglichen Nachnamens-Präfixe (\"Graf\" \"von\") ist da noch eine Inkonsistenz.</p>\n<p>Das Beispiel (\"Complex example from Germany\" auf <a href=\"http://build.fhir.org/datatypes-examples.html#HumanName\" target=\"_blank\" title=\"http://build.fhir.org/datatypes-examples.html#HumanName\">http://build.fhir.org/datatypes-examples.html#HumanName</a> ) verwendet <a href=\"http://hl7.org/fhir/StructureDefinition/humanname-own-prefix\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/humanname-own-prefix\">http://hl7.org/fhir/StructureDefinition/humanname-own-prefix</a> für \"Gräfin\". Die Extension selbst ist 0..1.<br>\nIn der Extension wird aber primär von Vorvoegsel gesprochen: <a href=\"http://build.fhir.org/extension-humanname-own-prefix.html\" target=\"_blank\" title=\"http://build.fhir.org/extension-humanname-own-prefix.html\">http://build.fhir.org/extension-humanname-own-prefix.html</a> . Das wird sicher auch von den Niederländern als Vorvoegsel interpretiert.</p>\n<p>Da das Beispiel dem Besprechungsergebnis widerspricht, sollte man das noch ändern, also z.B. \"Dr.phil. Regina Johanna Maria *von* Hochheim-Weilenfels, NCFSA\".<br>\nUnd dann hätten wir, wie besprochen, die National Extension für Nobility.</p>",
        "id": 153858146,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1479831105
    },
    {
        "content": "<p>Tadaaa: <a href=\"https://simplifier.net/BasisprofilDE/humanname-nobility/rendered\" target=\"_blank\" title=\"https://simplifier.net/BasisprofilDE/humanname-nobility/rendered\">https://simplifier.net/BasisprofilDE/humanname-nobility/rendered</a></p>",
        "id": 153858170,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1479849525
    },
    {
        "content": "<p><img alt=\":beers:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/beers.png\" title=\":beers:\"></p>",
        "id": 153858171,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1479854479
    },
    {
        "content": "<p>Als überzeugter Republikaner und Verfechter der Tatsache das es in Deutschland de jure bereits seit 98 Jahren keine Adelstitel mehr gibt<br>\nsollte dieser Begriff auch nicht in der extension auftauchen.</p>\n<p>Bitte ausschliesslich den Begriff Namenszusatz verwenden</p>",
        "id": 153858244,
        "sender_full_name": "Peter Scholz",
        "timestamp": 1479898732
    },
    {
        "content": "<p>Hm, ja hast recht. Wir waren an \"Nobility\" hängen geblieben, da dies der einzig zutreffende Code in der ISO-Extension war. Nun da diese Extension hinfällig ist, müssen wir uns auch nicht mehr an ISO-Nomenklatur halten</p>",
        "id": 153858245,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1479898849
    },
    {
        "content": "<p>korrigiert.<br>\nIn der Beschreibung habe ich den Hinweis auf Adelstitel drin gelassen, damit der Namenszusatz vom Vorsatzwort unterscheid bar ist, welche ja in eine andere Extension gehört...</p>",
        "id": 153858246,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1479899419
    },
    {
        "content": "<p>Sind die Kardinalitäten auf der eGK eigentlich für beides 0..1 oder 0..* ?</p>",
        "id": 153858247,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1479899450
    },
    {
        "content": "<p>sieht gut aus </p>",
        "id": 153858248,
        "sender_full_name": "Peter Scholz",
        "timestamp": 1479900137
    },
    {
        "content": "<p>The grumpy old man is right ;-)<br>\n<span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span>  Die Kardinalität ist 0..1. Das wäre eines der Beispiele (given = \"Jürgen\", own-prefix = \"von der\", family=\"von der Lippe\")</p>",
        "id": 153858315,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1479917467
    },
    {
        "content": "<p>Ich hab gerade noch den URL-Key geändert, der lautete noch auf nobility. Jetzt also: <a href=\"https://simplifier.net/BasisprofilDE/humanname-namenszusatz/rendered\" target=\"_blank\" title=\"https://simplifier.net/BasisprofilDE/humanname-namenszusatz/rendered\">https://simplifier.net/BasisprofilDE/humanname-namenszusatz/rendered</a></p>",
        "id": 153858316,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1479917659
    },
    {
        "content": "<p>Den Verweis auf die own-name Extension im Beschreibungstext ersetze ich auch gerade mal durch own-prefix ;-)</p>",
        "id": 153858317,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1479917821
    },
    {
        "content": "<p>Ich habe mir eben die Beispiele von Grahame angeschaut, meiner Meinung fehlt hier überall die family-plain &amp; und maiden-plain Extensions</p>",
        "id": 153858318,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1479917836
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> Liegt wahrscheinlich daran, dass wir die nicht defniert hatten?</p>",
        "id": 153858320,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1479918315
    },
    {
        "content": "<p>während der Diskussion in Amsterdam wurde diese diskutiert. Um Simones Example nochmals zu posten:</p>\n<div class=\"codehilite\"><pre>(German version)\n    <span class=\"nt\">&lt;family</span> <span class=\"na\">value=</span><span class=\"s\">&quot;van Wijk-de Boer&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/family-voorvoegsel&quot;</span><span class=\"nt\">&gt;</span>\n         <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;van&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/extension&gt;</span>\n    <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/family-plain&quot;</span><span class=\"nt\">&gt;</span>\n         <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Wijk-de Boer&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/extension&gt;</span>\n\n(Dutch version)\n     <span class=\"nt\">&lt;family</span> <span class=\"na\">value=</span><span class=\"s\">&quot;van Wijk-de Boer&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/family-voorvoegsel&quot;</span><span class=\"nt\">&gt;</span>\n         <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;van&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/extension&gt;</span>\n     <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/maiden-voorvoegsel&quot;</span><span class=\"nt\">&gt;</span>\n         <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;de&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/extension&gt;</span> \n    <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/family-plain&quot;</span><span class=\"nt\">&gt;</span>\n         <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Wijk&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/extension&gt;</span>\n      <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/maiden-plain&quot;</span><span class=\"nt\">&gt;</span>\n         <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Boer&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/extension&gt;</span>\n</pre></div>",
        "id": 153858321,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1479918401
    },
    {
        "content": "<p>Ja, aber im Ergebnis sind sie nicht mehr drin:</p>\n<p>\"based on v2:<br>\n  Own Family name Prefix<br>\n  Own Family name <br>\n  Family name Prefix from Partner/Spouse<br>\n  Family name from Partner/Spouse <br>\nnot based on v2, but for es:<br>\n  Mother's Family Name<br>\n  Father's Family Name<br>\n2a. add extension to core for HumanName:<br>\n  Name Assembly Order per v2, wtih v2 and Dutch codes.\"</p>",
        "id": 153858322,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1479918541
    },
    {
        "content": "<p>statt maiden und family sind's jetzt own und partner.<br>\nvoorvoegsel =&gt; prefix<br>\nplain =&gt; name</p>",
        "id": 153858323,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1479918742
    },
    {
        "content": "<p>Also semantisch gleich, nur anders benannt</p>",
        "id": 153858324,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1479918795
    },
    {
        "content": "<p>Und die Reihenfolge ist durch humanname-assembly-order festgelegt</p>",
        "id": 153858325,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1479918833
    },
    {
        "content": "<p>ich habe mal das German Example entsprechend angepasst:<br>\n<a href=\"https://chat.fhir.org/#narrow/stream/implementers/subject/http.3A.2F.2Fhl7.2Eorg.2Ffhir.2FStructureDefinition.2Fiso21090-EN-qualifie/near/47693\" target=\"_blank\" title=\"https://chat.fhir.org/#narrow/stream/implementers/subject/http.3A.2F.2Fhl7.2Eorg.2Ffhir.2FStructureDefinition.2Fiso21090-EN-qualifie/near/47693\">https://chat.fhir.org/#narrow/stream/implementers/subject/http.3A.2F.2Fhl7.2Eorg.2Ffhir.2FStructureDefinition.2Fiso21090-EN-qualifie/near/47693</a></p>",
        "id": 153858327,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1479919274
    },
    {
        "content": "<p>Da ich gerade mal ein maximal komplexes Beispiel zusammenzimmere: 2 Fragen.<br>\n(a) multiple Titel (\"Prof. Dr. med. Dr. rer. nat.\") zusammen in ein Prefix (realitätsnah und eGK-konform) oder auf mehrere Prefixe aufsplitten?<br>\n(b) fordern wir die ISO-Extension mit Code \"AC\" oder lassen wir die optional?</p>",
        "id": 153858334,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1479921448
    },
    {
        "content": "<p>Als Grundlage: <a href=\"https://simplifier.net/BasisprofilDE/humanname-example-1/xmlview\" target=\"_blank\" title=\"https://simplifier.net/BasisprofilDE/humanname-example-1/xmlview\">https://simplifier.net/BasisprofilDE/humanname-example-1/xmlview</a></p>",
        "id": 153858335,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1479922636
    },
    {
        "content": "<p>a) würde ich zusammen belassen. Ich sehe keinen Vorteil Patienten nach der Anzahl ihrer akad. Titel zu sortieren <img alt=\":smile_cat:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/smile_cat.png\" title=\":smile_cat:\"> <br>\nb) was bedeutet fordern hier? In einem deutschen Profil würde ich die ISO Extension mit AC mit 0..1 einbinden</p>",
        "id": 153858384,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1479983984
    },
    {
        "content": "<p>Ich habe noch 2 Kommentare zum Namenszusatz: <br>\n1) Wollen wir die Extension <a href=\"https://simplifier.net/BasisprofilDE/humanname-namenszusatz/rendered\" target=\"_blank\" title=\"https://simplifier.net/BasisprofilDE/humanname-namenszusatz/rendered\">https://simplifier.net/BasisprofilDE/humanname-namenszusatz/rendered</a> wirklich eine deutsche URL geben, oder wäre es nicht mehr im Sinne der Interoperabilität hier eine sprechende englische URL zu vergeben?<br>\n2) brauchen wir NamensZusatz überhaupt da wir eigentlich: <a href=\"http://hl7.org/fhir/StructureDefinition/humanname-own-prefix\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/humanname-own-prefix\">http://hl7.org/fhir/StructureDefinition/humanname-own-prefix</a> dafür nutzen könnten. Um beim (erweiterten) Beispiel von <a href=\"http://build.fhir.org\" target=\"_blank\" title=\"http://build.fhir.org\">build.fhir.org</a> zu bleiben:</p>\n<div class=\"codehilite\"><pre>...\n  <span class=\"nt\">&lt;family</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Gräfin von Hochheim-Weilenfels&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/humanname-own-prefix&quot;</span> <span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Gräfin&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/extension&gt;</span>\n    <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/humanname-own-prefix&quot;</span> <span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;von&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/extension&gt;</span>\n    <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/humanname-own-name&quot;</span> <span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Hochheim-Weilenfels&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/extension&gt;</span>\n  <span class=\"nt\">&lt;/family&gt;</span>\n...\n</pre></div>",
        "id": 153858385,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1479984263
    },
    {
        "content": "<p>Der NamensZusatz ist doch auch nur ein prefix vor dem Nachnamen, die Reihenfolge der prefixe in XML und JSON bleiben erhalten, da ein wiederholendes Element (humanname-own-prefix) als Liste gespeichert wird.</p>",
        "id": 153858386,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1479984396
    },
    {
        "content": "<p>oder man schreibt es gleich so: </p>\n<div class=\"codehilite\"><pre>...\n  <span class=\"nt\">&lt;family</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Gräfin von Hochheim-Weilenfels&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/humanname-own-prefix&quot;</span> <span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Gräfin von&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/extension&gt;</span>\n    <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/humanname-own-name&quot;</span> <span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Hochheim-Weilenfels&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/extension&gt;</span>\n  <span class=\"nt\">&lt;/family&gt;</span>\n...\n</pre></div>\n\n\n<p>Fände ich noch besser. Dann könnte man die prefix Extension auf 0..1 profilen</p>",
        "id": 153858387,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1479984506
    },
    {
        "content": "<p>und hier noch ein angepasstes Beispiel der maximal komplexen Patientin:</p>\n<div class=\"codehilite\"><pre><span class=\"nt\">&lt;Patient&gt;</span>\n    <span class=\"nt\">&lt;name&gt;</span>\n        <span class=\"nt\">&lt;use</span> <span class=\"na\">value=</span><span class=\"s\">&quot;official&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;text</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Prof. Dr. med. Dr. rer. nat. Marianne Sabine Franziska Freifrau von und zu Rathenburg vor der Isar-Mayer, MdB&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;family</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Freifrau von und zu Rathenburg vor der Isar&quot;</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/humanname-own-prefix&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Freifrau von und zu&quot;</span> <span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/humanname-own-name&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Rathenburg vor der Isar&quot;</span> <span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/humanname-partners-name&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Mayer&quot;</span> <span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;/extension&gt;</span>\n        <span class=\"nt\">&lt;/family&gt;</span>\n        <span class=\"nt\">&lt;given</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Marianne&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;given</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Sabine&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;given</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Franziska&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;prefix</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Prof. Dr. med. Dr. rer. nat.&quot;</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;AC&quot;</span> <span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;/extension&gt;</span>\n        <span class=\"nt\">&lt;/prefix&gt;</span>\n        <span class=\"nt\">&lt;suffix</span> <span class=\"na\">value=</span><span class=\"s\">&quot;MdB&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/name&gt;</span>\n<span class=\"nt\">&lt;/Patient&gt;</span>\n</pre></div>\n\n\n<p>Wegen der Geschlechtergerechtigkeit habe ich mir erlaubt das Geschlecht zu ändern. Die family prefixe habe ich mal zusammengezogen, und der Dame einen Doppelnamen, incl. Extension für den Partnernamen verpasst.</p>",
        "id": 153858388,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1479984872
    },
    {
        "content": "<p>b) \"fordern\" wäre 1..1. Sehe ich aber auch so, dass der ISO-Code hier optional ist.</p>",
        "id": 153858410,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1480003452
    },
    {
        "content": "<p>(1) Das Namenszusatz-Präfix ist ja eine national extension, von daher darf das IMHO grundsätzlich auch deutsch heißen (ich sag nur: \"voorvoegsel\" ;-). Aber ich würde jetzt keine Grundsatzdiskussion darum anzetteln, abgesehen davon, dass wahrscheinlich niemand intuitiv so etwas wie \"humanname-own-addendum-prefix\" nachvollziehen kann, während der \"Namenszusatz\" zumindest in den deutschen Spezifikationen auftaucht.<br>\nWenn man das Konzept, rein englisch zu bleiben, konsequent durchziehen will, wird das allerdings spätestens bei Begriffen wie \"BSNR\" oder \"LANR\" schwierig. Ich würde also eher auf die Zielgruppe fokussieren.</p>\n<p>(2) Der ganze Hintergrund dieser national extension ist ja, zwischen Vorsatzwort und Namenszusatz (ex-nobility)  unterscheiden zu können. Das wäre bei zweimal humanname-own-prefix nicht gegeben und schon gar nicht, wenn wir den auf 0..1 runterstreichen und alles in einen String schreiben. Das ist nämlich dann maschinell nicht mehr simpel auftrennbar - genau deshalb hatte ich das Beispiel \"von und zu\" mit Leerzeichen gewählt.</p>",
        "id": 153858419,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1480004571
    },
    {
        "content": "<p>Das mit der deutschen url habe ich auch überlegt. Aber im Prinzip ist die national extension ja deswegen nicht im Core, weil sie ja einen national begrenzten scope hat. Und selbst wenn wir die url englisch machen, ist die Basis immer noch \"<a href=\"http://fhir.de\" target=\"_blank\" title=\"http://fhir.de\">fhir.de</a>\", was wohl die meisten anderen Affiliates davon abhalten würde, die extension zu verwenden, selbst wenn der hintere Teil der URL passt :)</p>",
        "id": 153858447,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1480023560
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> zu deinem Beispiel: Ja könnte man machen, allerdings können wir die eGK-Daten dann nicht mehr exakt rekonstruieren, da nicht unterscheidbar ist, ob es sich bei \"von der\" und \"Gräfin von\" um Namenszusatz+Vorsatzwort oder Vorsatzwort+Vorsatzwort handelt. Ebenso könnte man, wenn es nur ein humanname-own-prefix gibt nicht entscheiden, ob es sich dabei um einen Namenszusatz oder ein Vorsatzwort handelt. Allerdings ist das ein Kompromiss, den man bei V2 auch schon eingegangen ist.<br>\nWeiß nicht, ob das jemals jemand bereut hat???</p>",
        "id": 153858449,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1480024009
    },
    {
        "content": "<p>Wenn wir die Möglichkeit haben, die eGK exakt abzubilden, sollten wir das IMHO auch tun. Zumindest die Systeme, die Kartendaten verarbeiten, bilden das ja intern auch so ab, siehe Screenshot irgendwo viel weiter oben hier im Thread. Aus irgendeinem, sicher wohl bedachten, Grund sieht der eGK-Stammdatensatz es nun mal so vor.<br>\nAlso warum einen Kompromiss machen?</p>",
        "id": 153858454,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1480030199
    },
    {
        "content": "<p>Nein das passt so. Deutsche Extension mit deutschem Namen macht wahrscheinlich wirklich Sinn, sonst übersetzen wird die deutschen Begriffe ins englische und weder wir noch nicht-deutsch Sprechende verstehen nicht intutitiv worum es geht.<br>\nZum zweiten Punkt, ich war gedanklich schon bei deutschen Basisprofilen. Es macht allerdings absolut Sinn erstmal die EGK Profile zu finalisieren.</p>",
        "id": 153858473,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1480072582
    },
    {
        "content": "<p>Habt ihr schon mit deutschen Basisprofilen (Patient)begonnen? Ich wollte das mal die Tage angehen - dann könnte man auf dem nächsten InteropForum darüber diskutieren</p>",
        "id": 153858474,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1480072726
    },
    {
        "content": "<p>Genau. Von der eGK rückwärts zum Basisprofil denken.<br>\nWir hatten letzte Woche erstmal nur angefangen, die gesammelten Einzelteile aufzuarbeiten.<br>\nGrundsätzlichen wollen wir ja zu STU3 die Profile erstellen. Ich denke aber, es schadet nichts, dazu schon was zu sammeln. Tun wir ja im Prinzip schon die ganze Zeit ;-)</p>",
        "id": 153858475,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1480074646
    },
    {
        "content": "<p>Dann werde ich mal schauen ob ich die EGK Profile auf STU3 umgestellt bekomme. ClinFhir kann ja schon STU3, zur not schreib ichs von Hand</p>",
        "id": 153858481,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1480078560
    },
    {
        "content": "<p>Keine Eile. So lange Simplifier nicht STU3 ist können wir's eh nicht publizieren.</p>",
        "id": 153858517,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1480089204
    },
    {
        "content": "<p>Gibt's für STU3 in Simplifier einen Zeitplan?</p>",
        "id": 153858522,
        "sender_full_name": "dr Kai U. Heitmann",
        "timestamp": 1480097791
    },
    {
        "content": "<p>Es gibt die Absicht, Simplifier auf STU3 zu aktualisieren, sobald STU3 final ist. Ein Datum gibt's aber nicht. Ich habe Martijn heute nochmal an das Problem mit der Auflösung der canonical URLs erinnert. Am Mittwoch wird ein Simplifier Update eingespielt, so dass wir das am Freitag präsentieren können sollten. (Ohne bei \"US Lab\" zu landen :D )</p>",
        "id": 153858736,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1480365443
    },
    {
        "content": "<p><img alt=\":thumbsup:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/thumbsup.png\" title=\":thumbsup:\"> für das Resolve-Update ;)</p>",
        "id": 153858750,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1480369001
    },
    {
        "content": "<p><a href=\"http://fhir.de/StructureDefinition/betriebsstaetten-hierarchie\" target=\"_blank\" title=\"http://fhir.de/StructureDefinition/betriebsstaetten-hierarchie\">http://fhir.de/StructureDefinition/betriebsstaetten-hierarchie</a></p>",
        "id": 153858974,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1480430789
    },
    {
        "content": "<p>Hm...geht noch nicht.<br>\naber das hier: <a href=\"https://simplifier.net/resolve?canonical=http://fhir.de/StructureDefinition/betriebsstaetten-hierarchie\" target=\"_blank\" title=\"https://simplifier.net/resolve?canonical=http://fhir.de/StructureDefinition/betriebsstaetten-hierarchie\">https://simplifier.net/resolve?canonical=http://fhir.de/StructureDefinition/betriebsstaetten-hierarchie</a></p>",
        "id": 153858975,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1480430846
    },
    {
        "content": "<p>Ich glaube, wir müssen den redirect anpassen... vorher war's url=... <br>\njetzt canonical=...</p>",
        "id": 153858976,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1480430886
    },
    {
        "content": "<p>Die syntax muss lauten <a href=\"https://simplifier.net/resolve?canonical=\" target=\"_blank\" title=\"https://simplifier.net/resolve?canonical=\">https://simplifier.net/resolve?canonical=</a></p>",
        "id": 153858979,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1480434916
    },
    {
        "content": "<p>Redirect ist angepasst und geht (auch wenn das jetzt wirklich gar nix mit \"HumanName\" zu tun hat :D)</p>",
        "id": 153859001,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1480444884
    }
]