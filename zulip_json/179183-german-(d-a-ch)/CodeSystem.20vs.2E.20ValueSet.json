[
    {
        "content": "<p>Ich habe eine Verständnisfrage zu Code-Systemen und Value-Sets:<br>\nIst es <em>notwendig</em> immer ein Value-Set zu definieren, auch wenn dieses einfach nur <em>alle Codes</em> des Code-Systems enthält?<br>\nOder kann man in einem <code>CodeableConcept</code> beim System auch nur das Code-System angeben?<br>\nMein Verständnis ist, dass die Verwendung von Value-Sets eher auf komplexere Code-Systeme abziehlt, bei denen Codes wiederverwendet werden.<br>\nOder ist es \"good practice\"/\"nice to have\" immer ein Value-Set zu definieren?</p>\n<p>Gibt es etwas im Rahmen dieser Frage zu beachten, wenn sich Inhalte des Code-Systems aktualisieren respective erweitern?</p>",
        "id": 231927257,
        "sender_full_name": "Christian Nau",
        "timestamp": 1616745825
    },
    {
        "content": "<p>Wenn man es von der Seite \"Was ist ein ValueSet, was ist ein Codesystem\" betrachtet, liegt die Antwort bei: Mach ein ValueSet. Der Vorteil ist, dass bei den Profilen genauer gesagt werden kann, wie stark dieses gebunden ist: example, preferred, extensible, required. Außerdem können andere das ValueSet ebenfalls verwenden und es kann vermutlich auch besser geprüft werden, ob ein Code \"zulässig\" ist. Auch kann es schneller um Codes aus einem weiteren CS erweitert werden.<br>\nWenn man es von der Seite betrachtet: \"hier ist VS = CS\", dann geht natürlich auch die Variante \"Ich schreibe die CS-URL ins system und sage über die Kardinalität, ob es sein muss oder nicht, jedenfalls bei Slices\". Ich habe das aktuell z.B. beim ePflegebericht so gemacht, mir wurde dann aber im Rahmen des Ballots von einem Kliniker gesagt, dass er lieber die ValueSets hätte, da er diese besser verstehen könne.</p>\n<p>Mein Fazit für mich: Lieber VS bauen und einbinden, selbst wenn nur ein CS enthalten ist und dieses komplett.</p>",
        "id": 231947960,
        "sender_full_name": "Mareike Przysucha",
        "timestamp": 1616757402
    },
    {
        "content": "<p>Ich erhebe aber keinen Anspruch auf Korrektheit, das ist meine Meinung.</p>",
        "id": 231947995,
        "sender_full_name": "Mareike Przysucha",
        "timestamp": 1616757425
    },
    {
        "content": "<p>Danke für deine Meinung <span class=\"user-mention\" data-user-id=\"196115\">@Mareike Przysucha</span></p>",
        "id": 231950144,
        "sender_full_name": "Christian Nau",
        "timestamp": 1616758678
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"327858\">Christian Nau</span> <a href=\"#narrow/stream/179183-german-(d-a-ch)/topic/CodeSystem.20vs.2E.20ValueSet/near/231927257\">said</a>:</p>\n<blockquote>\n<p>Oder kann man in einem <code>CodeableConcept</code> beim System auch nur das Code-System angeben?</p>\n</blockquote>\n<p>Kleiner Hinweis: In <code>CodeableConcept</code> wird <em>immer</em> das CodeSystem angegeben, auch falls in einem Profil ein Value Set genutzt wird. Das value set beschränkt lediglich die Auswahl, <em>welche</em> Konzepte an der Stelle verwendbar sind.</p>",
        "id": 231958944,
        "sender_full_name": "Christof Gessner",
        "timestamp": 1616763437
    },
    {
        "content": "<p>Ich denke, es geht darum, im Profil im CodeableConcept das <code>system</code> fest vorzugeben als Alternative zum ValueSet-Binding.</p>\n<p>Beispiel: Ich möchte eine Condition mit einem ICD-10-GM Code, aber mir ist egal, welcher. Mache ich ein VS mit allen Codes aus dem Codesystem, oder schreibe ich unter <code>code</code> fest, dass <code>coding.system</code> die canonicalURL von ICD-10-GM ist? Beides geht, aber ersteres wäre vielleicht eleganter.</p>",
        "id": 231959555,
        "sender_full_name": "Mareike Przysucha",
        "timestamp": 1616763678
    },
    {
        "content": "<p>Wenn man kein ValueSet-Binding angibt, können aber meines Wissens nach die Codes nicht validiert werden. Wenn ich nur das <code>system</code> im Coding fest setze, sagt das ja nichts darüber aus, ob die Werte in <code>code</code> auch im CodeSystem vorhanden sind.</p>",
        "id": 231959981,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1616763852
    },
    {
        "content": "<p>Korrekt, in dem Fall findet außer einem String-Vergleich auf <code>system</code> keine weitere Validierung des Codes statt.<br>\nMachen wir in den Basisprofilen zum Beispiel dann, wenn wir zwar aussagen wollen, dass eine bestimmte Terminologie verwendet werden soll, uns diese aber gar nicht vollständig bekannt ist (z.B. PZN) und folglich gar keine Validierung möglich ist.  In solchen Fällen empfiehlt es sich mit Hilfe einer <code>matches('pattern')</code>-Invariante auf <code>value</code> zumindest die sytaktische Korrektheit des Codes zu überprüfen.</p>",
        "id": 231962429,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1616764841
    },
    {
        "content": "<p>Danke für den Hinweis <span class=\"user-mention\" data-user-id=\"193991\">@Christof Gessner</span> .<br>\n<span class=\"user-mention\" data-user-id=\"197470\">@Alexander Kiel</span> Oh das ist dann der entscheidende Punkt für mich: Ich muss die resourcen gegen die Profile validieren können, welche ein bestimmtes Code-System (und offensichtlich auch ein Value-Set) referenzieren.</p>",
        "id": 231962493,
        "sender_full_name": "Christian Nau",
        "timestamp": 1616764861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197470\">@Alexander Kiel</span> Das hatte ich auch vermutet, daher meine entsprechende Einschränkung oben. Danke für die Klarstellung!</p>",
        "id": 231962628,
        "sender_full_name": "Mareike Przysucha",
        "timestamp": 1616764914
    },
    {
        "content": "<p>Ah ok. Das mit der Validierung war mir so nicht bewusst. Dann werde ich in jedem Fall für alle bekannten Codes auch ValueSets einsetzen. Danke!</p>",
        "id": 231962760,
        "sender_full_name": "Christian Nau",
        "timestamp": 1616764954
    },
    {
        "content": "<p>Noch eine Frage: <br>\nAngenommen ich habe eine Observation die mit LOINC codiert werden soll. Wenn ich kein Profil hinterlege, gegen welches ValueSet wird dann dort validiert? <br>\nNur der String-Vergleich auf <code>system</code> kann es in dem Fall nicht sein (zumindest bei HAPI / SmileCDR) <span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span>. Dort habe ich bereits Fehler bei der Validierung erhalten, wenn ich für LOINC kein CodeSystem installiert/hinterlegt hatte.</p>",
        "id": 231963342,
        "sender_full_name": "Christian Nau",
        "timestamp": 1616765191
    },
    {
        "content": "<p>Observation.code wird gar nicht validiert, da es im Core nur eine Example-Binding gibt, was so viel heißt wie \"macht, was ihr wollt\".</p>",
        "id": 231963563,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1616765269
    },
    {
        "content": "<p>Ah, es kann sein, dass es bei HAPI noch eine zusätzliche Kontrolle gibt, die Prüft, ob der Code im CodeSystem vorhanden ist. (zumindest ist uns das schon aufgefallen, wenn wir Bindings an ein expandetes ValueSet hatten, für das es aber kein zugrunde liegendes CodeSystem gab). Ob dieser Mechanismus auch getriggert wird, wenn man nur einen fixed value auf system setzt, kann ich gerade auswendig nicht sagen.<br>\nDer .NET-Validator macht das jedenfalls nicht...</p>",
        "id": 231963996,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1616765420
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> ...?</p>",
        "id": 231964109,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1616765462
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> hat das vielleicht etwas damit zu tun? <a href=\"https://github.com/hapifhir/hapi-fhir/issues/2489\">https://github.com/hapifhir/hapi-fhir/issues/2489</a></p>",
        "id": 231964200,
        "sender_full_name": "Christian Nau",
        "timestamp": 1616765496
    },
    {
        "content": "<p>der Java Validator validiert jedes Coding gegen das System (falls er es kennt)</p>",
        "id": 231996194,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1616776901
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"327858\">Christian Nau</span> <a href=\"#narrow/stream/179183-german-(d-a-ch)/topic/CodeSystem.20vs.2E.20ValueSet/near/231964200\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"191451\">Patrick Werner</span> hat das vielleicht etwas damit zu tun? <a href=\"https://github.com/hapifhir/hapi-fhir/issues/2489\">https://github.com/hapifhir/hapi-fhir/issues/2489</a></p>\n</blockquote>\n<p>das ist ein hapi spezifisches Verhalten, ich erstelle gerade einen PR der dies behebt, bzw. einstellbar macht</p>",
        "id": 231996334,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1616776942
    },
    {
        "content": "<p>Generell zur Diskussion:<br>\nFalls kein Profil gesetzt wird in hapi gegen das CodeSystem validiert. Aktuell mit Error falls keine ValidationModul das CS kennt.<br>\nJava Validator und hapi haben unterschiedliche Terminologievalidierungsklassen und Verhalten. Der Java Validator nutzt <a href=\"http://tx.fhir.org\">tx.fhir.org</a>, hapi hat einen eigenen, internen Terminologievalidator. Der Java Validator gibt mittlerweile auch keine Errors mehr aus für unknown CS.</p>\n<p>Es empfiehlt sich eigentlich immer Profile zu erstellen gegen welche man validiert. In Profilen werden immer und ausschließlich ValueSets gebunden.</p>",
        "id": 231996633,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1616777059
    },
    {
        "content": "<p>Einen UseCase bei dem bei einer Observation nur gegen Loinc geprüft wird kann ich mir nicht vorstellen, man sollte innerhalb eines use-cases eigentlich fast immer auf eine explizite, oder mittels Filtern definierte Liste an Concepts kommen.</p>",
        "id": 231996873,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1616777137
    },
    {
        "content": "<p>Ok.<br>\nWenn Profile eingesetzt werden (empfohlen) -&gt; Value Sets unumgänglich<br>\nWenn keine Profile eingesetzt werden -&gt; Validierung gegen Code-System (bei HAPI)<br>\nDanke an alle!</p>",
        "id": 231997580,
        "sender_full_name": "Christian Nau",
        "timestamp": 1616777371
    }
]