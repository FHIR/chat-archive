[
    {
        "content": "<p>Hi, <br>\nbin heute über eine interessante Situation gestolpert, die die Handhabung von Paketen, Codesystemen und Valuesets ziemlich kompliziert macht.</p>\n<ol>\n<li>\n<p>Wir haben im Package <strong>de.basisprofil.r4 1.1.0</strong> ein CodeSystem für die ICDs, die <strong>Icd-10-gm</strong>, die selbst sich als <em>Platzhalter-CodeSystem</em> beschreibt. Gleichzeitig hat sich aber <strong>\"status\": \"active\"</strong> und <strong>\"date\": \"2021-02-17\"</strong> aber <strong>keine \"version\"</strong> gegeben.</p>\n</li>\n<li>\n<p>Hier gibt es auch ein ValueSet, dass auf das Platzhalter-CodeSystem verweist, und beim Package import auch expanded wird (und nicht enthält)</p>\n</li>\n<li>\n<p>Dann haben wir dann im Package <strong>de.medizininformatikinitiative.kerndatensatz.diagnose</strong> viele weitere CodeSystem(s) mit dem gleichgen URL wie in 1., aber mit <strong>\"status\": \"draft\"</strong>, <strong>ohne \"date\"* mit ensprechender </strong>\"version\"** (2020, 2021, etc)</p>\n</li>\n</ol>\n<p>4.Wenn man jetzt die Packete importiere hat $expland ein Problem. Zuerst muss ja die expation von 2. unvalidiert werden, aber weil die Systeme von 3 kein Datum haben und draft sind, werden sie nicht un das ValueSet berücksichtigt.</p>\n<p>Als Ergebniss kann man die Conditions nicht validieren, wenn sie ICD-Codes enthalten.</p>\n<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> &amp; <span class=\"user-mention\" data-user-id=\"193430\">@Alexander Zautke</span> ? Gerne jetzt auch live besprechen :-)</p>",
        "id": 259421056,
        "sender_full_name": "Stoyan Halkaliev",
        "timestamp": 1635440888
    },
    {
        "content": "<p>Ich denke das ist ein Issue des Validators, nicht der packages.</p>",
        "id": 259422040,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1635441248
    },
    {
        "content": "<p>Validatoren sollte man per parameter beibringen können welche Ressourcen verwendet werden sollen.</p>",
        "id": 259422211,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1635441304
    },
    {
        "content": "<p>Oder bei package import resourcen ignoriereren können</p>",
        "id": 259422287,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1635441338
    },
    {
        "content": "<p>Diese Entscheidungsproblematik wird immer wieder auftreten und kann nicht automatisiert gelöst werden.</p>",
        "id": 259422434,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1635441391
    },
    {
        "content": "<p>In diesem Fall ist es ziemlich eindeutig, wir brauchen für jedes ICD-CodeSystem entspreche ValueSets mit der gleichen Version. Die richtige CodeSytems/ValueSets sollten active sein und korrekte Datumsangaben haben und die Platzhalter wahrscheinlich draft. Die Condition-Resourcen müssen ja laut Profil system und version enthalten. Müsste dann mit dem Validator funktionieren. Oder?</p>",
        "id": 259425990,
        "sender_full_name": "Stoyan Halkaliev",
        "timestamp": 1635443052
    },
    {
        "content": "<p>Wenn ich unsere Diskussion von heute Abend zusammenfassen darf, ist die Idee vom ICD-ValueSet, dass es alle ICD-CodeSystems mit der gleichen URL enthalten soll. Die Concepts würden dann als Codes mehrfach enthalten sein, würden sich aber in der Version unterscheiden. </p>\n<p>Hatte gerade in einem anderen HL7 call Lloyd dazu befragt. Zitat „Das ist eine furchtbare Idee“. Zumindest sein Verständnis ist, dass in einer Expansion ein Code nur einmal vorkommen sollte. Allerdings hat auch eingeschränkt, dass er an dieser Stelle nicht die oberste Autorität ist und mich gebetteten den richtigen Leute in terminologies anzuschreiben. Was ich dann morgen mache. </p>\n<p>Auf jeden Fall danke für die Diskussion vorhin.</p>",
        "id": 259460390,
        "sender_full_name": "Stoyan Halkaliev",
        "timestamp": 1635460003
    },
    {
        "content": "<p>Das hängt alles davon ab, ob ich sage \"Code + CodeSystem\" definiert ein Konzept - oder \"Code +  CodeSystem + CodeSystemVersion\" definiert ein Konzept. <br>\nUnd: wie genau muss das Konzept definiert sein? Kann ich damit leben, dass der DisplayName zwischen Version X und Version Y geändert wurde (obwohl das Konzept in X und Y das gleiche ist)?</p>\n<p>Sprache ist lebendig, sie ändert sich ständig, und so auch die Wörter.</p>",
        "id": 259460883,
        "sender_full_name": "Christof Gessner",
        "timestamp": 1635460399
    },
    {
        "content": "<p>Zu unterscheiden wäre auch zwischen einer Expansion die explizit durch $expand durchgeführt wird und anschließend persistiert wird oder eine impliziten Expansion durch $valdiate-code welche theoretisch die Version des Codings einbeziehen könnte.</p>",
        "id": 259485815,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1635487051
    },
    {
        "content": "<p>Musst gestern leider offline, aber: \"Code + CodeSystem + CodeSystemVersion\" kann auch uneindeutig sein. (Mehrere packages können dieselben CS enthalten). Hier müsste ich einen Mechanismus haben mit dem ich Ressourcen Präferieren und ausschließen kann.</p>",
        "id": 259505136,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1635502482
    },
    {
        "content": "<p>Hast du ein Beispiel?</p>",
        "id": 259986267,
        "sender_full_name": "Frank Oemig",
        "timestamp": 1635854937
    },
    {
        "content": "<p>Ich denke, wir müssen hier unterteilen in: \"Was ist in einem Codesystem drin\" und \"Was wird in einer Codesystem-Ressource dargestellt?\". Code + Codesystem + Codesystemversion sollte eindeutig sein. Hier ist ja aber eher die Frage: \"Welche Codesystem-Ressource nehme ich?\"</p>",
        "id": 259986505,
        "sender_full_name": "Mareike Przysucha",
        "timestamp": 1635855067
    },
    {
        "content": "<p>Exakt. Genau genommen muss CS.url &amp; version &amp; language einzigartig sein. Wenn man in einem Kontext mehrere packages lädt kann es hier zu Duplizierungen der Ressourcen kommen. <br>\nDaher benötigt ein Valdiation-Stack eigentlich die Möglichkeit Präferenzen ausdrücken zu können bzw. automatisiert Rangfolgen bauen. Bspw. sollten empty CS generell ignoriert werden wenn das identische CS mit content bereits im Kontext vorhanden ist.</p>",
        "id": 260161157,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1635957479
    }
]