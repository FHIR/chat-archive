[
    {
        "content": "<p>Wie ist denn die Idee für die Repräsentation von Kreuz Stern und Kreuzcodes? Ich hätte erwartet, dass der Arzt z.B. eine Diagnose mit einem Kreuzcode und einem Sterncode dazu stellt. Dann gäbe es eine condition mit dem Kreuzcode und dem zugehörigen Sterncode dran. Aber das ist anders modeliert im Basisprofil: da kann an einem ICD-Code nochmal ein Haupt- bzw. Kreuz-Code dran hängen. Irgendwas hab ich da anscheinend nicht verstanden.</p>",
        "id": 172205505,
        "sender_full_name": "Johannes Höhn",
        "timestamp": 1564651949
    },
    {
        "content": "<p>für die Diagnosekodierubg haben wir vor Jahren dazu mal ein Konzept geschrieben, um eine technische Abbildung zu unterstützen und auf Interoperabilität zu trimmen. Damals war das für v2.x und V3 gedacht. Jetzt sollte das natürlich auf FHIR erweitert werden...</p>",
        "id": 172206698,
        "sender_full_name": "Frank Oemig",
        "timestamp": 1564653108
    },
    {
        "content": "<p>Wenn ich mich richtig erinnere ist in Condition.code der ganz Code enthalten, also bspw.: E10.30+ H36.0*</p>",
        "id": 172207399,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564653771
    },
    {
        "content": "<p>In den Extension wird dies dann aufgesplittet: Vorteil: dumme Systeme können den ganzen Code anzeigen. Extension aware Systeme haben Mehrwert durch die gleichzeitig übermittelte getrennte Darstellung durch die Extensionslsta</p>",
        "id": 172207528,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564653876
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span> <span class=\"user-mention\" data-user-id=\"194952\">@Julian Sass</span> hatte ich das so richtig im Kopf?</p>",
        "id": 172207542,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564653901
    },
    {
        "content": "<p>Richtig, siehe hier: <a href=\"https://simplifier.net/basisprofilde/condition-de-basis-0.2\" target=\"_blank\" title=\"https://simplifier.net/basisprofilde/condition-de-basis-0.2\">https://simplifier.net/basisprofilde/condition-de-basis-0.2</a></p>",
        "id": 172207577,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564653935
    },
    {
        "content": "<p>Wenn man unter Code den Slice ICD-10-gm ausklappt, sieht man die Extensions. Diese sind optional. In den meisten Fällen wird es ausreichen, einfach nur den postkoordinierten Code anzugeben.</p>",
        "id": 172207689,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564654014
    },
    {
        "content": "<p>Notiz an uns: Condition-Profil und Extensions auf R4 updaten!</p>",
        "id": 172207717,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564654047
    },
    {
        "content": "<p>Ja, völlig korrekt</p>",
        "id": 172207797,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1564654107
    },
    {
        "content": "<p>Im IG fehlt auch noch ein Beispiel, das die Extensions verwendet...</p>",
        "id": 172207836,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564654160
    },
    {
        "content": "<p>Unterstützung aus der Community willkommmen!</p>",
        "id": 172207943,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564654227
    },
    {
        "content": "<p>Falls jemand einen UseCase hat, der mit diesem Profil nicht ausreichend abgedeckt ist, bitte melden!</p>",
        "id": 172208045,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564654325
    },
    {
        "content": "<blockquote>\n<p>Im IG fehlt auch noch ein Beispiel, das die Extensions verwendet...</p>\n</blockquote>\n<p><a href=\"https://github.com/hl7germany/basisprofil-de-r4/issues/1\" target=\"_blank\" title=\"https://github.com/hl7germany/basisprofil-de-r4/issues/1\">https://github.com/hl7germany/basisprofil-de-r4/issues/1</a></p>",
        "id": 172208111,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564654394
    },
    {
        "content": "<p>Bezüglich dieser Extensions und im Hinblick auf die Migration auf R4:<br>\nWollen wir das beim Datentyp CodeableConcept belassen? Aktuell haben wir CodeableConcept mit required Binding auf ICD-10-gm.<br>\nWelche alternativen Codierungen könnten hier theoretisch vorkommen? Mir will nichts sinnvolles einfallen, da Kreuz-Stern-Notation ja nur bei ICD-10-GM vorkommt...<br>\nBei genauerem Nachdenken, würde ich sogar fast sagen, dass hier code ausreichend wäre, da system und version ja in keinem mir vorstellbaren Szenario von den Angaben im  eigentlichen Code abweichen würden. Weiterhin dienen die Extensions lediglich der maschinellen Auswertbarkeit, womit auch der Display-Value hinfällig wäre...<br>\nKönnten wir die Extensions damit nicht deutlich vereinfachen?</p>",
        "id": 172209379,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564655825
    },
    {
        "content": "<p>Vielen Dank für die Erklärung! Das macht es klar.</p>",
        "id": 172209603,
        "sender_full_name": "Johannes Höhn",
        "timestamp": 1564656040
    },
    {
        "content": "<p>In Implementers gibt es ein <a href=\"#narrow/stream/179166-implementers/topic/Validatior.20Error.20ICD-10.20codes\" title=\"#narrow/stream/179166-implementers/topic/Validatior.20Error.20ICD-10.20codes\">Thema</a> zu ICD-10 CodeSystemen zur Validierung. Gibt es dazu in Deutschland schon Anstrengungen, oder kommen bisher alle ohne gefülltes CodeSystem und damit ohne Validierung aus?</p>",
        "id": 172209897,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1564656363
    },
    {
        "content": "<p>Ich versuch's mal am Beispiel:</p>\n<p>STU3 würde so aussehen</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;code&gt;</span>\n    <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://fhir.de/StructureDefinition/icd-10-gm-haupt-kreuz/0.2&quot;</span><span class=\"nt\">&gt;</span>\n       <span class=\"nt\">&lt;valueCodeableConcept&gt;</span>\n            <span class=\"nt\">&lt;coding&gt;</span>\n                <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://fhir.de/CodeSystem/dimdi/icd-10-gm&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;version</span> <span class=\"na\">value=</span><span class=\"s\">&quot;2019&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;A12.3&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;/coding&gt;</span>\n        <span class=\"nt\">&lt;/valueCodeableConcept&gt;</span>\n    <span class=\"nt\">&lt;/extension&gt;</span>\n    <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://fhir.de/StructureDefinition/icd-10-gm-stern/0.2&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;valueCodeableConcept&gt;</span>\n            <span class=\"nt\">&lt;coding&gt;</span>\n                <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://fhir.de/CodeSystem/dimdi/icd-10-gm&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;version</span> <span class=\"na\">value=</span><span class=\"s\">&quot;2019&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;B45.6&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;/coding&gt;</span>\n        <span class=\"nt\">&lt;/valueCodeableConcept&gt;</span>\n    <span class=\"nt\">&lt;/extension&gt;</span>\n    <span class=\"nt\">&lt;coding&gt;</span>\n        <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://fhir.de/CodeSystem/dimdi/icd-10-gm&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;version</span> <span class=\"na\">value=</span><span class=\"s\">&quot;2019&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;A12.3+ B45.6*&quot;</span><span class=\"nt\">/&gt;</span>\n       <span class=\"nt\">&lt;display</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Beispieltext&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/coding&gt;</span>\n<span class=\"nt\">&lt;code&gt;</span>\n...\n</pre></div>\n\n\n<p>Mögliche Vereinfachung mit primitiven code-Extensions, aufgehängt an  Condition.code.coding.code anstelle von Condition.code:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;code&gt;</span>\n    <span class=\"nt\">&lt;coding&gt;</span>\n        <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://fhir.de/CodeSystem/dimdi/icd-10-gm&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;version</span> <span class=\"na\">value=</span><span class=\"s\">&quot;2019&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;A12.3+ B45.6*&quot;</span><span class=\"nt\">/&gt;</span>\n           <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://fhir.de/StructureDefinition/icd-10-gm-haupt-kreuz/0.2&quot;</span><span class=\"nt\">&gt;</span>\n              <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;A12.3&quot;</span><span class=\"nt\">/&gt;</span>\n           <span class=\"nt\">&lt;/extension&gt;</span>\n           <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://fhir.de/StructureDefinition/icd-10-gm-stern/0.2&quot;</span><span class=\"nt\">&gt;</span>\n               <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;B45.6&quot;</span><span class=\"nt\">/&gt;</span>\n           <span class=\"nt\">&lt;/extension&gt;</span>\n       <span class=\"nt\">&lt;display</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Beispieltext&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/coding&gt;</span>\n<span class=\"nt\">&lt;code&gt;</span>\n...\n</pre></div>\n\n\n<p>Würden wir damit Information/Funktionalität verlieren?</p>",
        "id": 172209921,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564656394
    },
    {
        "content": "<blockquote>\n<p>In Implementers gibt es ein <a href=\"#narrow/stream/179166-implementers/topic/Validatior.20Error.20ICD-10.20codes\" title=\"#narrow/stream/179166-implementers/topic/Validatior.20Error.20ICD-10.20codes\">Thema</a> zu ICD-10 CodeSystemen zur Validierung. Gibt es dazu in Deutschland schon Anstrengungen, oder kommen bisher alle ohne gefülltes CodeSystem und damit ohne Validierung aus?</p>\n</blockquote>\n<p>Für FHIR-Server ist es nicht wirklich sinnvoll, ICD-10 Validierung gegen ein expandeted ValueSet zu machen (falls du das meinst). Schon allein wegen der großen Menge an Codes und der Post-Koordination.  Ein FHIR-Server würde ICD-10 codes also unvalidiert durchwinken, weil keine Expansion vorhanden ist oder (das wäre das richtige vorgehen) die Validierung einem Terminologie-Server überlassen, der über die $validate-code-Operation aufgerufen wird.</p>\n<p>Ob es Terminologie-Server am Markt gibt, die sowohl ICD-10-GM einschließlich Post-Koordination validieren können <em>und</em> über eine FHIR-Api verfügen weiß ich aktuell nicht...</p>",
        "id": 172210180,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564656690
    },
    {
        "content": "<p>Kurze Verständnisfrage in diesem Zusammenhang:<br>\nder Inhalt der Extensions , z.B.:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;valueCodeableConcept&gt;</span>\n            <span class=\"nt\">&lt;coding&gt;</span>\n                <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://fhir.de/CodeSystem/dimdi/icd-10-gm&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;version</span> <span class=\"na\">value=</span><span class=\"s\">&quot;2019&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;A12.3&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;/coding&gt;</span>\n        <span class=\"nt\">&lt;/valueCodeableConcept&gt;</span>\n</pre></div>\n\n\n<p>könnte nicht validiert werden, da die Codes für sich allein stehend per Definition nicht erlaubt sind, oder?</p>",
        "id": 172215794,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564662585
    },
    {
        "content": "<p>Wir haben in den Extensions also kein ValueSet-Binding im eigentlichen Sinne...?</p>",
        "id": 172215911,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564662680
    },
    {
        "content": "<blockquote>\n<p>Für FHIR-Server ist es nicht wirklich sinnvoll, ICD-10 Validierung gegen ein expandeted ValueSet zu machen (falls du das meinst). Schon allein wegen der großen Menge an Codes und der Post-Koordination.  Ein FHIR-Server würde ICD-10 codes also unvalidiert durchwinken, weil keine Expansion vorhanden ist oder (das wäre das richtige vorgehen) die Validierung einem Terminologie-Server überlassen, der über die $validate-code-Operation aufgerufen wird.</p>\n</blockquote>\n<p>Z.Z. verwenden wir einfach den Standalone Validator (die JAR). Dieser Validiert ICD-10 halt einfach nicht. Die Fehler stören uns an der Stelle schon einfach. Wir hatten vor neben dem IG auch einen Testdatengenerator zu schreiben und beides gegenseitig zu testen indem wir den Standalone Validator benutzen.</p>\n<p>Ich habe einmal auf <a href=\"http://tx.fhir.org/r4\" target=\"_blank\" title=\"http://tx.fhir.org/r4\">tx.fhir.org/r4</a> die $validate-code-Operation probiert und bin damit sowohl am CodeSystem als auch am ValueSet gescheitert. Das ganze einfach mit gender. Einzig <a href=\"http://hapi.fhir.org/baseR4\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4\">hapi.fhir.org/baseR4</a> kann $validate-code auf ValueSet.</p>\n<blockquote>\n<p>könnte nicht validiert werden, da die Codes für sich allein stehend per Definition nicht erlaubt sind, oder?</p>\n</blockquote>\n<p>Ich kenne mich mit ICD-10 so wie wie nicht aus. Ist es so, dass gewisse Codes wie <code>A12.3</code> gar nicht allein vorkommen können?</p>",
        "id": 172217721,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1564664368
    },
    {
        "content": "<p>Ich schätze, was die Validierung von ICD-10-GM betrifft, insbesondere  von post-koordinierten Codes, können wir uns nicht auf die internationale Community und deren Tools verlassen. Ist halt (wie so oft) eine deutsche Sonderlocke.<br>\nMI-I  verwendet Ontoserver zur Validierung von komplexen Terminologien. Der beherrscht auch $validate-code. Ob er ICD10-GM kann, weiß ich allerdings nicht.</p>",
        "id": 172223445,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564668361
    },
    {
        "content": "<p>Nebenbei: Der JAR-Validator sollte eigentlich nur eine Warnung ausgeben, dass er ICD-10 nicht validieren kann, keinen Fehler...</p>",
        "id": 172223567,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564668435
    },
    {
        "content": "<p>Was wir im Profil machen können und was jedem FHIR-Server zu validieren zuzumuten wäre, ist zu prüfen, ob das CodeSystem richtig gesetzt ist, dass die Versionsnummer angegeben wurde und dass der Code vorhanden und syntaktisch korrekt (RegEx-Pattern) ist. Alles weitere geht realistisch betrachtet nur mit angebundenem Terminologie-Server.</p>",
        "id": 172224012,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564668687
    },
    {
        "content": "<ul>\n<li>HiGHmed verwendet Ontoserver. MII hat übergreifend noch keine Entscheidung getroffen. ICD10-GM Support testen wir (Köln) gerade auf Basis der selbst gestrickten Lösung von den Ontoserver Entwicklern. Lizenzfrage ist auch noch offen.</li>\n</ul>",
        "id": 172236285,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1564676897
    },
    {
        "content": "<blockquote>\n<p>Nebenbei: Der JAR-Validator sollte eigentlich nur eine Warnung ausgeben, dass er ICD-10 nicht validieren kann, keinen Fehler...</p>\n</blockquote>\n<p>Genau das hat <span class=\"user-mention\" data-user-id=\"221444\">@Noemi Deppenwiese</span> auch angemerkt. Tut er aber leider nicht.</p>",
        "id": 172239716,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1564679299
    },
    {
        "content": "<p>Oh ok.</p>",
        "id": 172239825,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564679400
    },
    {
        "content": "<p>Ich schau mir das nachher gerne mal an</p>",
        "id": 172239882,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564679415
    },
    {
        "content": "<p>Bastel da eh gerade daran rum</p>",
        "id": 172239935,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564679464
    },
    {
        "content": "<blockquote>\n<p>Was wir im Profil machen können und was jedem FHIR-Server zu validieren zuzumuten wäre, ist zu prüfen, ob das CodeSystem richtig gesetzt ist, dass die Versionsnummer angegeben wurde und dass der Code vorhanden und syntaktisch korrekt (RegEx-Pattern) ist. Alles weitere geht realistisch betrachtet nur mit angebundenem Terminologie-Server.</p>\n</blockquote>\n<p>Kann man die deutschen Codes aufzählen? Sagen wir unter 100.000 Stück. Im Internationalen sind sie der Meinung, dass das geht bzw. haben das schon und wollen es in <a href=\"http://tx.fhir.org\" target=\"_blank\" title=\"http://tx.fhir.org\">tx.fhir.org</a> einspielen, sobald die Lizenzfrage geklärt ist. In GBA/BBMRI wollen wir die internationalen ICD-10 Codes nehmen, wobei mir noch nicht klar ist, wer diese im Falle von deutschen Standorten übersetzen soll. Bzw. welcher deutsche Forscher dann mit den internationalen Codes bei der Suche klar kommt. Ich höre immer, dass der Unterschied zwischen ICD-10 und ICD-10-GM nicht groß sein soll, habe aber keine Vorstellung davon.</p>",
        "id": 172240211,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1564679665
    },
    {
        "content": "<p>Die Deutschen Codes in allen Kombinationen welche erlaubt sind sind zu groß zum abzählen</p>",
        "id": 172241090,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564680288
    },
    {
        "content": "<p>Man könnte ein ValueSet erstellen mit allen nicht-kombinierten Codes (afaik ~70.000) aber das wäre bestenfalls geeignet um das Set zwischen Terminoloieservern auszutauschen. Eine Implementierung, die bei $validate-Code erst das ValueSet lädt und nach dem Code durchsucht, wie das Standard-FHIR-Server machen, wäre zu inperformant. Validierung muss idR in Echtzeit passieren...</p>",
        "id": 172241393,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564680544
    },
    {
        "content": "<p>Hhm mit ElasticSearch sollte ein HAPI das locker packen. Aaaber wir brauchen auch die Grammatik und die Properties der einzelnen Konzepte. Also einen dedizierten Terminologieendpunkt.</p>",
        "id": 172243322,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564681881
    },
    {
        "content": "<p>Ad code vs. Coding vs. CodeableConcept für die Extensions:<br>\nIch würde hier aus Prinzip sehr ungern auf den Datentyp code gehen, da dadurch die Semantik ohne Kenntnis der Struktur (nämlich der Extension) nicht eindeutig ist.<br>\nSehr gern aber die Kreuz/Stern/usw.-Extensions als Coding.</p>",
        "id": 172253520,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1564687980
    },
    {
        "content": "<p>Würde ein System ohne Kenntnis der Struktur die Extensions nicht einfach ignorieren? Oder anders gefragt: was könnte ein System ohne Kenntnis der Extensions mit den Codings anfangen?</p>",
        "id": 172253668,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564688114
    },
    {
        "content": "<p>Na zumindest die semantische Bedeutung (\"Hier ist ein ICD-10-Code\") raus holen</p>",
        "id": 172253754,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1564688191
    },
    {
        "content": "<p>für die semantische Bedeutung bräuchte es noch einen code für das Concept der Extension, aber das führt dann langsam zu weit.</p>",
        "id": 172253855,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564688293
    },
    {
        "content": "<p>aber ja, wenn ich das System kenne weiß ich schonmal woher der Code kommt</p>",
        "id": 172253882,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564688338
    },
    {
        "content": "<p>Eben.<br>\nIch denke, Terminologen würden uns zu Recht ins Gesicht springen, wenn da nur der Code ohne System erscheint.</p>",
        "id": 172253992,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1564688430
    },
    {
        "content": "<p>beim Validieren sollte das auch kein Problem sein, einzelne codes sind ja auch valide</p>",
        "id": 172253993,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564688436
    },
    {
        "content": "<p>mit System kann ich immerhin die codes der Extensions von denen ich nicht weiß was sie bedeuten validieren <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 172254065,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564688511
    },
    {
        "content": "<p>Zum Beispiel auch das ;)</p>",
        "id": 172254165,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1564688570
    },
    {
        "content": "<p>Und vielleicht noch ein technisch stärkerer Punkt:<br>\nICD-10-Codes sind standalone ohne Angabe der Version sematisch nicht eindeutig. Spätestens dann braucht es Coding, um auch version zu füllen (so sind die Extensions in STU3 profiliert).</p>\n<p>Gilt analog natürlich für OPS usw.</p>",
        "id": 172255338,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1564689456
    },
    {
        "content": "<p>Das hat Simone in Ihrem Vereinfachungsbeispiel ein wenig unterschlagen ;)</p>",
        "id": 172255591,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1564689590
    },
    {
        "content": "<p>Ich bin davon ausgegangen, dass die Codes alleine nicht gültig und damit auch nicht validierbar sind, aber da kann ich mich irren... <br>\nWollte man sie validieren, könnte man System und Version vom postkoordinierten Code verwenden, da mir wie gesagt kein Szenario einfällt, bei dem System und Version des Codes in der Extension vom postkoordinierten Code abweichen.</p>",
        "id": 172256095,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564689862
    },
    {
        "content": "<p>Nebenbei ist mir vorhin aufgefallen, dass man an im Profil eines Codings in Forge kein ValueSet binding machen kann. Ich frage mich, ob das ein Bug in Forge ist...</p>",
        "id": 172256287,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564690021
    },
    {
        "content": "<p>Einzelne ICD-10 Codes sind, wie Patrick geschrieben hat, grundsätzlich validierbar.<br>\nUnd da sollte die Aussage dann auch self-contained sein. Ein valueCoding lässt sich mit Standardmitteln validieren. Ein valueCode, für das man zum Validieren erst auf (parent).system und (parent).version zurückgreifen muss, wäre m.E. schon eine ziemliche Krücke.</p>",
        "id": 172256475,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1564690130
    },
    {
        "content": "<p>Du meinst ein Datentyp-Profil auf Coding?</p>",
        "id": 172256545,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1564690183
    },
    {
        "content": "<p>Stimmt, gilt übrigens auch für Datentyp-Profile auf CodeableConcept.<br>\nLiegt's daran, dass root-Elemente eigentlich nie ein Binding haben?</p>",
        "id": 172256920,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1564690431
    },
    {
        "content": "<p>Sprich: man kann ein Binding auf Elemente vom Typ X legen, aber nicht direkt auf den Typ X.</p>",
        "id": 172257009,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1564690496
    },
    {
        "content": "<p>(Ich glaube, das Problem hatten wir schon mal, als wir mit Basisprofile 0.1 angefangen haben :)</p>",
        "id": 172257055,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1564690528
    },
    {
        "content": "<p>eld-11</p>",
        "id": 172257553,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564690817
    },
    {
        "content": "<p><a href=\"http://www.hl7.org/fhir/elementdefinition-definitions.html#ElementDefinition.binding\" target=\"_blank\" title=\"http://www.hl7.org/fhir/elementdefinition-definitions.html#ElementDefinition.binding\">http://www.hl7.org/fhir/elementdefinition-definitions.html#ElementDefinition.binding</a></p>",
        "id": 172257569,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564690826
    },
    {
        "content": "<p>binding.empty() or type.code.empty() or type.select((code = 'code') or (code = 'Coding') or (code='CodeableConcept') or (code = 'Quantity') or (code = 'string') or (code = 'uri')).exists()</p>",
        "id": 172257596,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564690846
    },
    {
        "content": "<p>binding sollte schon mit code gehen</p>",
        "id": 172257651,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564690882
    },
    {
        "content": "<p>sieht nach Bug in Forge aus</p>",
        "id": 172257664,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564690894
    },
    {
        "content": "<p>Ja, aber nee:</p>",
        "id": 172257678,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1564690906
    },
    {
        "content": "<p>auch wenn ich bei Coding einfach system fix setzen würde</p>",
        "id": 172257698,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564690920
    },
    {
        "content": "<p>Ich such gerade - was ist denn der type im root-Element einer StructureDefinition?</p>",
        "id": 172257814,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1564690984
    },
    {
        "content": "<p>domain resource</p>",
        "id": 172257886,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564691037
    },
    {
        "content": "<p>Aber ein fixed value auf url würde einen Validator nur zum Stringvergleich von System veranlassen, nicht zum validieren des Codes...</p>",
        "id": 172257887,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564691039
    },
    {
        "content": "<p>Es geht gerade etwas durcheinander :)</p>",
        "id": 172257989,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1564691091
    },
    {
        "content": "<p>Thema 1: ICD-10 Extensions: code oder Coding?<br>\nThema 2: Datentyp-Profile erlauben kein VS-Binding im root-Element</p>",
        "id": 172258078,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1564691147
    },
    {
        "content": "<p>2. wäre ein Killerkriterium für Coding...</p>",
        "id": 172258175,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564691195
    },
    {
        "content": "<p>Nochmal: sprichst Du von einem Profil auf den Datentyp Coding oder von einem Profil/einer Extension, das/die ein valueCoding enthält?</p>",
        "id": 172258232,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1564691251
    },
    {
        "content": "<p>Letzteres geht problemlos, ersteres nicht</p>",
        "id": 172258254,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1564691269
    },
    {
        "content": "<p>Ah, sorry. Denkfehler meinerseits...</p>",
        "id": 172258339,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1564691302
    },
    {
        "content": "<p>noch kurz zu thema 3: fixed system urls + code könnte ich in einem Validator schon validieren. Ich stimme aber zu, dass es in der Realität anders aussehen kann.</p>",
        "id": 172258351,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564691317
    },
    {
        "content": "<p>Ich finde ja, man sollte Standard-Mechanismen nutzen, wenn's sie schon gibt.<br>\nAlso z.B. wenn ich ausdrücken will, dass ich den Code X aus dem System Y in der Version Z habe, ganz einfach den passenden Datentyp verwenden (und ein ValueSet binden). Dann klappt's auch mit dem Validator ;-))))</p>",
        "id": 172258556,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1564691413
    },
    {
        "content": "<p>Wenn's recht ist, mache ich mich heute mal an die Übertragung der ICD-Condition nach R4... (vorbehaltlich unvorhergesehener Arbeitsunterbrechungen...).<br>\nIch poste Links, sobald es was zu sehen gibt...</p>",
        "id": 172653426,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565159232
    },
    {
        "content": "<p>Hier sind die (validen) Beispiele für ICD-codierte Diagnosen in R4:<br>\n<a href=\"https://simplifier.net/basisprofil-de-r4/~resources?category=Example&amp;exampletype=Condition\" target=\"_blank\" title=\"https://simplifier.net/basisprofil-de-r4/~resources?category=Example&amp;exampletype=Condition\">https://simplifier.net/basisprofil-de-r4/~resources?category=Example&amp;exampletype=Condition</a><br>\nDas Profil ist hier: <br>\n<a href=\"https://simplifier.net/basisprofil-de-r4/conditiondeicd10\" target=\"_blank\" title=\"https://simplifier.net/basisprofil-de-r4/conditiondeicd10\">https://simplifier.net/basisprofil-de-r4/conditiondeicd10</a></p>",
        "id": 172663594,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565170839
    },
    {
        "content": "<p>Ich habe noch Invarianten hinzugefügt, die kontrollieren, dass die Codes in den Extensions auch in der postkoordinierten Form enthalten sind.</p>",
        "id": 172665854,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565173609
    },
    {
        "content": "<p>Hinweis: Wir hatten ja schon mal die Diskussion über Zweck und Nutzen von Basisprofilen, in denen nichts verbindlich ist. Um die gegebenen Beispiele überhaupt validieren zu können, habe ich ein Profil mit verbindlicher ICD-Codierung erstellt. Außerdem habe ich ein ValueSet erstellt, das ein paar einzelne ICD-Codes (sowohl einzeln als auch post-koordiniert) enthält, um die Validierung der Codes zu simulieren  und die Bindings überprüfen zu können...</p>",
        "id": 172666461,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565174371
    },
    {
        "content": "<blockquote>\n<p>Außerdem habe ich ein ValueSet erstellt, das ein paar einzelne ICD-Codes (sowohl einzeln als auch post-koordiniert) enthält, um die Validierung der Codes zu simulieren  und die Bindings überprüfen zu können...</p>\n</blockquote>\n<p>Ist dieses ValuSet öffentlich einsehbar? Ich hab das von den Profilen ausgehend nicht gefunden.</p>",
        "id": 172671713,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1565179817
    },
    {
        "content": "<p>Hier: <a href=\"https://simplifier.net/basisprofil-de-r4/icd-10-gm\" target=\"_blank\" title=\"https://simplifier.net/basisprofil-de-r4/icd-10-gm\">https://simplifier.net/basisprofil-de-r4/icd-10-gm</a><br>\n...ist aber -wie gesagt- nur zum Spielen. Ich prüfe damit, ob die required bindings richtig greifen....</p>",
        "id": 172673653,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565181486
    },
    {
        "content": "<p>Ich hab jetzt hier mal alles soweit zusammengeschrieben: <a href=\"https://simplifier.net/guide/basisprofil-de-r4/Condition.code\" target=\"_blank\" title=\"https://simplifier.net/guide/basisprofil-de-r4/Condition.code\">https://simplifier.net/guide/basisprofil-de-r4/Condition.code</a><br>\nInvarianten, die die Äquivalenz der KBV-Diagnosesicherheit mit clinicalStatus und verificationStatus abgleichen, sind ebenfalls hinzugefügt.</p>\n<p>Wer Lust und Zeit hat, kann die Invarianten gerne mal auf die Probe stellen, ob unsinnige/ungültige Kombinationen auch korrekt erkannt werden....</p>",
        "id": 172674055,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565181862
    },
    {
        "content": "<blockquote>\n<p>Hier: <a href=\"https://simplifier.net/basisprofil-de-r4/icd-10-gm\" target=\"_blank\" title=\"https://simplifier.net/basisprofil-de-r4/icd-10-gm\">https://simplifier.net/basisprofil-de-r4/icd-10-gm</a><br>\n...ist aber -wie gesagt- nur zum Spielen. Ich prüfe damit, ob die required bindings richtig greifen....</p>\n</blockquote>\n<p>Ich habe <code>http://fhir.de/ValueSet/dimdi/icd-10-gm</code> verfolgt und kam auf die <a href=\"https://simplifier.net/BasisprofilDE/icd-10-gm\" target=\"_blank\" title=\"https://simplifier.net/BasisprofilDE/icd-10-gm\">STU3 Version</a>. Daher habe ich die neue R4 Version nicht gleich gefunden. Danke!</p>",
        "id": 172675564,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1565183083
    },
    {
        "content": "<p>Guter Hinweis! Ich mache gleich mal eine Anfrage bei Firely auf, wir man den Redirect für CanonicalUrls auf R4 erzwingen kann :)</p>",
        "id": 172679003,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565185518
    },
    {
        "content": "<p>Müssten die Invarianten nicht auf dem valueCoding Slice definiert werden? Ich hab es jetzt mit $validate getestet aber value[x] dürfte doch nichts über 'code' wissen?</p>",
        "id": 172681984,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1565187698
    },
    {
        "content": "<p>War auch mein initialer Gedanke, aber auf der Slice-Ebene hat es nicht funktioniert...<br>\nNoch eleganter wäre es m.M.n nach, die Invariante in der jeweiligen Extension zu definieren, so dass sie nur dann überhaupt ausgewertet werden, wenn die Extensions auch vorhanden sind. Allerdings ist mir (noch) nichts dazu eingefallen, wie ich in der FHIR-Path-Expression in genau <em>das</em> Coding navigiere, an dem die Extension hängt...<br>\nMit %resource.code.coding.where(extension('bla').exists) würd's wohl gehen, aber das ist ein bisschen schräg. :-/<br>\nSchöner wär's, direkt über parent zu gehen, oder so...</p>",
        "id": 172682413,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565188026
    },
    {
        "content": "<p>Was genau hat denn da nicht funktioniert? Ich versuch es später mal zu validieren</p>",
        "id": 172682958,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1565188408
    },
    {
        "content": "<p>Ich hatte die Invarianten zunächst auf dem Slice ICD-10-GM definiert, da haben die Constraints aber nicht gegriffen. Als ich sie dann auf coding hochgerückt habe, hat's plötzlich funktioniert...</p>",
        "id": 172683394,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565188748
    },
    {
        "content": "<blockquote>\n<p>value[x] dürfte doch nichts über 'code' wissen?</p>\n</blockquote>\n<p>Was genau meinst du damit?</p>",
        "id": 172683550,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565188875
    },
    {
        "content": "<p>mit code ist doch das valueCoding.code gemeint nicht?</p>",
        "id": 172683718,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1565189007
    },
    {
        "content": "<p>'code' in der Invariante würde jedoch auf ein Child von value[x] zeigen</p>",
        "id": 172683799,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1565189049
    },
    {
        "content": "<p>Moment, ich habe auf Condition.code.coding eine Invariante <code>extension('http://fhir.de/StructureDefinition/icd-10-gm-haupt-kreuz').empty() or code.contains($this.extension('http://fhir.de/StructureDefinition/icd-10-gm-haupt-kreuz').value.code)</code></p>\n<p>Damit geht <code>code.contains()....</code> auf Condition.code.coding.code, sprich auf den eigentlichen ICD-Code...</p>",
        "id": 172683977,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565189174
    },
    {
        "content": "<p>oder meinst du $this.extension('http://fhir.de/StructureDefinition/icd-10-gm-haupt-kreuz').value.<em>code</em> ?<br>\nDas zeigt in der Extension auf valueCoding.code...</p>",
        "id": 172684146,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565189295
    },
    {
        "content": "<p>\"In FHIRPath, choice elements are labeled according to the name without the '[x]' suffix\"</p>",
        "id": 172684423,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565189494
    },
    {
        "content": "<blockquote>\n<p>'code' in der Invariante würde jedoch auf ein Child von value[x] zeigen</p>\n</blockquote>\n<p>Ja. Und...? <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 172684655,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565189626
    },
    {
        "content": "<p>Sorry, wir reden glaube ich an einander vorbei. Ich mein die Invarianten auf der Extension. Z.b. icd-4 <code>code!='A' or (%resource.verificationStatus.coding.where(code='refuted').exists() and %resource.clinicalStatus.empty())</code></p>",
        "id": 172685004,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1565189832
    },
    {
        "content": "<p>Diese ist auf value[x] definiert. 'code' sollte jedoch auf valueCoding.code zeigen, oder?</p>",
        "id": 172685056,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1565189879
    },
    {
        "content": "<p>Tut‘s doch, oder? Was wäre denn aus FHIR-Path-Sicht der Unterschied?</p>",
        "id": 172685520,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565190168
    },
    {
        "content": "<p>Auch wenn die Invariante auf value[x] anstatt auf valueCoding definiert ist?</p>",
        "id": 172685826,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1565190368
    },
    {
        "content": "<p>Würde im schlimmsten Fall bedeuten, dass die Invariante auf alle möglichen Typen für value geprüft wird. Aber da die Extension nur Coding zulässt...</p>",
        "id": 172741680,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565245218
    },
    {
        "content": "<p>Oh man, klar. Wenn ich ein Coding prüfe hab ich ja auch sofort code als Child. Sorry, Denkfehler, war nicht zu Ende gedacht...</p>",
        "id": 172742929,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1565247164
    },
    {
        "content": "<p>Eine Frage zum ursprünglichen Topic: die Idee Kreuz-Stern-Code wie in <a href=\"https://simplifier.net/basisprofilde/condition-de-basis-0.2\" target=\"_blank\" title=\"https://simplifier.net/basisprofilde/condition-de-basis-0.2\">https://simplifier.net/basisprofilde/condition-de-basis-0.2</a> abzubilden führt dazu, dass alle Eigenschaften der \"Kombinationsdiagnose\" eben auch dieser Diagnose zugeordnet werden. Insbesondere offset und severity können sich aber durchaus für die Einzeldiagnosen unterscheiden. Deshalb würde ich vorschlagen noch eine weitere extension \"basedOn\" einzuführen, dass folgendermaßen benutzt wird:<br>\nDie Condition C1 hat das Label \"DM2 mit Nephropathie\", den Code \"E11.20\" und die \"Extension-Codierung\" \"E11.20# N08.3*\"<br>\nDie Condition C2 hat das Label \"Nephropathie bei DM2\", den Code \"N08.3\" und die \"Extension-Codierung\" \"E11.20# N08.3*\"<br>\nDann soll \"C2.basedOn = C1\" gesetzt werden.<br>\nDamit könnte man C1 und C2 eine unterschiedliche Severity geben.<br>\nDie entsprechende Erweiterung ist in <a href=\"https://simplifier.net/medicor4/conditiondiagnosis1-duplicate-4\" target=\"_blank\" title=\"https://simplifier.net/medicor4/conditiondiagnosis1-duplicate-4\">https://simplifier.net/medicor4/conditiondiagnosis1-duplicate-4</a> vorgeschlagen.</p>",
        "id": 176114910,
        "sender_full_name": "André Sander",
        "timestamp": 1568909302
    },
    {
        "content": "<p>Wir hatten das \"Zerpflücken\" der postkoordinierten Codes anfangs mal diskutiert, aber nach Rücksprache mit den Terminologen war klar, dass ein Postkoordinierter ICD-Code als \"ein Code\" und nicht \"zwei abhängige\" Codes zu betrachten ist.<br>\nNebenbei: für die Abbildung von Ätiologie (sp?) gibt es schon eine Standard-Extension \"dueTo\": <a href=\"http://hl7.org/fhir/condition-profiles.html\" target=\"_blank\" title=\"http://hl7.org/fhir/condition-profiles.html\">http://hl7.org/fhir/condition-profiles.html</a></p>",
        "id": 176116004,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1568910085
    },
    {
        "content": "<p>RIchtig, Kreuz-Stern ist semantisch immer zusammenhängend, die können keine unterschiedliche Schweregrade o.dgl. haben.</p>\n<p>due-to hatten wir damals auch schon einmal diskutiert, aber befunden, dass das nicht die Zusammenhänge innerhalb einer Kreuz-Stern-codierten Diagnose darstellt.</p>",
        "id": 176118755,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1568911995
    }
]