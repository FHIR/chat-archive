[
    {
        "content": "<p>Zwecks besserer Strukturierung würde ich gern das URL/OID-Thema aus <a href=\"https://chat.fhir.org/#narrow/stream/german.20(d-a-ch)/topic/Betriebsst.C3.A4tten\" target=\"_blank\" title=\"https://chat.fhir.org/#narrow/stream/german.20(d-a-ch)/topic/Betriebsst.C3.A4tten\">https://chat.fhir.org/#narrow/stream/german.20(d-a-ch)/topic/Betriebsst.C3.A4tten</a> hier weiterführen.<br>\nDie bisherige Diskussion dort dreht sich darum, ob wir für offiziell beim DIMDI registrierte \"well known concepts\" offizielle OIDs verwenden oder, wie bisher vorgesehen, jeweils ein NamingSystem mit URL definieren. Das ganze im Kontext der deutschen Basis-Profile.</p>",
        "id": 153889718,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1494592065
    },
    {
        "content": "<p>Theoretische Möglichkeiten:<br>\na) ausschließlich URL erlauben<br>\nb) ausschließlich OID erlauben<br>\nc) sowohl URL als auch OID in Identifiern erzwingen (möglich dank CodeableConcept)<br>\nd) URL und OID erlauben, mindestens eins davon muss verwendet werden<br>\ne) URL und OID erlauben, genau eins davon muss verwendet werden</p>",
        "id": 153889719,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1494592159
    },
    {
        "content": "<p>c) geht nicht bei identifiern da hier system vom typ uri ist und nicht wiederholbar<br>\nzweimal derselbe identifer nur mit unterschiedlichem system value bei identischer Semantik ist überhaupt nicht gut</p>\n<p>somit sind in dem Identifier Fall eigentlich nur noch die Varianten a,b und e möglich</p>",
        "id": 153889725,
        "sender_full_name": "Peter Scholz",
        "timestamp": 1494593445
    },
    {
        "content": "<p>(sorry, Unfug, ich war gedanklich bei Codes, nicht bei Identifiern)</p>",
        "id": 153889728,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1494593784
    },
    {
        "content": "<p>Insofern richtig, was Du sagst, Peter.<br>\nMan könnte natürlich 2 Identifier vorschreiben, die auf das selbe Konzept mit Hilfe unterschiedlicher Systeme verweisen (das wäre das, was ich mit c/d meinte). Ist aber sicher nicht schön.</p>",
        "id": 153889729,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1494594196
    },
    {
        "content": "<p>Möglichkeit e) bricht im Grunde genommen die Interoperabilität.<br>\nWenn Software A nur URLs kennt (weil: das ist ja ausreichend) und Software B nur OIDs (weil: das ist ja ausreichend), können sie nicht miteinander kommunizieren. Außer, sie sind in der Lage, beides zu verstehen oder aber sie folgen einem abgeleiteten Profil, das von e) wiederum auf a) oder b) constrained.</p>",
        "id": 153889730,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1494596053
    },
    {
        "content": "<p>Andererseits wäre der Charme von e), dass wir es den Implementierern überlassen können, was sie tatsächlich verwenden möchten. Mit anderen Worten: wir machen das Thema zu einem \"Problem anderer Leute\" ...</p>",
        "id": 153889731,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1494596148
    },
    {
        "content": "<p>Wobei OID vs. URL natürlich in gleichem Maß auf Codes zutrifft.<br>\nDa kommt dann noch dazu, dass wir z.B. ICD-10-GM nach aktuellem Stand als system(URL) +version kennzeichnen (aus dem Grund, das Basisprofil genau nicht jährlich um eine OID zu erweitern).<br>\nUnd das gilt analog auch für andere Codesysteme, z.B. OPS.</p>",
        "id": 153889735,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1494596878
    },
    {
        "content": "<p>Ich glaube wir machen uns momentan da ein bischen zu sehr einen Kopf, das es für die Interoperabilität ein Problem wäre.<br>\nIm Ausgangsfall war es ja so, das  system/@value für BSNR eine Konstante ist, die wir im Profil vorgeben. </p>\n<p>Allgemein verbieten können wir ja eh nicht, auch HL7 sagt ja nur best practice. Zudem liefern viele Identifier Beispiele mehr oder minder gemischt mal URLs mal OIDs für system/@value. von daher sollten wir hier nicht zu viel Arbeit reinstecken.</p>\n<p>Mein Ansatz war halt der, lediglich zu sagen, wenn wir in unserer Extension ein Codesystem, Valueset oder Identifikationsschema verwenden das bereits bei DIMDI mit einer OID registriert ist, so sollten wir diese OID auch verwenden und uns nicht eine eigene URL ausdenken, die wir dann auch noch pflegen müssen</p>\n<p>btw. es ginge auch alle offiziellen OIDs mit einer resolveable URL darzustellen, der Code dazu findet sich auch beim DIMDI findet:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;urn:oid:1.2.276.0.76.4.17&quot;</span><span class=\"nt\">/&gt;</span>\n</pre></div>\n\n\n<p>ist equivalent zu </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://portal.dimdi.de/websearch/servlet/Gate?accessid=showOidDoc&amp;query=oid=1.2.276.0.76.4.17&quot;</span><span class=\"nt\">/&gt;</span>\n</pre></div>",
        "id": 153889736,
        "sender_full_name": "Peter Scholz",
        "timestamp": 1494596965
    },
    {
        "content": "<p>bei Deinem Beispiel resolved die URL dann aber grade nicht  auf die gültigen Inhalte des jeweiligen Codesystems sondern erst durch die Version wird es eindeutig.<br>\nWobei wir da ja auf kein Problem laufen, da bei CodeableConcept URL und OID parallel existieren können.</p>",
        "id": 153889737,
        "sender_full_name": "Peter Scholz",
        "timestamp": 1494597148
    },
    {
        "content": "<p>Der Pflegeaufwand verschiebt sich letztlich nur, zumindest für Codesysteme (siehe oben).<br>\nUnd für ICD-10-GM, OPS usw. wissen wir, dass da jährlich neue OIDs kommen. Dinge wie die BSNR sind tendenziell \"ewig gleich\"</p>",
        "id": 153889739,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1494597256
    },
    {
        "content": "<p>generell präferiere ich URLs, aus dem Grund dass diese sprechend sind und somit intuitiver von Menschen zu verstehen. Wenn man dies automatisch mappen möchte muss man genau einmal nachschlagen, bzw in das NamingSystem Betriebstättennummer reinschauen und sich dort die oid holen. Wenn es als OID abgebildet wird muss jeder der nicht alle oids im Kopf jedes mal nachschlagen was die OID zu bedeuten hat. </p>",
        "id": 153889743,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1494597393
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span>  zwei parallele Registries für identische Inhalte sind ein Konzeptfehler. </p>\n<p>De jure ist das DIMDI und sein OID Register die Registratur für Codesysteme, Valuesets und Indentifiezierungsschemata. Von daher nicht an anderer Stelle noch einmal pflegen.</p>\n<p>Die Menschenlesbarkeit von FHIR Nachrichten sollte jetzt nicht das Kriterium sein, zumal deutsche URL Namen auch nur in DACH verstanden werden, wogegen DIMDI registrierte OIDs zwingend auch eine englische Beschreibung haben.</p>",
        "id": 153889744,
        "sender_full_name": "Peter Scholz",
        "timestamp": 1494597791
    },
    {
        "content": "<p>Moin, ich würde mich der Meinung von <span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span>  anschließen. Das DIMDI ist de jure für die OIDs zuständig, aber deren Registry-Servlet passt konzeptuell nicht zu FHIR. Wenn man die Vorteile der maschinellen Prüfung von Instanzen mit FHIR beihalten möchte, muss man dann entweder das DIMDI bewegen ihre Registry ordentlich abfragbar zu machen oder in das NamingSystem Betriebstättennummer schauen! </p>",
        "id": 153889842,
        "sender_full_name": "Hannes Ulrich",
        "timestamp": 1494834524
    },
    {
        "content": "<p>Ich denke,es wäre mal interessant zu erfahren, in wie weit das OID-Konzept schon bei den Implementieren angekommen ist. Ich habe das subjektive Gefühl, dass OIDs in vielen Implementierungen nicht mehr sind, als ein \"unhandlicher hartcodierter string\". Wenn dem so wäre, sehe ich die Verwendung von URL aus Sicht der Implementierer als Fortschritt an.<br>\nKlar macht das auf der Seite der Spezifizierung mehr (Verwaltungs-)Aufwand, aber das ist ja der Geist von FHIR: <br>\nYou can move complexity around, but you can't make it go away <img alt=\":party_popper:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/party_popper.png\" title=\":party_popper:\"> <br>\nUnd: Im Zweifel für den Implementierer...</p>",
        "id": 153889930,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1494870524
    }
]