[
    {
        "content": "<p>Ich habe in den letzten Tagen etwas an der Migration des Practitioner-Profils herumgetüftelt, und folgendes überlegt:<br>\nIch würde es uns gerne ersparen, künftig drölfzig NamingSystems für die verschiedenen Zahnarztnummernkreise in den Basisprofilen pflegen zu müssen, daher habe ich mal versucht, ob man das nicht bei der Validierung mit einem Pattern-Matching abfangen kann.</p>\n<p>Tatsächlich funktioniert das mit einer Invariante: matches('<a href=\"http://fhir.de/NamingSystem/kzv/[0-9][0-9]/zahnarztnummer\" target=\"_blank\" title=\"http://fhir.de/NamingSystem/kzv/[0-9][0-9]/zahnarztnummer\">http://fhir.de/NamingSystem/kzv/[0-9][0-9]/zahnarztnummer</a>') im Identifier-Profil: <a href=\"https://simplifier.net/basisprofil-de-r4/identifierzanr\" target=\"_blank\" title=\"https://simplifier.net/basisprofil-de-r4/identifierzanr\">https://simplifier.net/basisprofil-de-r4/identifierzanr</a></p>\n<p>Die Spezifikation de NamingSystems könnte ungefähr folgendermaßen aussehen: <a href=\"https://simplifier.net/basisprofil-de-r4/zahnarztnummer\" target=\"_blank\" title=\"https://simplifier.net/basisprofil-de-r4/zahnarztnummer\">https://simplifier.net/basisprofil-de-r4/zahnarztnummer</a><br>\nDie Absicht ist es, in die Beschreibung des Naming-Systems eine Tabelle mit den möglichen Werten für \"XX\" einzufügen, allerdings rendert Simplifier im Moment den Markup-Code noch nicht (ist in künftigen Releases jedoch vorgesehen)</p>\n<p>Damit wäre in der Validierung sichergestellt, dass nur gültige URLs für ZANRs angegeben werden können, ohne dass wir alle einzeln aufzählen müssen. Sieht jemand darin einen Nachteil...?</p>",
        "id": 173357881,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565945793
    },
    {
        "content": "<p>ich finde es elegant und sinnvoll. Evtl. wird manches Tooling das noch nicht beherrschen. Der Java Validator sollte es aber können, .NET war der code auch schon da aber nicht verlinkt/oder auskommentiert.</p>",
        "id": 173358002,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1565945949
    },
    {
        "content": "<p>Aktuell funktioniert es in .NET. Wenn ich diese Ressource (<a href=\"https://simplifier.net/basisprofil-de-r4/practitioner-example\" target=\"_blank\" title=\"https://simplifier.net/basisprofil-de-r4/practitioner-example\">https://simplifier.net/basisprofil-de-r4/practitioner-example</a>) auf Simplifier validiere, greift die Invariante und weist auf die ungültige URL hin.</p>",
        "id": 173362856,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565951475
    },
    {
        "content": "<p>Wir könnten das Pattern theoretisch noch verfeinern, um ungültige ZKV-Nummern rauszufiltern, aber ich denke, das ginge zu weit :).<br>\nIch wäre aber nicht abgeneigt, die Severity von aktuell \"warning\" auf \"error\" zu erhöhen...</p>",
        "id": 173362970,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565951604
    },
    {
        "content": "<p>Besser, als die Tabelle im NamingSystem zu pflegen, wäre es auch, auf einer extern verwaltete, autoritative Quelle von ZKV-Nummern zu verweisen, sofern jemand eine kennt....</p>",
        "id": 173363055,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565951691
    },
    {
        "content": "<p>Pattern macht Sinn, denke ich.<br>\nIch würde allerdings dann doch so weit gehen, ausschließlich die erlaubten in der RegEx zu listen. Es sind ja nicht so viele.</p>\n<p>Die offizielle Liste suche ich gleich mal</p>",
        "id": 173363599,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1565952368
    },
    {
        "content": "<p>Q: <a href=\"https://www.gkv-datenaustausch.de/media/dokumente/leistungserbringer_1/zahnaerzte/technische_anlagen___aktuell_1/20170727_TA_Version_3_8_oA.pdf\" target=\"_blank\" title=\"https://www.gkv-datenaustausch.de/media/dokumente/leistungserbringer_1/zahnaerzte/technische_anlagen___aktuell_1/20170727_TA_Version_3_8_oA.pdf\">https://www.gkv-datenaustausch.de/media/dokumente/leistungserbringer_1/zahnaerzte/technische_anlagen___aktuell_1/20170727_TA_Version_3_8_oA.pdf</a></p>\n<p>(Seite 77)</p>",
        "id": 173364121,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1565953057
    },
    {
        "content": "<p>...wenn wir die RegEx konkreter machen, dann müssen wir halt auch immer unser Profil anpassen, wenn sich an den Nummern etwas ändert. Davor graust's mir ein wenig, zumal wir vermutlich die letzten wären, die das mitbekommen...</p>",
        "id": 173367075,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565956478
    },
    {
        "content": "<p>Beim Practitioner stellt sich übrigens mal wieder die Frage nach dem Wert des Basisprofils...<br>\nIch habe aktuell eines im R4-Projekt, bei dem ich völlig sinnfrei die LANR <em>und</em> die ZANR auf 1..1 gesetzt habe, da dich die Validierung testen wollte. <br>\nSobald ich beides wieder auf 0..1 setzte verliert sich m.E. der Sinn, da der Validator alles durchwinken würde (open Slicing!). Für abgeleitete Profile ist das Basisprofil denkbar ungünstig, da in den seltensten Fällen <em>sowohl</em> ZANR <em>als auch</em> LANR benötigt würde. Die abgeleiteten Profile wären also nur unnötig aufgebläht.</p>\n<p>Ich tendiere daher dazu, es bei den Identifier-Profilen zu belassen und die Best-Practise-Ansätze im Leitfaden zu beschreiben (<a href=\"https://simplifier.net/guide/basisprofil-de-r4/ZahnarztnummerZANR\" target=\"_blank\" title=\"https://simplifier.net/guide/basisprofil-de-r4/ZahnarztnummerZANR\">https://simplifier.net/guide/basisprofil-de-r4/ZahnarztnummerZANR</a>).</p>\n<p>Gerne hätte ich auch ein oder zwei konkretere Profile, mit denen man anständig validieren kann (z.B. Profil für \"Kassenzahnarzt\") , aber ich wüsste nicht, was man da außer dem Identifier sinnvollerweise als Pflichtfeld definieren könnte/sollte...</p>",
        "id": 173368204,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565957707
    },
    {
        "content": "<p>Dass sich die Struktur der KVen bzw. KZVen ändert, passiert glaube ich extrem selten. Das dürfte vertretbarer Aufwand sein ;-)</p>",
        "id": 173371489,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1565960788
    },
    {
        "content": "<p>Mir war die Tatsache, dass vier davon schon durchgestrichen sind verdächtig. Würden wir die denn auch erlauben wollen? Könnte ja sein, dass jemand historische Daten exportieren muss, aus Zeiten als es diese noch gab. Wir müssten dann zwei Invarianten machen, eine mit Error, falls komplett ungültig und eine mit Warnung, falls deprecated :headscratch:</p>",
        "id": 173375256,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1565963891
    },
    {
        "content": "<p>Ich hatte die durchgestrichenen (die Bezirke der KZV BW) seinerzeit nicht als NamingSystem aufgenommen.<br>\nIn der Annahme, dass die KZV BW die Aufgaben der früheren 4 Bezirke übernimmt, sollte das ausreichend, ganz besonders im Kontext eines NamingSystems.<br>\nDa würde ich also eher abwarten, bis sich jemand beschwert.</p>",
        "id": 173383881,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1565970249
    },
    {
        "content": "<p>Im Übrigen bin ich ebenfalls dafür, es für Practitioner bei Identifier-Profilen zu belassen.<br>\nSoweit ich den praktischen Einsatz der aktuellen Basisprofile im Blick habe, bestehen da doch divergente Anforderungen, ob/wann man die diversen Identifier (und auch die spezifischen HumanName- und Address-Profile) tatsächlich benötigt. Es ergibt sich also eher eine \"0..0-Hell\".</p>\n<p>Davon ab werden gerade für Practitioner (und auch Organisationen) gern mal logische Referenzen verwendet (vulgo: reference by identifier), d.h. man müsste in letzter Konsequenz auch überall, wo Referenzen auf z.B. Practitioner möglich sind, entsprechende Slices einführen ...<br>\nIch bin weit davon entfernt, das für wartbar oder gar sinnvoll zu halten.</p>",
        "id": 173434037,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1566032927
    }
]