[
    {
        "content": "<p>Hallo zusammen, ich bin gerade dabei $document als ein Plug-In für Vonk zu implementieren. <br>\nAls Beispiel hatte wollte ich einfachheitshalber einen Medikationsplan Plus erzeugen. Hierbei stellt sich mir jedoch gerade die Frage, was passiert, sollte eine Resource, die inkludiert werden soll, nicht verfügbar sein. Soll nur ein Hinweis als OperationOutcome zum Bundle hinzugefügt werden? Wird die gesamte Operation abgebrochen? Leider geht dies nicht für mich aus der Definition von $document hervor. Gibt's diesbezüglich Meinungen?</p>",
        "id": 153994877,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1536509683
    },
    {
        "content": "<p>Sehr guter Gedanke. Ich habe bei HAPI damals einfach nur alles inkludiert was verfügbar ist. Dies nochmals gegen Composition abzugleichen ist aber eine sehr gute Idee. <br>\nSollte eine Resource nicht verfügbar sein würde ich die komplette Operation mit 500 abrechen da das Dokument nicht  (komplett) erstellt werden kann, und die Ursache ins OperationOutcome  packen.</p>",
        "id": 153994885,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536516181
    },
    {
        "content": "<p>Fehlende direkt referenzierte Ressourcen sind auf jeden Fall ein Error:<br>\n\"Any resource referenced directly in the Composition SHALL be included in the bundle when the document is assembled.\"<br>\n<a href=\"http://build.fhir.org/documents.html\" target=\"_blank\" title=\"http://build.fhir.org/documents.html\">http://build.fhir.org/documents.html</a></p>",
        "id": 153994886,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536518328
    },
    {
        "content": "<p>Das steht zwar nicht direkt bei der Spec der $document-Operation, ist aber ziemlich eindeutig.</p>",
        "id": 153994887,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536518374
    },
    {
        "content": "<p>Auf einem produktiven Server macht man sich natürlich schon Gedanken, wie man referentielle Integrität wahren kann. Auf einem Testserver wird das aber eher hinderlich.</p>",
        "id": 153994888,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536518701
    },
    {
        "content": "<p>Hallo,<br>\nda wir ja beim Medikationsplan immer noch davon ausgehen, dass die Dokumente immer „als ganzes“ auf einen Server gepostet oder von einem Server abgerufen werden, und keine Möglichkeit zur Löschung einzelner Ressourcen vorgesehen ist, muss es schon mit seltsamen Dingen zugehen, wenn eine einzelne Ressource einfach verschwindet. In so fern sehe ich das ebenfalls als harten Fehler, der zu einem Abbruch der Transaktion führen sollte.<br>\nGenau so würde ich auch das Posten eines Bundles auf einen Medikationsplan-Server als Ganz-oder-Gar-nicht-Transaktion sehen.</p>",
        "id": 153995164,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1536561299
    },
    {
        "content": "<p>Super, vielen Dank für die Hinweise. HAPI hat die tolle Eigenschaft, dass es möglich ist zu bestimmen, dass eine Ressource nicht gelöscht werden kann, sollte eine Composition noch darauf verweisen. Bei Vonk kann ich dies nicht so direkt einstellen. Daher kamen meine Überlegungen, was passiert sollte jetzt doch mal eine Resource nicht mehr vorhanden sein.</p>\n<p>Da, wie oben zitiert, nur <strong>direkt</strong> referenzierte Ressourcen mit einem SHALL versehen sind, gehe ich dann richtig davon aus, dass für alle weiteren indirekt referenzierten aber nicht vorhandenen Ressourcen nur eine Warning mit ins Bundle gepackt werden soll? Also z.B. im Falle eines MedicationStatements welches durch eine List referenziert wird.</p>",
        "id": 153995176,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1536569480
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> Transaktionen sind per definitionem immer \"ganz oder gar nicht\", sonst wären sie in FHIR-speak ein batch.<br>\nHier haben wir aber ein document, das sowieso (als Bundle an [base]/Bundle gesendet) \"ganz oder gar nicht\" ist ;-)</p>\n<p><span class=\"user-mention\" data-user-id=\"193430\">@Alexander Zautke</span> Die Spec sagt dazu, dass das der Server entscheidet ...<br>\nIm konkreten Fall des <strong>Medikationsplans</strong> wäre es wohl ziemlich sinnbefreit, die List <strong>ohne MedicationStatement</strong> zu schicken ;-)<br>\nIn anderen Fällen kann das natürlich durchaus sinnvoll sein</p>",
        "id": 153995359,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536597286
    },
    {
        "content": "<p>Schreit das nicht förmlich danach eine Option für die Operation einzuführen? Entweder als Element in der OperationDefinition oder als Parameter in der URL. Und sei es nur für die es nur für diese spezielle Medikationsplan-Operation?</p>",
        "id": 153995394,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1536602749
    },
    {
        "content": "<p>Sodass der Client sagen kann, dass in einem bestimmten Use Case es keinen Sinn macht, wenn der Server selbst bestimmen kann?</p>",
        "id": 153995395,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1536602795
    },
    {
        "content": "<p>Klar sehe ich auch, dass es überhaupt keinen Sinn macht, nur dass es theoretisch valide ist die Operation nicht abzubrechen sollten die Medication Statements nicht vorhanden sein. Ich würde es nur irgendwie \"schöner\" finden, wenn man das Verhalten vorgeben würde. Und sei es beispielsweise als Extension auf OperationDefinition.</p>",
        "id": 153995401,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1536603103
    },
    {
        "content": "<p>Es ist valide im Sinn der FHIR Core-Spezifikation. In den MPPlus würde genau diese Ergänzung ganz sicher mit reingehören; so wie insgesamt eine Beschreibung der API. Sprich: eigentlich muss da genau Deine OperationDefiniton \"$documentWithAllChildren\" oder vielleicht \"$document?fullRecursion=true\" hin.<br>\nSollte man das in den implementers-Stream werfen? Ich denke schon, dass so ein IN-Parameter für die 80% sinnvoll wäre.</p>",
        "id": 153995537,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536610567
    },
    {
        "content": "<p>+1 $document sollte beide Modi beherrschen, per Parameter gesteuert. <span class=\"user-mention\" data-user-id=\"193430\">@Alexander Zautke</span> wirfst du das Thema nach nebenan in den Implementers?</p>",
        "id": 153995678,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536659553
    },
    {
        "content": "<p>FYI: es gibt einen fhir/documents-Stream: <a href=\"#narrow/stream/97-fhir.2Fdocuments\" title=\"#narrow/stream/97-fhir.2Fdocuments\">https://chat.fhir.org/#narrow/stream/97-fhir.2Fdocuments</a></p>",
        "id": 153996168,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1536738589
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> Transaktionen sind per definitionem immer \"ganz oder gar nicht\", sonst wären sie in FHIR-speak ein batch.<br>\nHier haben wir aber ein document, das sowieso (als Bundle an [base]/Bundle gesendet) \"ganz oder gar nicht\" ist ;-)</p>\n</blockquote>\n<p>Post an [base]/Bundle würde bedeuten, dass das Bundle als solches persistiert und nicht aufgesplittet wird. In diesem Fall brauchen wir uns über $document gar keine Gedanken machen, da es auf dem Server keine Compositions gibt, nur Bundles...</p>",
        "id": 153996169,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1536738837
    },
    {
        "content": "<blockquote>\n<p>Es ist valide im Sinn der FHIR Core-Spezifikation. In den MPPlus würde genau diese Ergänzung ganz sicher mit reingehören; so wie insgesamt eine Beschreibung der API. Sprich: eigentlich muss da genau Deine OperationDefiniton \"$documentWithAllChildren\" oder vielleicht \"$document?fullRecursion=true\" hin.</p>\n</blockquote>\n<p>Das wird ja eigentlich über den Parameter \"graph\" geregelt, der genau definiert, an welcher Stelle wie tief rekursiert werden soll...<br>\n<a href=\"http://build.fhir.org/composition-operation-document.html\" target=\"_blank\" title=\"http://build.fhir.org/composition-operation-document.html\">http://build.fhir.org/composition-operation-document.html</a></p>",
        "id": 153996170,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1536738981
    },
    {
        "content": "<p>Nach meiner Auffassung gibt es bei $document nur \"ganz oder gar nicht\":<br>\n\"The server takes the composition resource, locates all the referenced resources and other additional resources as configured or requested and <strong>either returns a full document bundle, or returns an error.</strong>\"<br>\nWas genau \"ganz\" bedeutet muss entweder im Server als default hinterlegt sein, oder der Client kann seine Vorstellung von \"ganz\" kundtun, indem er eine GraphDefinition übergibt. Entweder das klappt dann, oder halt nicht.<br>\nAber \"halbe\" Dokumente gibt's nicht.</p>",
        "id": 153996172,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1536739235
    },
    {
        "content": "<p>Die Spezifikation von FHIR Documents erklärt indirekt referenzierte Ressourcen aber ausdrücklich als optional bzw. implementierungsabhängig:<br>\n\"Other resources that these referenced resources refer to may also be included in the bundle if the document construction system chooses to do so. Including these additional resources will make the document bigger but will save applications from needing to retrieve the linked resources if they need them while processing the document. Thus, whether these linked resources should be included or not depends on the implementation environment. \"</p>\n<p>D.h. die Definition von \"alles\" ist hierdurch relativiert.</p>\n<p>graph hatte ich tatsächlich nicht auf dem Schirm. Wie würde eine Wildcard in einer GraphDefinition aussehen? Und wäre ein simpler Parameter hier nicht trotzdem deutlich einfacher?</p>",
        "id": 153996185,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536747716
    },
    {
        "content": "<p>Mhm, d.h. man müsste jede Reference als ein \"link\" element in die GraphDefinition packen. Hätte den Vorteil, dass der Client genau sagen könnte was an indirekten References jetzt unbedingt notwendig ist. Für Wildcard Use Cases wäre es aber irgendwie schon schön sagen zu können, dass die GraphDefinition alle Links einer Resource enthalten soll.</p>",
        "id": 153996203,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1536754061
    },
    {
        "content": "<p>Ich lese die Spezifikation so: Jedes System kann selbst entscheiden, welche Resourcen es bei $document mitbundelt und welche nicht.<br>\nWenn ein System aber so konfiguriert ist, dass bestimmte Referenzen Teil eines Document-Bundles sind, dann wäre eine 404 beim Versuch die Instanz einer Composition zu bundlen immer noch ein harter Fehler. \"Optional\" beziehe ich hier auf die Konfiguration, nicht jedoch auf die Laufzeit.</p>",
        "id": 153996211,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1536756044
    },
    {
        "content": "<p>Bzgl GraphDefinition mit Wildcard kuckstu hier: <a href=\"http://build.fhir.org/graphdefinition.html#examples\" target=\"_blank\" title=\"http://build.fhir.org/graphdefinition.html#examples\">http://build.fhir.org/graphdefinition.html#examples</a></p>",
        "id": 153996213,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1536756170
    },
    {
        "content": "<blockquote>\n<p>Und wäre ein simpler Parameter hier nicht trotzdem deutlich einfacher?</p>\n</blockquote>\n<p>Ich wäre der Auffassung, dass das im Normalfall nicht der Client zu entscheiden hat. Der Server muss einen Plan haben (als GraphDefinition oder sonst wie), wie ein Document zu bauen ist und sich strikt daran halten. Wenn der Versuch, für eine Composition-Instanz nach Plan ein Dokument zu bauen fehlschlägt, dann ist das ein Fehler. Das muss sich der Client dann mit einem OperationOutcome zufrieden geben.</p>",
        "id": 153996214,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1536756453
    },
    {
        "content": "<blockquote>\n<p>Wenn ein System aber so konfiguriert ist, dass bestimmte Referenzen Teil eines Document-Bundles sind, dann wäre eine 404 beim Versuch die Instanz einer Composition zu bundlen immer noch ein harter Fehler. \"Optional\" beziehe ich hier auf die Konfiguration, nicht jedoch auf die Laufzeit.</p>\n</blockquote>\n<p>Absolut d'accord bezüglich 404, und auch bezüglich des Verständnisses von \"optional\". Das ist Sache der konkreten, möglicherweise Use Case-spezifischen, Implementierung.<br>\nFür einen generischen FHIR-Server aber trotzdem wünschenswert, wenn der Client das steuern kann.</p>",
        "id": 153996253,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536762273
    },
    {
        "content": "<p>und diese Steuerung wäre als parameter für die document operation deutlich leichter als das Erstellen von GraphDefinitions</p>",
        "id": 153996259,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536762683
    },
    {
        "content": "<p>BTW, $document hat durch den Text in <a href=\"https://hl7.org/fhir/STU3/graphdefinition.html#document\" target=\"_blank\" title=\"https://hl7.org/fhir/STU3/graphdefinition.html#document\">https://hl7.org/fhir/STU3/graphdefinition.html#document</a> einen in der OperationDefinition nicht spezifizierten Parameter für GraphDefinition auch schon in STU3 :D Man findet immer irgendwo noch Leichen im Keller^^</p>",
        "id": 156442298,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1547914279
    }
]